
Placa_Display.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003088  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002918  08003194  08003194  00013194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005aac  08005aac  00020090  2**0
                  CONTENTS
  4 .ARM          00000000  08005aac  08005aac  00020090  2**0
                  CONTENTS
  5 .preinit_array 00000000  08005aac  08005aac  00020090  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005aac  08005aac  00015aac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08005ab0  08005ab0  00015ab0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000090  20000000  08005ab4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000b8  20000090  08005b44  00020090  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000148  08005b44  00020148  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020090  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000718b  00000000  00000000  000200b9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000163a  00000000  00000000  00027244  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000718  00000000  00000000  00028880  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_macro  00016c31  00000000  00000000  00028f98  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_line   00006366  00000000  00000000  0003fbc9  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_str    000815f9  00000000  00000000  00045f2f  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .comment      0000007b  00000000  00000000  000c7528  2**0
                  CONTENTS, READONLY
 19 .debug_ranges 00000648  00000000  00000000  000c75a8  2**3
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_frame  00001e40  00000000  00000000  000c7bf0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000090 	.word	0x20000090
 8000128:	00000000 	.word	0x00000000
 800012c:	0800317c 	.word	0x0800317c

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000094 	.word	0x20000094
 8000148:	0800317c 	.word	0x0800317c

0800014c <ST7735_Select>:
 800014c:	b580      	push	{r7, lr}
 800014e:	af00      	add	r7, sp, #0
 8000150:	2200      	movs	r2, #0
 8000152:	2110      	movs	r1, #16
 8000154:	4802      	ldr	r0, [pc, #8]	; (8000160 <ST7735_Select+0x14>)
 8000156:	f001 fd64 	bl	8001c22 <HAL_GPIO_WritePin>
 800015a:	bf00      	nop
 800015c:	bd80      	pop	{r7, pc}
 800015e:	bf00      	nop
 8000160:	40010800 	.word	0x40010800

08000164 <ST7735_Unselect>:
 8000164:	b580      	push	{r7, lr}
 8000166:	af00      	add	r7, sp, #0
 8000168:	2201      	movs	r2, #1
 800016a:	2110      	movs	r1, #16
 800016c:	4802      	ldr	r0, [pc, #8]	; (8000178 <ST7735_Unselect+0x14>)
 800016e:	f001 fd58 	bl	8001c22 <HAL_GPIO_WritePin>
 8000172:	bf00      	nop
 8000174:	bd80      	pop	{r7, pc}
 8000176:	bf00      	nop
 8000178:	40010800 	.word	0x40010800

0800017c <ST7735_Reset>:
 800017c:	b580      	push	{r7, lr}
 800017e:	af00      	add	r7, sp, #0
 8000180:	2200      	movs	r2, #0
 8000182:	2102      	movs	r1, #2
 8000184:	4806      	ldr	r0, [pc, #24]	; (80001a0 <ST7735_Reset+0x24>)
 8000186:	f001 fd4c 	bl	8001c22 <HAL_GPIO_WritePin>
 800018a:	2005      	movs	r0, #5
 800018c:	f001 fad2 	bl	8001734 <HAL_Delay>
 8000190:	2201      	movs	r2, #1
 8000192:	2102      	movs	r1, #2
 8000194:	4802      	ldr	r0, [pc, #8]	; (80001a0 <ST7735_Reset+0x24>)
 8000196:	f001 fd44 	bl	8001c22 <HAL_GPIO_WritePin>
 800019a:	bf00      	nop
 800019c:	bd80      	pop	{r7, pc}
 800019e:	bf00      	nop
 80001a0:	40010c00 	.word	0x40010c00

080001a4 <ST7735_WriteCommand>:
 80001a4:	b580      	push	{r7, lr}
 80001a6:	b082      	sub	sp, #8
 80001a8:	af00      	add	r7, sp, #0
 80001aa:	4603      	mov	r3, r0
 80001ac:	71fb      	strb	r3, [r7, #7]
 80001ae:	2200      	movs	r2, #0
 80001b0:	2101      	movs	r1, #1
 80001b2:	4807      	ldr	r0, [pc, #28]	; (80001d0 <ST7735_WriteCommand+0x2c>)
 80001b4:	f001 fd35 	bl	8001c22 <HAL_GPIO_WritePin>
 80001b8:	1df9      	adds	r1, r7, #7
 80001ba:	f04f 33ff 	mov.w	r3, #4294967295
 80001be:	2201      	movs	r2, #1
 80001c0:	4804      	ldr	r0, [pc, #16]	; (80001d4 <ST7735_WriteCommand+0x30>)
 80001c2:	f002 f9b5 	bl	8002530 <HAL_SPI_Transmit>
 80001c6:	bf00      	nop
 80001c8:	3708      	adds	r7, #8
 80001ca:	46bd      	mov	sp, r7
 80001cc:	bd80      	pop	{r7, pc}
 80001ce:	bf00      	nop
 80001d0:	40010c00 	.word	0x40010c00
 80001d4:	200000d4 	.word	0x200000d4

080001d8 <ST7735_WriteData>:
 80001d8:	b580      	push	{r7, lr}
 80001da:	b082      	sub	sp, #8
 80001dc:	af00      	add	r7, sp, #0
 80001de:	6078      	str	r0, [r7, #4]
 80001e0:	6039      	str	r1, [r7, #0]
 80001e2:	2201      	movs	r2, #1
 80001e4:	2101      	movs	r1, #1
 80001e6:	4807      	ldr	r0, [pc, #28]	; (8000204 <ST7735_WriteData+0x2c>)
 80001e8:	f001 fd1b 	bl	8001c22 <HAL_GPIO_WritePin>
 80001ec:	683b      	ldr	r3, [r7, #0]
 80001ee:	b29a      	uxth	r2, r3
 80001f0:	f04f 33ff 	mov.w	r3, #4294967295
 80001f4:	6879      	ldr	r1, [r7, #4]
 80001f6:	4804      	ldr	r0, [pc, #16]	; (8000208 <ST7735_WriteData+0x30>)
 80001f8:	f002 f99a 	bl	8002530 <HAL_SPI_Transmit>
 80001fc:	bf00      	nop
 80001fe:	3708      	adds	r7, #8
 8000200:	46bd      	mov	sp, r7
 8000202:	bd80      	pop	{r7, pc}
 8000204:	40010c00 	.word	0x40010c00
 8000208:	200000d4 	.word	0x200000d4

0800020c <ST7735_ExecuteCommandList>:
 800020c:	b580      	push	{r7, lr}
 800020e:	b084      	sub	sp, #16
 8000210:	af00      	add	r7, sp, #0
 8000212:	6078      	str	r0, [r7, #4]
 8000214:	687b      	ldr	r3, [r7, #4]
 8000216:	1c5a      	adds	r2, r3, #1
 8000218:	607a      	str	r2, [r7, #4]
 800021a:	781b      	ldrb	r3, [r3, #0]
 800021c:	73fb      	strb	r3, [r7, #15]
 800021e:	e034      	b.n	800028a <ST7735_ExecuteCommandList+0x7e>
 8000220:	687b      	ldr	r3, [r7, #4]
 8000222:	1c5a      	adds	r2, r3, #1
 8000224:	607a      	str	r2, [r7, #4]
 8000226:	781b      	ldrb	r3, [r3, #0]
 8000228:	72fb      	strb	r3, [r7, #11]
 800022a:	7afb      	ldrb	r3, [r7, #11]
 800022c:	4618      	mov	r0, r3
 800022e:	f7ff ffb9 	bl	80001a4 <ST7735_WriteCommand>
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	1c5a      	adds	r2, r3, #1
 8000236:	607a      	str	r2, [r7, #4]
 8000238:	781b      	ldrb	r3, [r3, #0]
 800023a:	72bb      	strb	r3, [r7, #10]
 800023c:	7abb      	ldrb	r3, [r7, #10]
 800023e:	b29b      	uxth	r3, r3
 8000240:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000244:	81bb      	strh	r3, [r7, #12]
 8000246:	7abb      	ldrb	r3, [r7, #10]
 8000248:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800024c:	72bb      	strb	r3, [r7, #10]
 800024e:	7abb      	ldrb	r3, [r7, #10]
 8000250:	2b00      	cmp	r3, #0
 8000252:	d008      	beq.n	8000266 <ST7735_ExecuteCommandList+0x5a>
 8000254:	7abb      	ldrb	r3, [r7, #10]
 8000256:	4619      	mov	r1, r3
 8000258:	6878      	ldr	r0, [r7, #4]
 800025a:	f7ff ffbd 	bl	80001d8 <ST7735_WriteData>
 800025e:	7abb      	ldrb	r3, [r7, #10]
 8000260:	687a      	ldr	r2, [r7, #4]
 8000262:	4413      	add	r3, r2
 8000264:	607b      	str	r3, [r7, #4]
 8000266:	89bb      	ldrh	r3, [r7, #12]
 8000268:	2b00      	cmp	r3, #0
 800026a:	d00e      	beq.n	800028a <ST7735_ExecuteCommandList+0x7e>
 800026c:	687b      	ldr	r3, [r7, #4]
 800026e:	1c5a      	adds	r2, r3, #1
 8000270:	607a      	str	r2, [r7, #4]
 8000272:	781b      	ldrb	r3, [r3, #0]
 8000274:	81bb      	strh	r3, [r7, #12]
 8000276:	89bb      	ldrh	r3, [r7, #12]
 8000278:	2bff      	cmp	r3, #255	; 0xff
 800027a:	d102      	bne.n	8000282 <ST7735_ExecuteCommandList+0x76>
 800027c:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000280:	81bb      	strh	r3, [r7, #12]
 8000282:	89bb      	ldrh	r3, [r7, #12]
 8000284:	4618      	mov	r0, r3
 8000286:	f001 fa55 	bl	8001734 <HAL_Delay>
 800028a:	7bfb      	ldrb	r3, [r7, #15]
 800028c:	1e5a      	subs	r2, r3, #1
 800028e:	73fa      	strb	r2, [r7, #15]
 8000290:	2b00      	cmp	r3, #0
 8000292:	d1c5      	bne.n	8000220 <ST7735_ExecuteCommandList+0x14>
 8000294:	bf00      	nop
 8000296:	3710      	adds	r7, #16
 8000298:	46bd      	mov	sp, r7
 800029a:	bd80      	pop	{r7, pc}

0800029c <ST7735_SetAddressWindow>:
 800029c:	b590      	push	{r4, r7, lr}
 800029e:	b085      	sub	sp, #20
 80002a0:	af00      	add	r7, sp, #0
 80002a2:	4604      	mov	r4, r0
 80002a4:	4608      	mov	r0, r1
 80002a6:	4611      	mov	r1, r2
 80002a8:	461a      	mov	r2, r3
 80002aa:	4623      	mov	r3, r4
 80002ac:	71fb      	strb	r3, [r7, #7]
 80002ae:	4603      	mov	r3, r0
 80002b0:	71bb      	strb	r3, [r7, #6]
 80002b2:	460b      	mov	r3, r1
 80002b4:	717b      	strb	r3, [r7, #5]
 80002b6:	4613      	mov	r3, r2
 80002b8:	713b      	strb	r3, [r7, #4]
 80002ba:	202a      	movs	r0, #42	; 0x2a
 80002bc:	f7ff ff72 	bl	80001a4 <ST7735_WriteCommand>
 80002c0:	2300      	movs	r3, #0
 80002c2:	733b      	strb	r3, [r7, #12]
 80002c4:	79fb      	ldrb	r3, [r7, #7]
 80002c6:	3301      	adds	r3, #1
 80002c8:	b2db      	uxtb	r3, r3
 80002ca:	737b      	strb	r3, [r7, #13]
 80002cc:	2300      	movs	r3, #0
 80002ce:	73bb      	strb	r3, [r7, #14]
 80002d0:	797b      	ldrb	r3, [r7, #5]
 80002d2:	3301      	adds	r3, #1
 80002d4:	b2db      	uxtb	r3, r3
 80002d6:	73fb      	strb	r3, [r7, #15]
 80002d8:	f107 030c 	add.w	r3, r7, #12
 80002dc:	2104      	movs	r1, #4
 80002de:	4618      	mov	r0, r3
 80002e0:	f7ff ff7a 	bl	80001d8 <ST7735_WriteData>
 80002e4:	202b      	movs	r0, #43	; 0x2b
 80002e6:	f7ff ff5d 	bl	80001a4 <ST7735_WriteCommand>
 80002ea:	79bb      	ldrb	r3, [r7, #6]
 80002ec:	331a      	adds	r3, #26
 80002ee:	b2db      	uxtb	r3, r3
 80002f0:	737b      	strb	r3, [r7, #13]
 80002f2:	793b      	ldrb	r3, [r7, #4]
 80002f4:	331a      	adds	r3, #26
 80002f6:	b2db      	uxtb	r3, r3
 80002f8:	73fb      	strb	r3, [r7, #15]
 80002fa:	f107 030c 	add.w	r3, r7, #12
 80002fe:	2104      	movs	r1, #4
 8000300:	4618      	mov	r0, r3
 8000302:	f7ff ff69 	bl	80001d8 <ST7735_WriteData>
 8000306:	202c      	movs	r0, #44	; 0x2c
 8000308:	f7ff ff4c 	bl	80001a4 <ST7735_WriteCommand>
 800030c:	bf00      	nop
 800030e:	3714      	adds	r7, #20
 8000310:	46bd      	mov	sp, r7
 8000312:	bd90      	pop	{r4, r7, pc}

08000314 <ST7735_Init>:
 8000314:	b580      	push	{r7, lr}
 8000316:	af00      	add	r7, sp, #0
 8000318:	f7ff ff18 	bl	800014c <ST7735_Select>
 800031c:	f7ff ff2e 	bl	800017c <ST7735_Reset>
 8000320:	4806      	ldr	r0, [pc, #24]	; (800033c <ST7735_Init+0x28>)
 8000322:	f7ff ff73 	bl	800020c <ST7735_ExecuteCommandList>
 8000326:	4806      	ldr	r0, [pc, #24]	; (8000340 <ST7735_Init+0x2c>)
 8000328:	f7ff ff70 	bl	800020c <ST7735_ExecuteCommandList>
 800032c:	4805      	ldr	r0, [pc, #20]	; (8000344 <ST7735_Init+0x30>)
 800032e:	f7ff ff6d 	bl	800020c <ST7735_ExecuteCommandList>
 8000332:	f7ff ff17 	bl	8000164 <ST7735_Unselect>
 8000336:	bf00      	nop
 8000338:	bd80      	pop	{r7, pc}
 800033a:	bf00      	nop
 800033c:	080059f0 	.word	0x080059f0
 8000340:	08005a2c 	.word	0x08005a2c
 8000344:	08005a3c 	.word	0x08005a3c

08000348 <ST7735_DrawPixel>:
 8000348:	b580      	push	{r7, lr}
 800034a:	b084      	sub	sp, #16
 800034c:	af00      	add	r7, sp, #0
 800034e:	4603      	mov	r3, r0
 8000350:	80fb      	strh	r3, [r7, #6]
 8000352:	460b      	mov	r3, r1
 8000354:	80bb      	strh	r3, [r7, #4]
 8000356:	4613      	mov	r3, r2
 8000358:	807b      	strh	r3, [r7, #2]
 800035a:	88fb      	ldrh	r3, [r7, #6]
 800035c:	2b9f      	cmp	r3, #159	; 0x9f
 800035e:	d823      	bhi.n	80003a8 <ST7735_DrawPixel+0x60>
 8000360:	88bb      	ldrh	r3, [r7, #4]
 8000362:	2b4f      	cmp	r3, #79	; 0x4f
 8000364:	d820      	bhi.n	80003a8 <ST7735_DrawPixel+0x60>
 8000366:	f7ff fef1 	bl	800014c <ST7735_Select>
 800036a:	88fb      	ldrh	r3, [r7, #6]
 800036c:	b2d8      	uxtb	r0, r3
 800036e:	88bb      	ldrh	r3, [r7, #4]
 8000370:	b2d9      	uxtb	r1, r3
 8000372:	88fb      	ldrh	r3, [r7, #6]
 8000374:	b2db      	uxtb	r3, r3
 8000376:	3301      	adds	r3, #1
 8000378:	b2da      	uxtb	r2, r3
 800037a:	88bb      	ldrh	r3, [r7, #4]
 800037c:	b2db      	uxtb	r3, r3
 800037e:	3301      	adds	r3, #1
 8000380:	b2db      	uxtb	r3, r3
 8000382:	f7ff ff8b 	bl	800029c <ST7735_SetAddressWindow>
 8000386:	887b      	ldrh	r3, [r7, #2]
 8000388:	0a1b      	lsrs	r3, r3, #8
 800038a:	b29b      	uxth	r3, r3
 800038c:	b2db      	uxtb	r3, r3
 800038e:	733b      	strb	r3, [r7, #12]
 8000390:	887b      	ldrh	r3, [r7, #2]
 8000392:	b2db      	uxtb	r3, r3
 8000394:	737b      	strb	r3, [r7, #13]
 8000396:	f107 030c 	add.w	r3, r7, #12
 800039a:	2102      	movs	r1, #2
 800039c:	4618      	mov	r0, r3
 800039e:	f7ff ff1b 	bl	80001d8 <ST7735_WriteData>
 80003a2:	f7ff fedf 	bl	8000164 <ST7735_Unselect>
 80003a6:	e000      	b.n	80003aa <ST7735_DrawPixel+0x62>
 80003a8:	bf00      	nop
 80003aa:	3710      	adds	r7, #16
 80003ac:	46bd      	mov	sp, r7
 80003ae:	bd80      	pop	{r7, pc}

080003b0 <ST7735_WriteChar>:
 80003b0:	b082      	sub	sp, #8
 80003b2:	b590      	push	{r4, r7, lr}
 80003b4:	b089      	sub	sp, #36	; 0x24
 80003b6:	af00      	add	r7, sp, #0
 80003b8:	637b      	str	r3, [r7, #52]	; 0x34
 80003ba:	4603      	mov	r3, r0
 80003bc:	80fb      	strh	r3, [r7, #6]
 80003be:	460b      	mov	r3, r1
 80003c0:	80bb      	strh	r3, [r7, #4]
 80003c2:	4613      	mov	r3, r2
 80003c4:	70fb      	strb	r3, [r7, #3]
 80003c6:	88fb      	ldrh	r3, [r7, #6]
 80003c8:	b2d8      	uxtb	r0, r3
 80003ca:	88bb      	ldrh	r3, [r7, #4]
 80003cc:	b2d9      	uxtb	r1, r3
 80003ce:	88fb      	ldrh	r3, [r7, #6]
 80003d0:	b2da      	uxtb	r2, r3
 80003d2:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 80003d6:	4413      	add	r3, r2
 80003d8:	b2db      	uxtb	r3, r3
 80003da:	3b01      	subs	r3, #1
 80003dc:	b2dc      	uxtb	r4, r3
 80003de:	88bb      	ldrh	r3, [r7, #4]
 80003e0:	b2da      	uxtb	r2, r3
 80003e2:	f897 3035 	ldrb.w	r3, [r7, #53]	; 0x35
 80003e6:	4413      	add	r3, r2
 80003e8:	b2db      	uxtb	r3, r3
 80003ea:	3b01      	subs	r3, #1
 80003ec:	b2db      	uxtb	r3, r3
 80003ee:	4622      	mov	r2, r4
 80003f0:	f7ff ff54 	bl	800029c <ST7735_SetAddressWindow>
 80003f4:	2300      	movs	r3, #0
 80003f6:	61fb      	str	r3, [r7, #28]
 80003f8:	e043      	b.n	8000482 <ST7735_WriteChar+0xd2>
 80003fa:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80003fc:	78fb      	ldrb	r3, [r7, #3]
 80003fe:	3b20      	subs	r3, #32
 8000400:	f897 1035 	ldrb.w	r1, [r7, #53]	; 0x35
 8000404:	fb01 f303 	mul.w	r3, r1, r3
 8000408:	4619      	mov	r1, r3
 800040a:	69fb      	ldr	r3, [r7, #28]
 800040c:	440b      	add	r3, r1
 800040e:	005b      	lsls	r3, r3, #1
 8000410:	4413      	add	r3, r2
 8000412:	881b      	ldrh	r3, [r3, #0]
 8000414:	617b      	str	r3, [r7, #20]
 8000416:	2300      	movs	r3, #0
 8000418:	61bb      	str	r3, [r7, #24]
 800041a:	e029      	b.n	8000470 <ST7735_WriteChar+0xc0>
 800041c:	697a      	ldr	r2, [r7, #20]
 800041e:	69bb      	ldr	r3, [r7, #24]
 8000420:	fa02 f303 	lsl.w	r3, r2, r3
 8000424:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8000428:	2b00      	cmp	r3, #0
 800042a:	d00e      	beq.n	800044a <ST7735_WriteChar+0x9a>
 800042c:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 800042e:	0a1b      	lsrs	r3, r3, #8
 8000430:	b29b      	uxth	r3, r3
 8000432:	b2db      	uxtb	r3, r3
 8000434:	743b      	strb	r3, [r7, #16]
 8000436:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 8000438:	b2db      	uxtb	r3, r3
 800043a:	747b      	strb	r3, [r7, #17]
 800043c:	f107 0310 	add.w	r3, r7, #16
 8000440:	2102      	movs	r1, #2
 8000442:	4618      	mov	r0, r3
 8000444:	f7ff fec8 	bl	80001d8 <ST7735_WriteData>
 8000448:	e00f      	b.n	800046a <ST7735_WriteChar+0xba>
 800044a:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 800044e:	0a1b      	lsrs	r3, r3, #8
 8000450:	b29b      	uxth	r3, r3
 8000452:	b2db      	uxtb	r3, r3
 8000454:	733b      	strb	r3, [r7, #12]
 8000456:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 800045a:	b2db      	uxtb	r3, r3
 800045c:	737b      	strb	r3, [r7, #13]
 800045e:	f107 030c 	add.w	r3, r7, #12
 8000462:	2102      	movs	r1, #2
 8000464:	4618      	mov	r0, r3
 8000466:	f7ff feb7 	bl	80001d8 <ST7735_WriteData>
 800046a:	69bb      	ldr	r3, [r7, #24]
 800046c:	3301      	adds	r3, #1
 800046e:	61bb      	str	r3, [r7, #24]
 8000470:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 8000474:	461a      	mov	r2, r3
 8000476:	69bb      	ldr	r3, [r7, #24]
 8000478:	4293      	cmp	r3, r2
 800047a:	d3cf      	bcc.n	800041c <ST7735_WriteChar+0x6c>
 800047c:	69fb      	ldr	r3, [r7, #28]
 800047e:	3301      	adds	r3, #1
 8000480:	61fb      	str	r3, [r7, #28]
 8000482:	f897 3035 	ldrb.w	r3, [r7, #53]	; 0x35
 8000486:	461a      	mov	r2, r3
 8000488:	69fb      	ldr	r3, [r7, #28]
 800048a:	4293      	cmp	r3, r2
 800048c:	d3b5      	bcc.n	80003fa <ST7735_WriteChar+0x4a>
 800048e:	bf00      	nop
 8000490:	3724      	adds	r7, #36	; 0x24
 8000492:	46bd      	mov	sp, r7
 8000494:	e8bd 4090 	ldmia.w	sp!, {r4, r7, lr}
 8000498:	b002      	add	sp, #8
 800049a:	4770      	bx	lr

0800049c <ST7735_WriteString>:
 800049c:	b082      	sub	sp, #8
 800049e:	b580      	push	{r7, lr}
 80004a0:	b086      	sub	sp, #24
 80004a2:	af04      	add	r7, sp, #16
 80004a4:	603a      	str	r2, [r7, #0]
 80004a6:	617b      	str	r3, [r7, #20]
 80004a8:	4603      	mov	r3, r0
 80004aa:	80fb      	strh	r3, [r7, #6]
 80004ac:	460b      	mov	r3, r1
 80004ae:	80bb      	strh	r3, [r7, #4]
 80004b0:	f7ff fe4c 	bl	800014c <ST7735_Select>
 80004b4:	e02d      	b.n	8000512 <ST7735_WriteString+0x76>
 80004b6:	88fb      	ldrh	r3, [r7, #6]
 80004b8:	7d3a      	ldrb	r2, [r7, #20]
 80004ba:	4413      	add	r3, r2
 80004bc:	2b9f      	cmp	r3, #159	; 0x9f
 80004be:	dd13      	ble.n	80004e8 <ST7735_WriteString+0x4c>
 80004c0:	2300      	movs	r3, #0
 80004c2:	80fb      	strh	r3, [r7, #6]
 80004c4:	7d7b      	ldrb	r3, [r7, #21]
 80004c6:	b29a      	uxth	r2, r3
 80004c8:	88bb      	ldrh	r3, [r7, #4]
 80004ca:	4413      	add	r3, r2
 80004cc:	80bb      	strh	r3, [r7, #4]
 80004ce:	88bb      	ldrh	r3, [r7, #4]
 80004d0:	7d7a      	ldrb	r2, [r7, #21]
 80004d2:	4413      	add	r3, r2
 80004d4:	2b4f      	cmp	r3, #79	; 0x4f
 80004d6:	dc21      	bgt.n	800051c <ST7735_WriteString+0x80>
 80004d8:	683b      	ldr	r3, [r7, #0]
 80004da:	781b      	ldrb	r3, [r3, #0]
 80004dc:	2b20      	cmp	r3, #32
 80004de:	d103      	bne.n	80004e8 <ST7735_WriteString+0x4c>
 80004e0:	683b      	ldr	r3, [r7, #0]
 80004e2:	3301      	adds	r3, #1
 80004e4:	603b      	str	r3, [r7, #0]
 80004e6:	e014      	b.n	8000512 <ST7735_WriteString+0x76>
 80004e8:	683b      	ldr	r3, [r7, #0]
 80004ea:	781a      	ldrb	r2, [r3, #0]
 80004ec:	88b9      	ldrh	r1, [r7, #4]
 80004ee:	88f8      	ldrh	r0, [r7, #6]
 80004f0:	8c3b      	ldrh	r3, [r7, #32]
 80004f2:	9302      	str	r3, [sp, #8]
 80004f4:	8bbb      	ldrh	r3, [r7, #28]
 80004f6:	9301      	str	r3, [sp, #4]
 80004f8:	69bb      	ldr	r3, [r7, #24]
 80004fa:	9300      	str	r3, [sp, #0]
 80004fc:	697b      	ldr	r3, [r7, #20]
 80004fe:	f7ff ff57 	bl	80003b0 <ST7735_WriteChar>
 8000502:	7d3b      	ldrb	r3, [r7, #20]
 8000504:	b29a      	uxth	r2, r3
 8000506:	88fb      	ldrh	r3, [r7, #6]
 8000508:	4413      	add	r3, r2
 800050a:	80fb      	strh	r3, [r7, #6]
 800050c:	683b      	ldr	r3, [r7, #0]
 800050e:	3301      	adds	r3, #1
 8000510:	603b      	str	r3, [r7, #0]
 8000512:	683b      	ldr	r3, [r7, #0]
 8000514:	781b      	ldrb	r3, [r3, #0]
 8000516:	2b00      	cmp	r3, #0
 8000518:	d1cd      	bne.n	80004b6 <ST7735_WriteString+0x1a>
 800051a:	e000      	b.n	800051e <ST7735_WriteString+0x82>
 800051c:	bf00      	nop
 800051e:	f7ff fe21 	bl	8000164 <ST7735_Unselect>
 8000522:	bf00      	nop
 8000524:	3708      	adds	r7, #8
 8000526:	46bd      	mov	sp, r7
 8000528:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800052c:	b002      	add	sp, #8
 800052e:	4770      	bx	lr

08000530 <ST7735_FillRectangle>:
 8000530:	b590      	push	{r4, r7, lr}
 8000532:	b085      	sub	sp, #20
 8000534:	af00      	add	r7, sp, #0
 8000536:	4604      	mov	r4, r0
 8000538:	4608      	mov	r0, r1
 800053a:	4611      	mov	r1, r2
 800053c:	461a      	mov	r2, r3
 800053e:	4623      	mov	r3, r4
 8000540:	80fb      	strh	r3, [r7, #6]
 8000542:	4603      	mov	r3, r0
 8000544:	80bb      	strh	r3, [r7, #4]
 8000546:	460b      	mov	r3, r1
 8000548:	807b      	strh	r3, [r7, #2]
 800054a:	4613      	mov	r3, r2
 800054c:	803b      	strh	r3, [r7, #0]
 800054e:	88fb      	ldrh	r3, [r7, #6]
 8000550:	2b9f      	cmp	r3, #159	; 0x9f
 8000552:	d859      	bhi.n	8000608 <ST7735_FillRectangle+0xd8>
 8000554:	88bb      	ldrh	r3, [r7, #4]
 8000556:	2b4f      	cmp	r3, #79	; 0x4f
 8000558:	d856      	bhi.n	8000608 <ST7735_FillRectangle+0xd8>
 800055a:	88fa      	ldrh	r2, [r7, #6]
 800055c:	887b      	ldrh	r3, [r7, #2]
 800055e:	4413      	add	r3, r2
 8000560:	3b01      	subs	r3, #1
 8000562:	2b9f      	cmp	r3, #159	; 0x9f
 8000564:	dd03      	ble.n	800056e <ST7735_FillRectangle+0x3e>
 8000566:	88fb      	ldrh	r3, [r7, #6]
 8000568:	f1c3 03a0 	rsb	r3, r3, #160	; 0xa0
 800056c:	807b      	strh	r3, [r7, #2]
 800056e:	88ba      	ldrh	r2, [r7, #4]
 8000570:	883b      	ldrh	r3, [r7, #0]
 8000572:	4413      	add	r3, r2
 8000574:	3b01      	subs	r3, #1
 8000576:	2b4f      	cmp	r3, #79	; 0x4f
 8000578:	dd03      	ble.n	8000582 <ST7735_FillRectangle+0x52>
 800057a:	88bb      	ldrh	r3, [r7, #4]
 800057c:	f1c3 0350 	rsb	r3, r3, #80	; 0x50
 8000580:	803b      	strh	r3, [r7, #0]
 8000582:	f7ff fde3 	bl	800014c <ST7735_Select>
 8000586:	88fb      	ldrh	r3, [r7, #6]
 8000588:	b2d8      	uxtb	r0, r3
 800058a:	88bb      	ldrh	r3, [r7, #4]
 800058c:	b2d9      	uxtb	r1, r3
 800058e:	88fb      	ldrh	r3, [r7, #6]
 8000590:	b2da      	uxtb	r2, r3
 8000592:	887b      	ldrh	r3, [r7, #2]
 8000594:	b2db      	uxtb	r3, r3
 8000596:	4413      	add	r3, r2
 8000598:	b2db      	uxtb	r3, r3
 800059a:	3b01      	subs	r3, #1
 800059c:	b2dc      	uxtb	r4, r3
 800059e:	88bb      	ldrh	r3, [r7, #4]
 80005a0:	b2da      	uxtb	r2, r3
 80005a2:	883b      	ldrh	r3, [r7, #0]
 80005a4:	b2db      	uxtb	r3, r3
 80005a6:	4413      	add	r3, r2
 80005a8:	b2db      	uxtb	r3, r3
 80005aa:	3b01      	subs	r3, #1
 80005ac:	b2db      	uxtb	r3, r3
 80005ae:	4622      	mov	r2, r4
 80005b0:	f7ff fe74 	bl	800029c <ST7735_SetAddressWindow>
 80005b4:	8c3b      	ldrh	r3, [r7, #32]
 80005b6:	0a1b      	lsrs	r3, r3, #8
 80005b8:	b29b      	uxth	r3, r3
 80005ba:	b2db      	uxtb	r3, r3
 80005bc:	733b      	strb	r3, [r7, #12]
 80005be:	8c3b      	ldrh	r3, [r7, #32]
 80005c0:	b2db      	uxtb	r3, r3
 80005c2:	737b      	strb	r3, [r7, #13]
 80005c4:	2201      	movs	r2, #1
 80005c6:	2101      	movs	r1, #1
 80005c8:	4811      	ldr	r0, [pc, #68]	; (8000610 <ST7735_FillRectangle+0xe0>)
 80005ca:	f001 fb2a 	bl	8001c22 <HAL_GPIO_WritePin>
 80005ce:	883b      	ldrh	r3, [r7, #0]
 80005d0:	80bb      	strh	r3, [r7, #4]
 80005d2:	e013      	b.n	80005fc <ST7735_FillRectangle+0xcc>
 80005d4:	887b      	ldrh	r3, [r7, #2]
 80005d6:	80fb      	strh	r3, [r7, #6]
 80005d8:	e00a      	b.n	80005f0 <ST7735_FillRectangle+0xc0>
 80005da:	f107 010c 	add.w	r1, r7, #12
 80005de:	f04f 33ff 	mov.w	r3, #4294967295
 80005e2:	2202      	movs	r2, #2
 80005e4:	480b      	ldr	r0, [pc, #44]	; (8000614 <ST7735_FillRectangle+0xe4>)
 80005e6:	f001 ffa3 	bl	8002530 <HAL_SPI_Transmit>
 80005ea:	88fb      	ldrh	r3, [r7, #6]
 80005ec:	3b01      	subs	r3, #1
 80005ee:	80fb      	strh	r3, [r7, #6]
 80005f0:	88fb      	ldrh	r3, [r7, #6]
 80005f2:	2b00      	cmp	r3, #0
 80005f4:	d1f1      	bne.n	80005da <ST7735_FillRectangle+0xaa>
 80005f6:	88bb      	ldrh	r3, [r7, #4]
 80005f8:	3b01      	subs	r3, #1
 80005fa:	80bb      	strh	r3, [r7, #4]
 80005fc:	88bb      	ldrh	r3, [r7, #4]
 80005fe:	2b00      	cmp	r3, #0
 8000600:	d1e8      	bne.n	80005d4 <ST7735_FillRectangle+0xa4>
 8000602:	f7ff fdaf 	bl	8000164 <ST7735_Unselect>
 8000606:	e000      	b.n	800060a <ST7735_FillRectangle+0xda>
 8000608:	bf00      	nop
 800060a:	3714      	adds	r7, #20
 800060c:	46bd      	mov	sp, r7
 800060e:	bd90      	pop	{r4, r7, pc}
 8000610:	40010c00 	.word	0x40010c00
 8000614:	200000d4 	.word	0x200000d4

08000618 <ST7735_FillScreen>:
 8000618:	b580      	push	{r7, lr}
 800061a:	b084      	sub	sp, #16
 800061c:	af02      	add	r7, sp, #8
 800061e:	4603      	mov	r3, r0
 8000620:	80fb      	strh	r3, [r7, #6]
 8000622:	88fb      	ldrh	r3, [r7, #6]
 8000624:	9300      	str	r3, [sp, #0]
 8000626:	2350      	movs	r3, #80	; 0x50
 8000628:	22a0      	movs	r2, #160	; 0xa0
 800062a:	2100      	movs	r1, #0
 800062c:	2000      	movs	r0, #0
 800062e:	f7ff ff7f 	bl	8000530 <ST7735_FillRectangle>
 8000632:	bf00      	nop
 8000634:	3708      	adds	r7, #8
 8000636:	46bd      	mov	sp, r7
 8000638:	bd80      	pop	{r7, pc}

0800063a <ST7735_DrawLine>:
 800063a:	b590      	push	{r4, r7, lr}
 800063c:	b087      	sub	sp, #28
 800063e:	af00      	add	r7, sp, #0
 8000640:	4604      	mov	r4, r0
 8000642:	4608      	mov	r0, r1
 8000644:	4611      	mov	r1, r2
 8000646:	461a      	mov	r2, r3
 8000648:	4623      	mov	r3, r4
 800064a:	80fb      	strh	r3, [r7, #6]
 800064c:	4603      	mov	r3, r0
 800064e:	80bb      	strh	r3, [r7, #4]
 8000650:	460b      	mov	r3, r1
 8000652:	807b      	strh	r3, [r7, #2]
 8000654:	4613      	mov	r3, r2
 8000656:	803b      	strh	r3, [r7, #0]
 8000658:	883a      	ldrh	r2, [r7, #0]
 800065a:	88bb      	ldrh	r3, [r7, #4]
 800065c:	1ad3      	subs	r3, r2, r3
 800065e:	ea83 72e3 	eor.w	r2, r3, r3, asr #31
 8000662:	eba2 72e3 	sub.w	r2, r2, r3, asr #31
 8000666:	8879      	ldrh	r1, [r7, #2]
 8000668:	88fb      	ldrh	r3, [r7, #6]
 800066a:	1acb      	subs	r3, r1, r3
 800066c:	2b00      	cmp	r3, #0
 800066e:	bfb8      	it	lt
 8000670:	425b      	neglt	r3, r3
 8000672:	429a      	cmp	r2, r3
 8000674:	bfcc      	ite	gt
 8000676:	2301      	movgt	r3, #1
 8000678:	2300      	movle	r3, #0
 800067a:	b2db      	uxtb	r3, r3
 800067c:	827b      	strh	r3, [r7, #18]
 800067e:	8a7b      	ldrh	r3, [r7, #18]
 8000680:	2b00      	cmp	r3, #0
 8000682:	d00b      	beq.n	800069c <ST7735_DrawLine+0x62>
 8000684:	88fb      	ldrh	r3, [r7, #6]
 8000686:	823b      	strh	r3, [r7, #16]
 8000688:	88bb      	ldrh	r3, [r7, #4]
 800068a:	80fb      	strh	r3, [r7, #6]
 800068c:	8a3b      	ldrh	r3, [r7, #16]
 800068e:	80bb      	strh	r3, [r7, #4]
 8000690:	887b      	ldrh	r3, [r7, #2]
 8000692:	823b      	strh	r3, [r7, #16]
 8000694:	883b      	ldrh	r3, [r7, #0]
 8000696:	807b      	strh	r3, [r7, #2]
 8000698:	8a3b      	ldrh	r3, [r7, #16]
 800069a:	803b      	strh	r3, [r7, #0]
 800069c:	88fa      	ldrh	r2, [r7, #6]
 800069e:	887b      	ldrh	r3, [r7, #2]
 80006a0:	429a      	cmp	r2, r3
 80006a2:	d90b      	bls.n	80006bc <ST7735_DrawLine+0x82>
 80006a4:	88fb      	ldrh	r3, [r7, #6]
 80006a6:	823b      	strh	r3, [r7, #16]
 80006a8:	887b      	ldrh	r3, [r7, #2]
 80006aa:	80fb      	strh	r3, [r7, #6]
 80006ac:	8a3b      	ldrh	r3, [r7, #16]
 80006ae:	807b      	strh	r3, [r7, #2]
 80006b0:	88bb      	ldrh	r3, [r7, #4]
 80006b2:	823b      	strh	r3, [r7, #16]
 80006b4:	883b      	ldrh	r3, [r7, #0]
 80006b6:	80bb      	strh	r3, [r7, #4]
 80006b8:	8a3b      	ldrh	r3, [r7, #16]
 80006ba:	803b      	strh	r3, [r7, #0]
 80006bc:	887a      	ldrh	r2, [r7, #2]
 80006be:	88fb      	ldrh	r3, [r7, #6]
 80006c0:	1ad3      	subs	r3, r2, r3
 80006c2:	b29b      	uxth	r3, r3
 80006c4:	81fb      	strh	r3, [r7, #14]
 80006c6:	883a      	ldrh	r2, [r7, #0]
 80006c8:	88bb      	ldrh	r3, [r7, #4]
 80006ca:	1ad3      	subs	r3, r2, r3
 80006cc:	2b00      	cmp	r3, #0
 80006ce:	bfb8      	it	lt
 80006d0:	425b      	neglt	r3, r3
 80006d2:	81bb      	strh	r3, [r7, #12]
 80006d4:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80006d8:	0fda      	lsrs	r2, r3, #31
 80006da:	4413      	add	r3, r2
 80006dc:	105b      	asrs	r3, r3, #1
 80006de:	82fb      	strh	r3, [r7, #22]
 80006e0:	88ba      	ldrh	r2, [r7, #4]
 80006e2:	883b      	ldrh	r3, [r7, #0]
 80006e4:	429a      	cmp	r2, r3
 80006e6:	d202      	bcs.n	80006ee <ST7735_DrawLine+0xb4>
 80006e8:	2301      	movs	r3, #1
 80006ea:	82bb      	strh	r3, [r7, #20]
 80006ec:	e028      	b.n	8000740 <ST7735_DrawLine+0x106>
 80006ee:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80006f2:	82bb      	strh	r3, [r7, #20]
 80006f4:	e024      	b.n	8000740 <ST7735_DrawLine+0x106>
 80006f6:	8a7b      	ldrh	r3, [r7, #18]
 80006f8:	2b00      	cmp	r3, #0
 80006fa:	d006      	beq.n	800070a <ST7735_DrawLine+0xd0>
 80006fc:	8d3a      	ldrh	r2, [r7, #40]	; 0x28
 80006fe:	88f9      	ldrh	r1, [r7, #6]
 8000700:	88bb      	ldrh	r3, [r7, #4]
 8000702:	4618      	mov	r0, r3
 8000704:	f7ff fe20 	bl	8000348 <ST7735_DrawPixel>
 8000708:	e005      	b.n	8000716 <ST7735_DrawLine+0xdc>
 800070a:	8d3a      	ldrh	r2, [r7, #40]	; 0x28
 800070c:	88b9      	ldrh	r1, [r7, #4]
 800070e:	88fb      	ldrh	r3, [r7, #6]
 8000710:	4618      	mov	r0, r3
 8000712:	f7ff fe19 	bl	8000348 <ST7735_DrawPixel>
 8000716:	8afa      	ldrh	r2, [r7, #22]
 8000718:	89bb      	ldrh	r3, [r7, #12]
 800071a:	1ad3      	subs	r3, r2, r3
 800071c:	b29b      	uxth	r3, r3
 800071e:	82fb      	strh	r3, [r7, #22]
 8000720:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8000724:	2b00      	cmp	r3, #0
 8000726:	da08      	bge.n	800073a <ST7735_DrawLine+0x100>
 8000728:	8aba      	ldrh	r2, [r7, #20]
 800072a:	88bb      	ldrh	r3, [r7, #4]
 800072c:	4413      	add	r3, r2
 800072e:	80bb      	strh	r3, [r7, #4]
 8000730:	8afa      	ldrh	r2, [r7, #22]
 8000732:	89fb      	ldrh	r3, [r7, #14]
 8000734:	4413      	add	r3, r2
 8000736:	b29b      	uxth	r3, r3
 8000738:	82fb      	strh	r3, [r7, #22]
 800073a:	88fb      	ldrh	r3, [r7, #6]
 800073c:	3301      	adds	r3, #1
 800073e:	80fb      	strh	r3, [r7, #6]
 8000740:	88fa      	ldrh	r2, [r7, #6]
 8000742:	887b      	ldrh	r3, [r7, #2]
 8000744:	429a      	cmp	r2, r3
 8000746:	d9d6      	bls.n	80006f6 <ST7735_DrawLine+0xbc>
 8000748:	bf00      	nop
 800074a:	371c      	adds	r7, #28
 800074c:	46bd      	mov	sp, r7
 800074e:	bd90      	pop	{r4, r7, pc}

08000750 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000750:	b580      	push	{r7, lr}
 8000752:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000754:	f000 ff8c 	bl	8001670 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000758:	f000 f842 	bl	80007e0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800075c:	f000 f8ba 	bl	80008d4 <MX_GPIO_Init>
  MX_SPI1_Init();
 8000760:	f000 f880 	bl	8000864 <MX_SPI1_Init>
  /* USER CODE BEGIN 2 */
  ST7735_Init();
 8000764:	f7ff fdd6 	bl	8000314 <ST7735_Init>
  ST7735_FillScreen(WHITE);
 8000768:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800076c:	f7ff ff54 	bl	8000618 <ST7735_FillScreen>
  novaRodada();
 8000770:	f000 fda0 	bl	80012b4 <novaRodada>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1000)
  {
	  piscaCursor();
 8000774:	f000 fa3c 	bl	8000bf0 <piscaCursor>
	  if (botEsquerda) {
 8000778:	f44f 7100 	mov.w	r1, #512	; 0x200
 800077c:	4817      	ldr	r0, [pc, #92]	; (80007dc <main+0x8c>)
 800077e:	f001 fa39 	bl	8001bf4 <HAL_GPIO_ReadPin>
 8000782:	4603      	mov	r3, r0
 8000784:	2b00      	cmp	r3, #0
 8000786:	d101      	bne.n	800078c <main+0x3c>
	 cursorParaEsquerda();
 8000788:	f000 f9ae 	bl	8000ae8 <cursorParaEsquerda>
	  }

	  if (botDireita) {
 800078c:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000790:	4812      	ldr	r0, [pc, #72]	; (80007dc <main+0x8c>)
 8000792:	f001 fa2f 	bl	8001bf4 <HAL_GPIO_ReadPin>
 8000796:	4603      	mov	r3, r0
 8000798:	2b00      	cmp	r3, #0
 800079a:	d101      	bne.n	80007a0 <main+0x50>
	  cursorParaDireita();
 800079c:	f000 f94a 	bl	8000a34 <cursorParaDireita>
	  }

	  if (botBaixo) {
 80007a0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80007a4:	480d      	ldr	r0, [pc, #52]	; (80007dc <main+0x8c>)
 80007a6:	f001 fa25 	bl	8001bf4 <HAL_GPIO_ReadPin>
 80007aa:	4603      	mov	r3, r0
 80007ac:	2b00      	cmp	r3, #0
 80007ae:	d105      	bne.n	80007bc <main+0x6c>
	  fimJogada();
 80007b0:	f000 faae 	bl	8000d10 <fimJogada>
	  HAL_Delay(300);
 80007b4:	f44f 7096 	mov.w	r0, #300	; 0x12c
 80007b8:	f000 ffbc 	bl	8001734 <HAL_Delay>
	  }

	  if (botCima) {
 80007bc:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80007c0:	4806      	ldr	r0, [pc, #24]	; (80007dc <main+0x8c>)
 80007c2:	f001 fa17 	bl	8001bf4 <HAL_GPIO_ReadPin>
 80007c6:	4603      	mov	r3, r0
 80007c8:	2b00      	cmp	r3, #0
 80007ca:	d1d3      	bne.n	8000774 <main+0x24>
	  fimJogada();
 80007cc:	f000 faa0 	bl	8000d10 <fimJogada>
	  HAL_Delay(300);
 80007d0:	f44f 7096 	mov.w	r0, #300	; 0x12c
 80007d4:	f000 ffae 	bl	8001734 <HAL_Delay>
	  piscaCursor();
 80007d8:	e7cc      	b.n	8000774 <main+0x24>
 80007da:	bf00      	nop
 80007dc:	40010800 	.word	0x40010800

080007e0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80007e0:	b580      	push	{r7, lr}
 80007e2:	b090      	sub	sp, #64	; 0x40
 80007e4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80007e6:	f107 0318 	add.w	r3, r7, #24
 80007ea:	2228      	movs	r2, #40	; 0x28
 80007ec:	2100      	movs	r1, #0
 80007ee:	4618      	mov	r0, r3
 80007f0:	f002 f8aa 	bl	8002948 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80007f4:	1d3b      	adds	r3, r7, #4
 80007f6:	2200      	movs	r2, #0
 80007f8:	601a      	str	r2, [r3, #0]
 80007fa:	605a      	str	r2, [r3, #4]
 80007fc:	609a      	str	r2, [r3, #8]
 80007fe:	60da      	str	r2, [r3, #12]
 8000800:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000802:	2302      	movs	r3, #2
 8000804:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000806:	2301      	movs	r3, #1
 8000808:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800080a:	2310      	movs	r3, #16
 800080c:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800080e:	2302      	movs	r3, #2
 8000810:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 8000812:	2300      	movs	r3, #0
 8000814:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 8000816:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 800081a:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800081c:	f107 0318 	add.w	r3, r7, #24
 8000820:	4618      	mov	r0, r3
 8000822:	f001 fa17 	bl	8001c54 <HAL_RCC_OscConfig>
 8000826:	4603      	mov	r3, r0
 8000828:	2b00      	cmp	r3, #0
 800082a:	d001      	beq.n	8000830 <SystemClock_Config+0x50>
  {
    Error_Handler();
 800082c:	f000 fe22 	bl	8001474 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000830:	230f      	movs	r3, #15
 8000832:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000834:	2302      	movs	r3, #2
 8000836:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000838:	2300      	movs	r3, #0
 800083a:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 800083c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000840:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000842:	2300      	movs	r3, #0
 8000844:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000846:	1d3b      	adds	r3, r7, #4
 8000848:	2102      	movs	r1, #2
 800084a:	4618      	mov	r0, r3
 800084c:	f001 fc82 	bl	8002154 <HAL_RCC_ClockConfig>
 8000850:	4603      	mov	r3, r0
 8000852:	2b00      	cmp	r3, #0
 8000854:	d001      	beq.n	800085a <SystemClock_Config+0x7a>
  {
    Error_Handler();
 8000856:	f000 fe0d 	bl	8001474 <Error_Handler>
  }
}
 800085a:	bf00      	nop
 800085c:	3740      	adds	r7, #64	; 0x40
 800085e:	46bd      	mov	sp, r7
 8000860:	bd80      	pop	{r7, pc}
	...

08000864 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8000864:	b580      	push	{r7, lr}
 8000866:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8000868:	4b18      	ldr	r3, [pc, #96]	; (80008cc <MX_SPI1_Init+0x68>)
 800086a:	4a19      	ldr	r2, [pc, #100]	; (80008d0 <MX_SPI1_Init+0x6c>)
 800086c:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 800086e:	4b17      	ldr	r3, [pc, #92]	; (80008cc <MX_SPI1_Init+0x68>)
 8000870:	f44f 7282 	mov.w	r2, #260	; 0x104
 8000874:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_1LINE;
 8000876:	4b15      	ldr	r3, [pc, #84]	; (80008cc <MX_SPI1_Init+0x68>)
 8000878:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 800087c:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 800087e:	4b13      	ldr	r3, [pc, #76]	; (80008cc <MX_SPI1_Init+0x68>)
 8000880:	2200      	movs	r2, #0
 8000882:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000884:	4b11      	ldr	r3, [pc, #68]	; (80008cc <MX_SPI1_Init+0x68>)
 8000886:	2200      	movs	r2, #0
 8000888:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 800088a:	4b10      	ldr	r3, [pc, #64]	; (80008cc <MX_SPI1_Init+0x68>)
 800088c:	2200      	movs	r2, #0
 800088e:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8000890:	4b0e      	ldr	r3, [pc, #56]	; (80008cc <MX_SPI1_Init+0x68>)
 8000892:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000896:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 8000898:	4b0c      	ldr	r3, [pc, #48]	; (80008cc <MX_SPI1_Init+0x68>)
 800089a:	2220      	movs	r2, #32
 800089c:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800089e:	4b0b      	ldr	r3, [pc, #44]	; (80008cc <MX_SPI1_Init+0x68>)
 80008a0:	2200      	movs	r2, #0
 80008a2:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 80008a4:	4b09      	ldr	r3, [pc, #36]	; (80008cc <MX_SPI1_Init+0x68>)
 80008a6:	2200      	movs	r2, #0
 80008a8:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80008aa:	4b08      	ldr	r3, [pc, #32]	; (80008cc <MX_SPI1_Init+0x68>)
 80008ac:	2200      	movs	r2, #0
 80008ae:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 80008b0:	4b06      	ldr	r3, [pc, #24]	; (80008cc <MX_SPI1_Init+0x68>)
 80008b2:	220a      	movs	r2, #10
 80008b4:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 80008b6:	4805      	ldr	r0, [pc, #20]	; (80008cc <MX_SPI1_Init+0x68>)
 80008b8:	f001 fdb6 	bl	8002428 <HAL_SPI_Init>
 80008bc:	4603      	mov	r3, r0
 80008be:	2b00      	cmp	r3, #0
 80008c0:	d001      	beq.n	80008c6 <MX_SPI1_Init+0x62>
  {
    Error_Handler();
 80008c2:	f000 fdd7 	bl	8001474 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 80008c6:	bf00      	nop
 80008c8:	bd80      	pop	{r7, pc}
 80008ca:	bf00      	nop
 80008cc:	200000d4 	.word	0x200000d4
 80008d0:	40013000 	.word	0x40013000

080008d4 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80008d4:	b580      	push	{r7, lr}
 80008d6:	b086      	sub	sp, #24
 80008d8:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80008da:	f107 0308 	add.w	r3, r7, #8
 80008de:	2200      	movs	r2, #0
 80008e0:	601a      	str	r2, [r3, #0]
 80008e2:	605a      	str	r2, [r3, #4]
 80008e4:	609a      	str	r2, [r3, #8]
 80008e6:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80008e8:	4b27      	ldr	r3, [pc, #156]	; (8000988 <MX_GPIO_Init+0xb4>)
 80008ea:	699b      	ldr	r3, [r3, #24]
 80008ec:	4a26      	ldr	r2, [pc, #152]	; (8000988 <MX_GPIO_Init+0xb4>)
 80008ee:	f043 0304 	orr.w	r3, r3, #4
 80008f2:	6193      	str	r3, [r2, #24]
 80008f4:	4b24      	ldr	r3, [pc, #144]	; (8000988 <MX_GPIO_Init+0xb4>)
 80008f6:	699b      	ldr	r3, [r3, #24]
 80008f8:	f003 0304 	and.w	r3, r3, #4
 80008fc:	607b      	str	r3, [r7, #4]
 80008fe:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000900:	4b21      	ldr	r3, [pc, #132]	; (8000988 <MX_GPIO_Init+0xb4>)
 8000902:	699b      	ldr	r3, [r3, #24]
 8000904:	4a20      	ldr	r2, [pc, #128]	; (8000988 <MX_GPIO_Init+0xb4>)
 8000906:	f043 0308 	orr.w	r3, r3, #8
 800090a:	6193      	str	r3, [r2, #24]
 800090c:	4b1e      	ldr	r3, [pc, #120]	; (8000988 <MX_GPIO_Init+0xb4>)
 800090e:	699b      	ldr	r3, [r3, #24]
 8000910:	f003 0308 	and.w	r3, r3, #8
 8000914:	603b      	str	r3, [r7, #0]
 8000916:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(ST7735_CS_GPIO_Port, ST7735_CS_Pin, GPIO_PIN_RESET);
 8000918:	2200      	movs	r2, #0
 800091a:	2110      	movs	r1, #16
 800091c:	481b      	ldr	r0, [pc, #108]	; (800098c <MX_GPIO_Init+0xb8>)
 800091e:	f001 f980 	bl	8001c22 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, ST7735_DC_Pin|ST7735_RES_Pin|GPIO_PIN_3|GPIO_PIN_4
 8000922:	2200      	movs	r2, #0
 8000924:	217b      	movs	r1, #123	; 0x7b
 8000926:	481a      	ldr	r0, [pc, #104]	; (8000990 <MX_GPIO_Init+0xbc>)
 8000928:	f001 f97b 	bl	8001c22 <HAL_GPIO_WritePin>
                          |GPIO_PIN_5|GPIO_PIN_6, GPIO_PIN_RESET);

  /*Configure GPIO pin : ST7735_CS_Pin */
  GPIO_InitStruct.Pin = ST7735_CS_Pin;
 800092c:	2310      	movs	r3, #16
 800092e:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000930:	2301      	movs	r3, #1
 8000932:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000934:	2300      	movs	r3, #0
 8000936:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000938:	2302      	movs	r3, #2
 800093a:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(ST7735_CS_GPIO_Port, &GPIO_InitStruct);
 800093c:	f107 0308 	add.w	r3, r7, #8
 8000940:	4619      	mov	r1, r3
 8000942:	4812      	ldr	r0, [pc, #72]	; (800098c <MX_GPIO_Init+0xb8>)
 8000944:	f000 fffc 	bl	8001940 <HAL_GPIO_Init>

  /*Configure GPIO pins : ST7735_DC_Pin ST7735_RES_Pin PB3 PB4
                           PB5 PB6 */
  GPIO_InitStruct.Pin = ST7735_DC_Pin|ST7735_RES_Pin|GPIO_PIN_3|GPIO_PIN_4
 8000948:	237b      	movs	r3, #123	; 0x7b
 800094a:	60bb      	str	r3, [r7, #8]
                          |GPIO_PIN_5|GPIO_PIN_6;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800094c:	2301      	movs	r3, #1
 800094e:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000950:	2300      	movs	r3, #0
 8000952:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000954:	2302      	movs	r3, #2
 8000956:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000958:	f107 0308 	add.w	r3, r7, #8
 800095c:	4619      	mov	r1, r3
 800095e:	480c      	ldr	r0, [pc, #48]	; (8000990 <MX_GPIO_Init+0xbc>)
 8000960:	f000 ffee 	bl	8001940 <HAL_GPIO_Init>

  /*Configure GPIO pins : PA9 PA10 PA11 PA12 */
  GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12;
 8000964:	f44f 53f0 	mov.w	r3, #7680	; 0x1e00
 8000968:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800096a:	2300      	movs	r3, #0
 800096c:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800096e:	2301      	movs	r3, #1
 8000970:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000972:	f107 0308 	add.w	r3, r7, #8
 8000976:	4619      	mov	r1, r3
 8000978:	4804      	ldr	r0, [pc, #16]	; (800098c <MX_GPIO_Init+0xb8>)
 800097a:	f000 ffe1 	bl	8001940 <HAL_GPIO_Init>

}
 800097e:	bf00      	nop
 8000980:	3718      	adds	r7, #24
 8000982:	46bd      	mov	sp, r7
 8000984:	bd80      	pop	{r7, pc}
 8000986:	bf00      	nop
 8000988:	40021000 	.word	0x40021000
 800098c:	40010800 	.word	0x40010800
 8000990:	40010c00 	.word	0x40010c00

08000994 <desenhaQuad>:

/* USER CODE BEGIN 4 */
void desenhaQuad (short linha, short coluna, const char* chr) {
 8000994:	b580      	push	{r7, lr}
 8000996:	b088      	sub	sp, #32
 8000998:	af04      	add	r7, sp, #16
 800099a:	4603      	mov	r3, r0
 800099c:	603a      	str	r2, [r7, #0]
 800099e:	80fb      	strh	r3, [r7, #6]
 80009a0:	460b      	mov	r3, r1
 80009a2:	80bb      	strh	r3, [r7, #4]
	short posX = 50 + 20 * (linha - 1);
 80009a4:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80009a8:	3b01      	subs	r3, #1
 80009aa:	b29b      	uxth	r3, r3
 80009ac:	461a      	mov	r2, r3
 80009ae:	0092      	lsls	r2, r2, #2
 80009b0:	4413      	add	r3, r2
 80009b2:	009b      	lsls	r3, r3, #2
 80009b4:	b29b      	uxth	r3, r3
 80009b6:	3332      	adds	r3, #50	; 0x32
 80009b8:	b29b      	uxth	r3, r3
 80009ba:	81fb      	strh	r3, [r7, #14]
	short posY = 9 + 20 * (coluna - 1 );
 80009bc:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80009c0:	3b01      	subs	r3, #1
 80009c2:	b29b      	uxth	r3, r3
 80009c4:	461a      	mov	r2, r3
 80009c6:	0092      	lsls	r2, r2, #2
 80009c8:	4413      	add	r3, r2
 80009ca:	009b      	lsls	r3, r3, #2
 80009cc:	b29b      	uxth	r3, r3
 80009ce:	3309      	adds	r3, #9
 80009d0:	b29b      	uxth	r3, r3
 80009d2:	81bb      	strh	r3, [r7, #12]
	  ST7735_WriteString(posX + DeslocX, posY + DeslocY, chr , FonteQuad, BLACK, WHITE);
 80009d4:	89fb      	ldrh	r3, [r7, #14]
 80009d6:	3302      	adds	r3, #2
 80009d8:	b298      	uxth	r0, r3
 80009da:	89bb      	ldrh	r3, [r7, #12]
 80009dc:	3b03      	subs	r3, #3
 80009de:	b299      	uxth	r1, r3
 80009e0:	4b08      	ldr	r3, [pc, #32]	; (8000a04 <desenhaQuad+0x70>)
 80009e2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80009e6:	9202      	str	r2, [sp, #8]
 80009e8:	2200      	movs	r2, #0
 80009ea:	9201      	str	r2, [sp, #4]
 80009ec:	685a      	ldr	r2, [r3, #4]
 80009ee:	9200      	str	r2, [sp, #0]
 80009f0:	681b      	ldr	r3, [r3, #0]
 80009f2:	683a      	ldr	r2, [r7, #0]
 80009f4:	f7ff fd52 	bl	800049c <ST7735_WriteString>
	  consertaTabuleiro();
 80009f8:	f000 f806 	bl	8000a08 <consertaTabuleiro>
}
 80009fc:	bf00      	nop
 80009fe:	3710      	adds	r7, #16
 8000a00:	46bd      	mov	sp, r7
 8000a02:	bd80      	pop	{r7, pc}
 8000a04:	20000010 	.word	0x20000010

08000a08 <consertaTabuleiro>:
void consertaTabuleiro () {
 8000a08:	b580      	push	{r7, lr}
 8000a0a:	b082      	sub	sp, #8
 8000a0c:	af02      	add	r7, sp, #8
	  ST7735_DrawLine(50, 29, 110, 29, BLACK);
 8000a0e:	2300      	movs	r3, #0
 8000a10:	9300      	str	r3, [sp, #0]
 8000a12:	231d      	movs	r3, #29
 8000a14:	226e      	movs	r2, #110	; 0x6e
 8000a16:	211d      	movs	r1, #29
 8000a18:	2032      	movs	r0, #50	; 0x32
 8000a1a:	f7ff fe0e 	bl	800063a <ST7735_DrawLine>
	  ST7735_DrawLine(50, 49, 110, 49, BLACK);
 8000a1e:	2300      	movs	r3, #0
 8000a20:	9300      	str	r3, [sp, #0]
 8000a22:	2331      	movs	r3, #49	; 0x31
 8000a24:	226e      	movs	r2, #110	; 0x6e
 8000a26:	2131      	movs	r1, #49	; 0x31
 8000a28:	2032      	movs	r0, #50	; 0x32
 8000a2a:	f7ff fe06 	bl	800063a <ST7735_DrawLine>
}
 8000a2e:	bf00      	nop
 8000a30:	46bd      	mov	sp, r7
 8000a32:	bd80      	pop	{r7, pc}

08000a34 <cursorParaDireita>:
void cursorParaDireita () {
 8000a34:	b580      	push	{r7, lr}
 8000a36:	b082      	sub	sp, #8
 8000a38:	af00      	add	r7, sp, #0
	short i;
	for (i = 1; i <=9; i++) {
 8000a3a:	2301      	movs	r3, #1
 8000a3c:	80fb      	strh	r3, [r7, #6]
 8000a3e:	e041      	b.n	8000ac4 <cursorParaDireita+0x90>
	cursorX++;
 8000a40:	4b26      	ldr	r3, [pc, #152]	; (8000adc <cursorParaDireita+0xa8>)
 8000a42:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000a46:	b29b      	uxth	r3, r3
 8000a48:	3301      	adds	r3, #1
 8000a4a:	b29b      	uxth	r3, r3
 8000a4c:	b21a      	sxth	r2, r3
 8000a4e:	4b23      	ldr	r3, [pc, #140]	; (8000adc <cursorParaDireita+0xa8>)
 8000a50:	801a      	strh	r2, [r3, #0]
	if (cursorX == 4 && cursorY == 3) {
 8000a52:	4b22      	ldr	r3, [pc, #136]	; (8000adc <cursorParaDireita+0xa8>)
 8000a54:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000a58:	2b04      	cmp	r3, #4
 8000a5a:	d10b      	bne.n	8000a74 <cursorParaDireita+0x40>
 8000a5c:	4b20      	ldr	r3, [pc, #128]	; (8000ae0 <cursorParaDireita+0xac>)
 8000a5e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000a62:	2b03      	cmp	r3, #3
 8000a64:	d106      	bne.n	8000a74 <cursorParaDireita+0x40>
		cursorX = 1;
 8000a66:	4b1d      	ldr	r3, [pc, #116]	; (8000adc <cursorParaDireita+0xa8>)
 8000a68:	2201      	movs	r2, #1
 8000a6a:	801a      	strh	r2, [r3, #0]
		cursorY = 1;
 8000a6c:	4b1c      	ldr	r3, [pc, #112]	; (8000ae0 <cursorParaDireita+0xac>)
 8000a6e:	2201      	movs	r2, #1
 8000a70:	801a      	strh	r2, [r3, #0]
 8000a72:	e010      	b.n	8000a96 <cursorParaDireita+0x62>
	} else if (cursorX == 4) {
 8000a74:	4b19      	ldr	r3, [pc, #100]	; (8000adc <cursorParaDireita+0xa8>)
 8000a76:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000a7a:	2b04      	cmp	r3, #4
 8000a7c:	d10b      	bne.n	8000a96 <cursorParaDireita+0x62>
		cursorX = 1;
 8000a7e:	4b17      	ldr	r3, [pc, #92]	; (8000adc <cursorParaDireita+0xa8>)
 8000a80:	2201      	movs	r2, #1
 8000a82:	801a      	strh	r2, [r3, #0]
	    cursorY++;
 8000a84:	4b16      	ldr	r3, [pc, #88]	; (8000ae0 <cursorParaDireita+0xac>)
 8000a86:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000a8a:	b29b      	uxth	r3, r3
 8000a8c:	3301      	adds	r3, #1
 8000a8e:	b29b      	uxth	r3, r3
 8000a90:	b21a      	sxth	r2, r3
 8000a92:	4b13      	ldr	r3, [pc, #76]	; (8000ae0 <cursorParaDireita+0xac>)
 8000a94:	801a      	strh	r2, [r3, #0]
	}

	if (matriz[cursorX - 1][cursorY - 1] == 0)
 8000a96:	4b11      	ldr	r3, [pc, #68]	; (8000adc <cursorParaDireita+0xa8>)
 8000a98:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000a9c:	1e5a      	subs	r2, r3, #1
 8000a9e:	4b10      	ldr	r3, [pc, #64]	; (8000ae0 <cursorParaDireita+0xac>)
 8000aa0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000aa4:	1e59      	subs	r1, r3, #1
 8000aa6:	480f      	ldr	r0, [pc, #60]	; (8000ae4 <cursorParaDireita+0xb0>)
 8000aa8:	4613      	mov	r3, r2
 8000aaa:	005b      	lsls	r3, r3, #1
 8000aac:	4413      	add	r3, r2
 8000aae:	440b      	add	r3, r1
 8000ab0:	f930 3013 	ldrsh.w	r3, [r0, r3, lsl #1]
 8000ab4:	2b00      	cmp	r3, #0
 8000ab6:	d00d      	beq.n	8000ad4 <cursorParaDireita+0xa0>
	for (i = 1; i <=9; i++) {
 8000ab8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000abc:	b29b      	uxth	r3, r3
 8000abe:	3301      	adds	r3, #1
 8000ac0:	b29b      	uxth	r3, r3
 8000ac2:	80fb      	strh	r3, [r7, #6]
 8000ac4:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000ac8:	2b09      	cmp	r3, #9
 8000aca:	ddb9      	ble.n	8000a40 <cursorParaDireita+0xc>
		return;

	}
	fimRodada(0);
 8000acc:	2000      	movs	r0, #0
 8000ace:	f000 fad7 	bl	8001080 <fimRodada>
 8000ad2:	e000      	b.n	8000ad6 <cursorParaDireita+0xa2>
		return;
 8000ad4:	bf00      	nop
}
 8000ad6:	3708      	adds	r7, #8
 8000ad8:	46bd      	mov	sp, r7
 8000ada:	bd80      	pop	{r7, pc}
 8000adc:	20000018 	.word	0x20000018
 8000ae0:	2000001a 	.word	0x2000001a
 8000ae4:	2000012c 	.word	0x2000012c

08000ae8 <cursorParaEsquerda>:
void cursorParaEsquerda () {
 8000ae8:	b480      	push	{r7}
 8000aea:	af00      	add	r7, sp, #0
	for (;;) {
	cursorX--;
 8000aec:	4b20      	ldr	r3, [pc, #128]	; (8000b70 <cursorParaEsquerda+0x88>)
 8000aee:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000af2:	b29b      	uxth	r3, r3
 8000af4:	3b01      	subs	r3, #1
 8000af6:	b29b      	uxth	r3, r3
 8000af8:	b21a      	sxth	r2, r3
 8000afa:	4b1d      	ldr	r3, [pc, #116]	; (8000b70 <cursorParaEsquerda+0x88>)
 8000afc:	801a      	strh	r2, [r3, #0]
	if (cursorX == 0 && cursorY == 1) {
 8000afe:	4b1c      	ldr	r3, [pc, #112]	; (8000b70 <cursorParaEsquerda+0x88>)
 8000b00:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000b04:	2b00      	cmp	r3, #0
 8000b06:	d10b      	bne.n	8000b20 <cursorParaEsquerda+0x38>
 8000b08:	4b1a      	ldr	r3, [pc, #104]	; (8000b74 <cursorParaEsquerda+0x8c>)
 8000b0a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000b0e:	2b01      	cmp	r3, #1
 8000b10:	d106      	bne.n	8000b20 <cursorParaEsquerda+0x38>
		cursorX = 3;
 8000b12:	4b17      	ldr	r3, [pc, #92]	; (8000b70 <cursorParaEsquerda+0x88>)
 8000b14:	2203      	movs	r2, #3
 8000b16:	801a      	strh	r2, [r3, #0]
		cursorY = 3;
 8000b18:	4b16      	ldr	r3, [pc, #88]	; (8000b74 <cursorParaEsquerda+0x8c>)
 8000b1a:	2203      	movs	r2, #3
 8000b1c:	801a      	strh	r2, [r3, #0]
 8000b1e:	e010      	b.n	8000b42 <cursorParaEsquerda+0x5a>
	} else if (cursorX == 0) {
 8000b20:	4b13      	ldr	r3, [pc, #76]	; (8000b70 <cursorParaEsquerda+0x88>)
 8000b22:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000b26:	2b00      	cmp	r3, #0
 8000b28:	d10b      	bne.n	8000b42 <cursorParaEsquerda+0x5a>
		cursorX = 3;
 8000b2a:	4b11      	ldr	r3, [pc, #68]	; (8000b70 <cursorParaEsquerda+0x88>)
 8000b2c:	2203      	movs	r2, #3
 8000b2e:	801a      	strh	r2, [r3, #0]
		cursorY--;
 8000b30:	4b10      	ldr	r3, [pc, #64]	; (8000b74 <cursorParaEsquerda+0x8c>)
 8000b32:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000b36:	b29b      	uxth	r3, r3
 8000b38:	3b01      	subs	r3, #1
 8000b3a:	b29b      	uxth	r3, r3
 8000b3c:	b21a      	sxth	r2, r3
 8000b3e:	4b0d      	ldr	r3, [pc, #52]	; (8000b74 <cursorParaEsquerda+0x8c>)
 8000b40:	801a      	strh	r2, [r3, #0]
	}

	if (matriz[cursorX - 1][cursorY - 1] == 0)
 8000b42:	4b0b      	ldr	r3, [pc, #44]	; (8000b70 <cursorParaEsquerda+0x88>)
 8000b44:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000b48:	1e5a      	subs	r2, r3, #1
 8000b4a:	4b0a      	ldr	r3, [pc, #40]	; (8000b74 <cursorParaEsquerda+0x8c>)
 8000b4c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000b50:	1e59      	subs	r1, r3, #1
 8000b52:	4809      	ldr	r0, [pc, #36]	; (8000b78 <cursorParaEsquerda+0x90>)
 8000b54:	4613      	mov	r3, r2
 8000b56:	005b      	lsls	r3, r3, #1
 8000b58:	4413      	add	r3, r2
 8000b5a:	440b      	add	r3, r1
 8000b5c:	f930 3013 	ldrsh.w	r3, [r0, r3, lsl #1]
 8000b60:	2b00      	cmp	r3, #0
 8000b62:	d000      	beq.n	8000b66 <cursorParaEsquerda+0x7e>
	cursorX--;
 8000b64:	e7c2      	b.n	8000aec <cursorParaEsquerda+0x4>
		break;
 8000b66:	bf00      	nop

	}
}
 8000b68:	bf00      	nop
 8000b6a:	46bd      	mov	sp, r7
 8000b6c:	bc80      	pop	{r7}
 8000b6e:	4770      	bx	lr
 8000b70:	20000018 	.word	0x20000018
 8000b74:	2000001a 	.word	0x2000001a
 8000b78:	2000012c 	.word	0x2000012c

08000b7c <alternaJogador>:
void alternaJogador() {
 8000b7c:	b580      	push	{r7, lr}
 8000b7e:	b084      	sub	sp, #16
 8000b80:	af04      	add	r7, sp, #16
	if (*jogador == 'x') {
 8000b82:	4b15      	ldr	r3, [pc, #84]	; (8000bd8 <alternaJogador+0x5c>)
 8000b84:	681b      	ldr	r3, [r3, #0]
 8000b86:	781b      	ldrb	r3, [r3, #0]
 8000b88:	2b78      	cmp	r3, #120	; 0x78
 8000b8a:	d111      	bne.n	8000bb0 <alternaJogador+0x34>
		ST7735_WriteString(0, 0, "o:" , Font_11x18, BLACK, WHITE);
 8000b8c:	4b13      	ldr	r3, [pc, #76]	; (8000bdc <alternaJogador+0x60>)
 8000b8e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000b92:	9202      	str	r2, [sp, #8]
 8000b94:	2200      	movs	r2, #0
 8000b96:	9201      	str	r2, [sp, #4]
 8000b98:	685a      	ldr	r2, [r3, #4]
 8000b9a:	9200      	str	r2, [sp, #0]
 8000b9c:	681b      	ldr	r3, [r3, #0]
 8000b9e:	4a10      	ldr	r2, [pc, #64]	; (8000be0 <alternaJogador+0x64>)
 8000ba0:	2100      	movs	r1, #0
 8000ba2:	2000      	movs	r0, #0
 8000ba4:	f7ff fc7a 	bl	800049c <ST7735_WriteString>
	   	jogador = "o";
 8000ba8:	4b0b      	ldr	r3, [pc, #44]	; (8000bd8 <alternaJogador+0x5c>)
 8000baa:	4a0e      	ldr	r2, [pc, #56]	; (8000be4 <alternaJogador+0x68>)
 8000bac:	601a      	str	r2, [r3, #0]
	    } else {
	    ST7735_WriteString(0, 0, "x:" , Font_11x18, BLACK, WHITE);
	   	jogador = "x";
	    }
}
 8000bae:	e010      	b.n	8000bd2 <alternaJogador+0x56>
	    ST7735_WriteString(0, 0, "x:" , Font_11x18, BLACK, WHITE);
 8000bb0:	4b0a      	ldr	r3, [pc, #40]	; (8000bdc <alternaJogador+0x60>)
 8000bb2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000bb6:	9202      	str	r2, [sp, #8]
 8000bb8:	2200      	movs	r2, #0
 8000bba:	9201      	str	r2, [sp, #4]
 8000bbc:	685a      	ldr	r2, [r3, #4]
 8000bbe:	9200      	str	r2, [sp, #0]
 8000bc0:	681b      	ldr	r3, [r3, #0]
 8000bc2:	4a09      	ldr	r2, [pc, #36]	; (8000be8 <alternaJogador+0x6c>)
 8000bc4:	2100      	movs	r1, #0
 8000bc6:	2000      	movs	r0, #0
 8000bc8:	f7ff fc68 	bl	800049c <ST7735_WriteString>
	   	jogador = "x";
 8000bcc:	4b02      	ldr	r3, [pc, #8]	; (8000bd8 <alternaJogador+0x5c>)
 8000bce:	4a07      	ldr	r2, [pc, #28]	; (8000bec <alternaJogador+0x70>)
 8000bd0:	601a      	str	r2, [r3, #0]
}
 8000bd2:	bf00      	nop
 8000bd4:	46bd      	mov	sp, r7
 8000bd6:	bd80      	pop	{r7, pc}
 8000bd8:	2000001c 	.word	0x2000001c
 8000bdc:	20000008 	.word	0x20000008
 8000be0:	08003198 	.word	0x08003198
 8000be4:	0800319c 	.word	0x0800319c
 8000be8:	080031a0 	.word	0x080031a0
 8000bec:	08003194 	.word	0x08003194

08000bf0 <piscaCursor>:
void piscaCursor() {
 8000bf0:	b580      	push	{r7, lr}
 8000bf2:	b082      	sub	sp, #8
 8000bf4:	af00      	add	r7, sp, #0
	while (1) {
		desenhaQuad (cursorX, cursorY, jogador);
 8000bf6:	4b41      	ldr	r3, [pc, #260]	; (8000cfc <piscaCursor+0x10c>)
 8000bf8:	f9b3 0000 	ldrsh.w	r0, [r3]
 8000bfc:	4b40      	ldr	r3, [pc, #256]	; (8000d00 <piscaCursor+0x110>)
 8000bfe:	f9b3 1000 	ldrsh.w	r1, [r3]
 8000c02:	4b40      	ldr	r3, [pc, #256]	; (8000d04 <piscaCursor+0x114>)
 8000c04:	681b      	ldr	r3, [r3, #0]
 8000c06:	461a      	mov	r2, r3
 8000c08:	f7ff fec4 	bl	8000994 <desenhaQuad>
		for (int x=0;x<20;x++)
 8000c0c:	2300      	movs	r3, #0
 8000c0e:	607b      	str	r3, [r7, #4]
 8000c10:	e033      	b.n	8000c7a <piscaCursor+0x8a>
		{
			HAL_Delay(50);
 8000c12:	2032      	movs	r0, #50	; 0x32
 8000c14:	f000 fd8e 	bl	8001734 <HAL_Delay>
			if (botCima || botDireita || botEsquerda || botBaixo)
 8000c18:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000c1c:	483a      	ldr	r0, [pc, #232]	; (8000d08 <piscaCursor+0x118>)
 8000c1e:	f000 ffe9 	bl	8001bf4 <HAL_GPIO_ReadPin>
 8000c22:	4603      	mov	r3, r0
 8000c24:	2b00      	cmp	r3, #0
 8000c26:	d017      	beq.n	8000c58 <piscaCursor+0x68>
 8000c28:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000c2c:	4836      	ldr	r0, [pc, #216]	; (8000d08 <piscaCursor+0x118>)
 8000c2e:	f000 ffe1 	bl	8001bf4 <HAL_GPIO_ReadPin>
 8000c32:	4603      	mov	r3, r0
 8000c34:	2b00      	cmp	r3, #0
 8000c36:	d00f      	beq.n	8000c58 <piscaCursor+0x68>
 8000c38:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000c3c:	4832      	ldr	r0, [pc, #200]	; (8000d08 <piscaCursor+0x118>)
 8000c3e:	f000 ffd9 	bl	8001bf4 <HAL_GPIO_ReadPin>
 8000c42:	4603      	mov	r3, r0
 8000c44:	2b00      	cmp	r3, #0
 8000c46:	d007      	beq.n	8000c58 <piscaCursor+0x68>
 8000c48:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000c4c:	482e      	ldr	r0, [pc, #184]	; (8000d08 <piscaCursor+0x118>)
 8000c4e:	f000 ffd1 	bl	8001bf4 <HAL_GPIO_ReadPin>
 8000c52:	4603      	mov	r3, r0
 8000c54:	2b00      	cmp	r3, #0
 8000c56:	d10d      	bne.n	8000c74 <piscaCursor+0x84>
			{
				HAL_Delay(66);
 8000c58:	2042      	movs	r0, #66	; 0x42
 8000c5a:	f000 fd6b 	bl	8001734 <HAL_Delay>
				desenhaQuad (cursorX, cursorY, " ");
 8000c5e:	4b27      	ldr	r3, [pc, #156]	; (8000cfc <piscaCursor+0x10c>)
 8000c60:	f9b3 0000 	ldrsh.w	r0, [r3]
 8000c64:	4b26      	ldr	r3, [pc, #152]	; (8000d00 <piscaCursor+0x110>)
 8000c66:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000c6a:	4a28      	ldr	r2, [pc, #160]	; (8000d0c <piscaCursor+0x11c>)
 8000c6c:	4619      	mov	r1, r3
 8000c6e:	f7ff fe91 	bl	8000994 <desenhaQuad>
				return;
 8000c72:	e040      	b.n	8000cf6 <piscaCursor+0x106>
		for (int x=0;x<20;x++)
 8000c74:	687b      	ldr	r3, [r7, #4]
 8000c76:	3301      	adds	r3, #1
 8000c78:	607b      	str	r3, [r7, #4]
 8000c7a:	687b      	ldr	r3, [r7, #4]
 8000c7c:	2b13      	cmp	r3, #19
 8000c7e:	ddc8      	ble.n	8000c12 <piscaCursor+0x22>
			}
		}
		desenhaQuad (cursorX, cursorY, " ");
 8000c80:	4b1e      	ldr	r3, [pc, #120]	; (8000cfc <piscaCursor+0x10c>)
 8000c82:	f9b3 0000 	ldrsh.w	r0, [r3]
 8000c86:	4b1e      	ldr	r3, [pc, #120]	; (8000d00 <piscaCursor+0x110>)
 8000c88:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000c8c:	4a1f      	ldr	r2, [pc, #124]	; (8000d0c <piscaCursor+0x11c>)
 8000c8e:	4619      	mov	r1, r3
 8000c90:	f7ff fe80 	bl	8000994 <desenhaQuad>
		for (int x=0;x<20;x++)
 8000c94:	2300      	movs	r3, #0
 8000c96:	603b      	str	r3, [r7, #0]
 8000c98:	e029      	b.n	8000cee <piscaCursor+0xfe>
		{
			HAL_Delay(50);
 8000c9a:	2032      	movs	r0, #50	; 0x32
 8000c9c:	f000 fd4a 	bl	8001734 <HAL_Delay>
			if (botCima || botDireita || botEsquerda || botBaixo)
 8000ca0:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000ca4:	4818      	ldr	r0, [pc, #96]	; (8000d08 <piscaCursor+0x118>)
 8000ca6:	f000 ffa5 	bl	8001bf4 <HAL_GPIO_ReadPin>
 8000caa:	4603      	mov	r3, r0
 8000cac:	2b00      	cmp	r3, #0
 8000cae:	d017      	beq.n	8000ce0 <piscaCursor+0xf0>
 8000cb0:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000cb4:	4814      	ldr	r0, [pc, #80]	; (8000d08 <piscaCursor+0x118>)
 8000cb6:	f000 ff9d 	bl	8001bf4 <HAL_GPIO_ReadPin>
 8000cba:	4603      	mov	r3, r0
 8000cbc:	2b00      	cmp	r3, #0
 8000cbe:	d00f      	beq.n	8000ce0 <piscaCursor+0xf0>
 8000cc0:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000cc4:	4810      	ldr	r0, [pc, #64]	; (8000d08 <piscaCursor+0x118>)
 8000cc6:	f000 ff95 	bl	8001bf4 <HAL_GPIO_ReadPin>
 8000cca:	4603      	mov	r3, r0
 8000ccc:	2b00      	cmp	r3, #0
 8000cce:	d007      	beq.n	8000ce0 <piscaCursor+0xf0>
 8000cd0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000cd4:	480c      	ldr	r0, [pc, #48]	; (8000d08 <piscaCursor+0x118>)
 8000cd6:	f000 ff8d 	bl	8001bf4 <HAL_GPIO_ReadPin>
 8000cda:	4603      	mov	r3, r0
 8000cdc:	2b00      	cmp	r3, #0
 8000cde:	d103      	bne.n	8000ce8 <piscaCursor+0xf8>
			{
				HAL_Delay(66);
 8000ce0:	2042      	movs	r0, #66	; 0x42
 8000ce2:	f000 fd27 	bl	8001734 <HAL_Delay>
				return;
 8000ce6:	e006      	b.n	8000cf6 <piscaCursor+0x106>
		for (int x=0;x<20;x++)
 8000ce8:	683b      	ldr	r3, [r7, #0]
 8000cea:	3301      	adds	r3, #1
 8000cec:	603b      	str	r3, [r7, #0]
 8000cee:	683b      	ldr	r3, [r7, #0]
 8000cf0:	2b13      	cmp	r3, #19
 8000cf2:	ddd2      	ble.n	8000c9a <piscaCursor+0xaa>
		desenhaQuad (cursorX, cursorY, jogador);
 8000cf4:	e77f      	b.n	8000bf6 <piscaCursor+0x6>
			}
		}
	}
}
 8000cf6:	3708      	adds	r7, #8
 8000cf8:	46bd      	mov	sp, r7
 8000cfa:	bd80      	pop	{r7, pc}
 8000cfc:	20000018 	.word	0x20000018
 8000d00:	2000001a 	.word	0x2000001a
 8000d04:	2000001c 	.word	0x2000001c
 8000d08:	40010800 	.word	0x40010800
 8000d0c:	080031a4 	.word	0x080031a4

08000d10 <fimJogada>:
void fimJogada() {
 8000d10:	b580      	push	{r7, lr}
 8000d12:	af00      	add	r7, sp, #0
	if (*jogador == 'x') {
 8000d14:	4b1f      	ldr	r3, [pc, #124]	; (8000d94 <fimJogada+0x84>)
 8000d16:	681b      	ldr	r3, [r3, #0]
 8000d18:	781b      	ldrb	r3, [r3, #0]
 8000d1a:	2b78      	cmp	r3, #120	; 0x78
 8000d1c:	d110      	bne.n	8000d40 <fimJogada+0x30>
		matriz[cursorX - 1][cursorY - 1] = 1;
 8000d1e:	4b1e      	ldr	r3, [pc, #120]	; (8000d98 <fimJogada+0x88>)
 8000d20:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000d24:	1e5a      	subs	r2, r3, #1
 8000d26:	4b1d      	ldr	r3, [pc, #116]	; (8000d9c <fimJogada+0x8c>)
 8000d28:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000d2c:	1e59      	subs	r1, r3, #1
 8000d2e:	481c      	ldr	r0, [pc, #112]	; (8000da0 <fimJogada+0x90>)
 8000d30:	4613      	mov	r3, r2
 8000d32:	005b      	lsls	r3, r3, #1
 8000d34:	4413      	add	r3, r2
 8000d36:	440b      	add	r3, r1
 8000d38:	2201      	movs	r2, #1
 8000d3a:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 8000d3e:	e010      	b.n	8000d62 <fimJogada+0x52>
	} else {
		matriz[cursorX - 1][cursorY - 1] = -1;
 8000d40:	4b15      	ldr	r3, [pc, #84]	; (8000d98 <fimJogada+0x88>)
 8000d42:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000d46:	1e5a      	subs	r2, r3, #1
 8000d48:	4b14      	ldr	r3, [pc, #80]	; (8000d9c <fimJogada+0x8c>)
 8000d4a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000d4e:	1e59      	subs	r1, r3, #1
 8000d50:	4813      	ldr	r0, [pc, #76]	; (8000da0 <fimJogada+0x90>)
 8000d52:	4613      	mov	r3, r2
 8000d54:	005b      	lsls	r3, r3, #1
 8000d56:	4413      	add	r3, r2
 8000d58:	440b      	add	r3, r1
 8000d5a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000d5e:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
	}
	desenhaQuad (cursorX, cursorY, jogador);
 8000d62:	4b0d      	ldr	r3, [pc, #52]	; (8000d98 <fimJogada+0x88>)
 8000d64:	f9b3 0000 	ldrsh.w	r0, [r3]
 8000d68:	4b0c      	ldr	r3, [pc, #48]	; (8000d9c <fimJogada+0x8c>)
 8000d6a:	f9b3 1000 	ldrsh.w	r1, [r3]
 8000d6e:	4b09      	ldr	r3, [pc, #36]	; (8000d94 <fimJogada+0x84>)
 8000d70:	681b      	ldr	r3, [r3, #0]
 8000d72:	461a      	mov	r2, r3
 8000d74:	f7ff fe0e 	bl	8000994 <desenhaQuad>
	alternaJogador();
 8000d78:	f7ff ff00 	bl	8000b7c <alternaJogador>
	cursorX = 0;
 8000d7c:	4b06      	ldr	r3, [pc, #24]	; (8000d98 <fimJogada+0x88>)
 8000d7e:	2200      	movs	r2, #0
 8000d80:	801a      	strh	r2, [r3, #0]
	cursorY = 1;
 8000d82:	4b06      	ldr	r3, [pc, #24]	; (8000d9c <fimJogada+0x8c>)
 8000d84:	2201      	movs	r2, #1
 8000d86:	801a      	strh	r2, [r3, #0]
	cursorParaDireita();
 8000d88:	f7ff fe54 	bl	8000a34 <cursorParaDireita>
	checarVitoria();
 8000d8c:	f000 f80a 	bl	8000da4 <checarVitoria>
}
 8000d90:	bf00      	nop
 8000d92:	bd80      	pop	{r7, pc}
 8000d94:	2000001c 	.word	0x2000001c
 8000d98:	20000018 	.word	0x20000018
 8000d9c:	2000001a 	.word	0x2000001a
 8000da0:	2000012c 	.word	0x2000012c

08000da4 <checarVitoria>:
void checarVitoria() {
 8000da4:	b580      	push	{r7, lr}
 8000da6:	b084      	sub	sp, #16
 8000da8:	af02      	add	r7, sp, #8
	short i = 0;
 8000daa:	2300      	movs	r3, #0
 8000dac:	80fb      	strh	r3, [r7, #6]
	for (i=0; i<=2; i++) {
 8000dae:	2300      	movs	r3, #0
 8000db0:	80fb      	strh	r3, [r7, #6]
 8000db2:	e083      	b.n	8000ebc <checarVitoria+0x118>
		if (matriz[i][0] + matriz[i][1] + matriz[i][2] == 3) {
 8000db4:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8000db8:	49b0      	ldr	r1, [pc, #704]	; (800107c <checarVitoria+0x2d8>)
 8000dba:	4613      	mov	r3, r2
 8000dbc:	005b      	lsls	r3, r3, #1
 8000dbe:	4413      	add	r3, r2
 8000dc0:	005b      	lsls	r3, r3, #1
 8000dc2:	440b      	add	r3, r1
 8000dc4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000dc8:	4618      	mov	r0, r3
 8000dca:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8000dce:	49ab      	ldr	r1, [pc, #684]	; (800107c <checarVitoria+0x2d8>)
 8000dd0:	4613      	mov	r3, r2
 8000dd2:	005b      	lsls	r3, r3, #1
 8000dd4:	4413      	add	r3, r2
 8000dd6:	005b      	lsls	r3, r3, #1
 8000dd8:	440b      	add	r3, r1
 8000dda:	3302      	adds	r3, #2
 8000ddc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000de0:	18c1      	adds	r1, r0, r3
 8000de2:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8000de6:	48a5      	ldr	r0, [pc, #660]	; (800107c <checarVitoria+0x2d8>)
 8000de8:	4613      	mov	r3, r2
 8000dea:	005b      	lsls	r3, r3, #1
 8000dec:	4413      	add	r3, r2
 8000dee:	005b      	lsls	r3, r3, #1
 8000df0:	4403      	add	r3, r0
 8000df2:	3304      	adds	r3, #4
 8000df4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000df8:	440b      	add	r3, r1
 8000dfa:	2b03      	cmp	r3, #3
 8000dfc:	d119      	bne.n	8000e32 <checarVitoria+0x8e>
			ST7735_DrawLine(59 + 20 * i + DeslocX, 9 + DeslocY, 59 + 20 * i, 74, BLACK);
 8000dfe:	88fb      	ldrh	r3, [r7, #6]
 8000e00:	461a      	mov	r2, r3
 8000e02:	0092      	lsls	r2, r2, #2
 8000e04:	4413      	add	r3, r2
 8000e06:	009b      	lsls	r3, r3, #2
 8000e08:	b29b      	uxth	r3, r3
 8000e0a:	333d      	adds	r3, #61	; 0x3d
 8000e0c:	b298      	uxth	r0, r3
 8000e0e:	88fb      	ldrh	r3, [r7, #6]
 8000e10:	461a      	mov	r2, r3
 8000e12:	0092      	lsls	r2, r2, #2
 8000e14:	4413      	add	r3, r2
 8000e16:	009b      	lsls	r3, r3, #2
 8000e18:	b29b      	uxth	r3, r3
 8000e1a:	333b      	adds	r3, #59	; 0x3b
 8000e1c:	b29a      	uxth	r2, r3
 8000e1e:	2300      	movs	r3, #0
 8000e20:	9300      	str	r3, [sp, #0]
 8000e22:	234a      	movs	r3, #74	; 0x4a
 8000e24:	2106      	movs	r1, #6
 8000e26:	f7ff fc08 	bl	800063a <ST7735_DrawLine>
			fimRodada(1);
 8000e2a:	2001      	movs	r0, #1
 8000e2c:	f000 f928 	bl	8001080 <fimRodada>
 8000e30:	e03e      	b.n	8000eb0 <checarVitoria+0x10c>
		} else if (matriz[i][0] + matriz[i][1] + matriz[i][2] == -3) {
 8000e32:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8000e36:	4991      	ldr	r1, [pc, #580]	; (800107c <checarVitoria+0x2d8>)
 8000e38:	4613      	mov	r3, r2
 8000e3a:	005b      	lsls	r3, r3, #1
 8000e3c:	4413      	add	r3, r2
 8000e3e:	005b      	lsls	r3, r3, #1
 8000e40:	440b      	add	r3, r1
 8000e42:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000e46:	4618      	mov	r0, r3
 8000e48:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8000e4c:	498b      	ldr	r1, [pc, #556]	; (800107c <checarVitoria+0x2d8>)
 8000e4e:	4613      	mov	r3, r2
 8000e50:	005b      	lsls	r3, r3, #1
 8000e52:	4413      	add	r3, r2
 8000e54:	005b      	lsls	r3, r3, #1
 8000e56:	440b      	add	r3, r1
 8000e58:	3302      	adds	r3, #2
 8000e5a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000e5e:	18c1      	adds	r1, r0, r3
 8000e60:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8000e64:	4885      	ldr	r0, [pc, #532]	; (800107c <checarVitoria+0x2d8>)
 8000e66:	4613      	mov	r3, r2
 8000e68:	005b      	lsls	r3, r3, #1
 8000e6a:	4413      	add	r3, r2
 8000e6c:	005b      	lsls	r3, r3, #1
 8000e6e:	4403      	add	r3, r0
 8000e70:	3304      	adds	r3, #4
 8000e72:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000e76:	440b      	add	r3, r1
 8000e78:	f113 0f03 	cmn.w	r3, #3
 8000e7c:	d118      	bne.n	8000eb0 <checarVitoria+0x10c>
			ST7735_DrawLine(59 + 20 * i + DeslocX, 9 + DeslocY, 59 + 20 * i, 74, BLACK);
 8000e7e:	88fb      	ldrh	r3, [r7, #6]
 8000e80:	461a      	mov	r2, r3
 8000e82:	0092      	lsls	r2, r2, #2
 8000e84:	4413      	add	r3, r2
 8000e86:	009b      	lsls	r3, r3, #2
 8000e88:	b29b      	uxth	r3, r3
 8000e8a:	333d      	adds	r3, #61	; 0x3d
 8000e8c:	b298      	uxth	r0, r3
 8000e8e:	88fb      	ldrh	r3, [r7, #6]
 8000e90:	461a      	mov	r2, r3
 8000e92:	0092      	lsls	r2, r2, #2
 8000e94:	4413      	add	r3, r2
 8000e96:	009b      	lsls	r3, r3, #2
 8000e98:	b29b      	uxth	r3, r3
 8000e9a:	333b      	adds	r3, #59	; 0x3b
 8000e9c:	b29a      	uxth	r2, r3
 8000e9e:	2300      	movs	r3, #0
 8000ea0:	9300      	str	r3, [sp, #0]
 8000ea2:	234a      	movs	r3, #74	; 0x4a
 8000ea4:	2106      	movs	r1, #6
 8000ea6:	f7ff fbc8 	bl	800063a <ST7735_DrawLine>
			fimRodada(2);
 8000eaa:	2002      	movs	r0, #2
 8000eac:	f000 f8e8 	bl	8001080 <fimRodada>
	for (i=0; i<=2; i++) {
 8000eb0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000eb4:	b29b      	uxth	r3, r3
 8000eb6:	3301      	adds	r3, #1
 8000eb8:	b29b      	uxth	r3, r3
 8000eba:	80fb      	strh	r3, [r7, #6]
 8000ebc:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000ec0:	2b02      	cmp	r3, #2
 8000ec2:	f77f af77 	ble.w	8000db4 <checarVitoria+0x10>
		}
	}
	for (i=0; i<=2; i++) {
 8000ec6:	2300      	movs	r3, #0
 8000ec8:	80fb      	strh	r3, [r7, #6]
 8000eca:	e067      	b.n	8000f9c <checarVitoria+0x1f8>
		if (matriz[0][i] + matriz[1][i] + matriz[2][i] == 3) {
 8000ecc:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000ed0:	4a6a      	ldr	r2, [pc, #424]	; (800107c <checarVitoria+0x2d8>)
 8000ed2:	f932 3013 	ldrsh.w	r3, [r2, r3, lsl #1]
 8000ed6:	4619      	mov	r1, r3
 8000ed8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000edc:	4a67      	ldr	r2, [pc, #412]	; (800107c <checarVitoria+0x2d8>)
 8000ede:	3303      	adds	r3, #3
 8000ee0:	f932 3013 	ldrsh.w	r3, [r2, r3, lsl #1]
 8000ee4:	440b      	add	r3, r1
 8000ee6:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8000eea:	4964      	ldr	r1, [pc, #400]	; (800107c <checarVitoria+0x2d8>)
 8000eec:	3206      	adds	r2, #6
 8000eee:	f931 2012 	ldrsh.w	r2, [r1, r2, lsl #1]
 8000ef2:	4413      	add	r3, r2
 8000ef4:	2b03      	cmp	r3, #3
 8000ef6:	d11a      	bne.n	8000f2e <checarVitoria+0x18a>
			ST7735_DrawLine(45, 21 + 20 * i + DeslocY, 115, 21 + 20 * i + DeslocY, BLACK);
 8000ef8:	88fb      	ldrh	r3, [r7, #6]
 8000efa:	461a      	mov	r2, r3
 8000efc:	0092      	lsls	r2, r2, #2
 8000efe:	4413      	add	r3, r2
 8000f00:	009b      	lsls	r3, r3, #2
 8000f02:	b29b      	uxth	r3, r3
 8000f04:	3312      	adds	r3, #18
 8000f06:	b299      	uxth	r1, r3
 8000f08:	88fb      	ldrh	r3, [r7, #6]
 8000f0a:	461a      	mov	r2, r3
 8000f0c:	0092      	lsls	r2, r2, #2
 8000f0e:	4413      	add	r3, r2
 8000f10:	009b      	lsls	r3, r3, #2
 8000f12:	b29b      	uxth	r3, r3
 8000f14:	3312      	adds	r3, #18
 8000f16:	b29a      	uxth	r2, r3
 8000f18:	2300      	movs	r3, #0
 8000f1a:	9300      	str	r3, [sp, #0]
 8000f1c:	4613      	mov	r3, r2
 8000f1e:	2273      	movs	r2, #115	; 0x73
 8000f20:	202d      	movs	r0, #45	; 0x2d
 8000f22:	f7ff fb8a 	bl	800063a <ST7735_DrawLine>
			fimRodada(1);
 8000f26:	2001      	movs	r0, #1
 8000f28:	f000 f8aa 	bl	8001080 <fimRodada>
 8000f2c:	e030      	b.n	8000f90 <checarVitoria+0x1ec>
		} else if (matriz[0][i] + matriz[1][i] + matriz[2][i] == -3) {
 8000f2e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000f32:	4a52      	ldr	r2, [pc, #328]	; (800107c <checarVitoria+0x2d8>)
 8000f34:	f932 3013 	ldrsh.w	r3, [r2, r3, lsl #1]
 8000f38:	4619      	mov	r1, r3
 8000f3a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000f3e:	4a4f      	ldr	r2, [pc, #316]	; (800107c <checarVitoria+0x2d8>)
 8000f40:	3303      	adds	r3, #3
 8000f42:	f932 3013 	ldrsh.w	r3, [r2, r3, lsl #1]
 8000f46:	440b      	add	r3, r1
 8000f48:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8000f4c:	494b      	ldr	r1, [pc, #300]	; (800107c <checarVitoria+0x2d8>)
 8000f4e:	3206      	adds	r2, #6
 8000f50:	f931 2012 	ldrsh.w	r2, [r1, r2, lsl #1]
 8000f54:	4413      	add	r3, r2
 8000f56:	f113 0f03 	cmn.w	r3, #3
 8000f5a:	d119      	bne.n	8000f90 <checarVitoria+0x1ec>
			ST7735_DrawLine(45, 21 + 20 * i + DeslocY, 115, 21 + 20 * i + DeslocY, BLACK);
 8000f5c:	88fb      	ldrh	r3, [r7, #6]
 8000f5e:	461a      	mov	r2, r3
 8000f60:	0092      	lsls	r2, r2, #2
 8000f62:	4413      	add	r3, r2
 8000f64:	009b      	lsls	r3, r3, #2
 8000f66:	b29b      	uxth	r3, r3
 8000f68:	3312      	adds	r3, #18
 8000f6a:	b299      	uxth	r1, r3
 8000f6c:	88fb      	ldrh	r3, [r7, #6]
 8000f6e:	461a      	mov	r2, r3
 8000f70:	0092      	lsls	r2, r2, #2
 8000f72:	4413      	add	r3, r2
 8000f74:	009b      	lsls	r3, r3, #2
 8000f76:	b29b      	uxth	r3, r3
 8000f78:	3312      	adds	r3, #18
 8000f7a:	b29a      	uxth	r2, r3
 8000f7c:	2300      	movs	r3, #0
 8000f7e:	9300      	str	r3, [sp, #0]
 8000f80:	4613      	mov	r3, r2
 8000f82:	2273      	movs	r2, #115	; 0x73
 8000f84:	202d      	movs	r0, #45	; 0x2d
 8000f86:	f7ff fb58 	bl	800063a <ST7735_DrawLine>
			fimRodada(2);
 8000f8a:	2002      	movs	r0, #2
 8000f8c:	f000 f878 	bl	8001080 <fimRodada>
	for (i=0; i<=2; i++) {
 8000f90:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000f94:	b29b      	uxth	r3, r3
 8000f96:	3301      	adds	r3, #1
 8000f98:	b29b      	uxth	r3, r3
 8000f9a:	80fb      	strh	r3, [r7, #6]
 8000f9c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000fa0:	2b02      	cmp	r3, #2
 8000fa2:	dd93      	ble.n	8000ecc <checarVitoria+0x128>
		}
	}

	if (matriz[0][0] + matriz[1][1] + matriz[2][2] == 3) {
 8000fa4:	4b35      	ldr	r3, [pc, #212]	; (800107c <checarVitoria+0x2d8>)
 8000fa6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000faa:	461a      	mov	r2, r3
 8000fac:	4b33      	ldr	r3, [pc, #204]	; (800107c <checarVitoria+0x2d8>)
 8000fae:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8000fb2:	4413      	add	r3, r2
 8000fb4:	4a31      	ldr	r2, [pc, #196]	; (800107c <checarVitoria+0x2d8>)
 8000fb6:	f9b2 2010 	ldrsh.w	r2, [r2, #16]
 8000fba:	4413      	add	r3, r2
 8000fbc:	2b03      	cmp	r3, #3
 8000fbe:	d10b      	bne.n	8000fd8 <checarVitoria+0x234>
		ST7735_DrawLine(48, 8, 111, 69, BLACK);
 8000fc0:	2300      	movs	r3, #0
 8000fc2:	9300      	str	r3, [sp, #0]
 8000fc4:	2345      	movs	r3, #69	; 0x45
 8000fc6:	226f      	movs	r2, #111	; 0x6f
 8000fc8:	2108      	movs	r1, #8
 8000fca:	2030      	movs	r0, #48	; 0x30
 8000fcc:	f7ff fb35 	bl	800063a <ST7735_DrawLine>
		fimRodada(1);
 8000fd0:	2001      	movs	r0, #1
 8000fd2:	f000 f855 	bl	8001080 <fimRodada>
 8000fd6:	e019      	b.n	800100c <checarVitoria+0x268>
	} else if (matriz[0][0] + matriz[1][1] + matriz[2][2] == -3) {
 8000fd8:	4b28      	ldr	r3, [pc, #160]	; (800107c <checarVitoria+0x2d8>)
 8000fda:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000fde:	461a      	mov	r2, r3
 8000fe0:	4b26      	ldr	r3, [pc, #152]	; (800107c <checarVitoria+0x2d8>)
 8000fe2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8000fe6:	4413      	add	r3, r2
 8000fe8:	4a24      	ldr	r2, [pc, #144]	; (800107c <checarVitoria+0x2d8>)
 8000fea:	f9b2 2010 	ldrsh.w	r2, [r2, #16]
 8000fee:	4413      	add	r3, r2
 8000ff0:	f113 0f03 	cmn.w	r3, #3
 8000ff4:	d10a      	bne.n	800100c <checarVitoria+0x268>
		ST7735_DrawLine(48, 8, 111, 69, BLACK);
 8000ff6:	2300      	movs	r3, #0
 8000ff8:	9300      	str	r3, [sp, #0]
 8000ffa:	2345      	movs	r3, #69	; 0x45
 8000ffc:	226f      	movs	r2, #111	; 0x6f
 8000ffe:	2108      	movs	r1, #8
 8001000:	2030      	movs	r0, #48	; 0x30
 8001002:	f7ff fb1a 	bl	800063a <ST7735_DrawLine>
		fimRodada(2);
 8001006:	2002      	movs	r0, #2
 8001008:	f000 f83a 	bl	8001080 <fimRodada>
	}

	if (matriz[0][2] + matriz[1][1] + matriz[2][0] == 3) {
 800100c:	4b1b      	ldr	r3, [pc, #108]	; (800107c <checarVitoria+0x2d8>)
 800100e:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001012:	461a      	mov	r2, r3
 8001014:	4b19      	ldr	r3, [pc, #100]	; (800107c <checarVitoria+0x2d8>)
 8001016:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800101a:	4413      	add	r3, r2
 800101c:	4a17      	ldr	r2, [pc, #92]	; (800107c <checarVitoria+0x2d8>)
 800101e:	f9b2 200c 	ldrsh.w	r2, [r2, #12]
 8001022:	4413      	add	r3, r2
 8001024:	2b03      	cmp	r3, #3
 8001026:	d10b      	bne.n	8001040 <checarVitoria+0x29c>
		ST7735_DrawLine(48, 69, 111, 8, BLACK);
 8001028:	2300      	movs	r3, #0
 800102a:	9300      	str	r3, [sp, #0]
 800102c:	2308      	movs	r3, #8
 800102e:	226f      	movs	r2, #111	; 0x6f
 8001030:	2145      	movs	r1, #69	; 0x45
 8001032:	2030      	movs	r0, #48	; 0x30
 8001034:	f7ff fb01 	bl	800063a <ST7735_DrawLine>
		fimRodada(1);
 8001038:	2001      	movs	r0, #1
 800103a:	f000 f821 	bl	8001080 <fimRodada>
	} else if (matriz[0][2] + matriz[1][1] + matriz[2][0] == -3) {
		ST7735_DrawLine(48, 69, 111, 8, BLACK);
		fimRodada(2);
	}
}
 800103e:	e019      	b.n	8001074 <checarVitoria+0x2d0>
	} else if (matriz[0][2] + matriz[1][1] + matriz[2][0] == -3) {
 8001040:	4b0e      	ldr	r3, [pc, #56]	; (800107c <checarVitoria+0x2d8>)
 8001042:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001046:	461a      	mov	r2, r3
 8001048:	4b0c      	ldr	r3, [pc, #48]	; (800107c <checarVitoria+0x2d8>)
 800104a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800104e:	4413      	add	r3, r2
 8001050:	4a0a      	ldr	r2, [pc, #40]	; (800107c <checarVitoria+0x2d8>)
 8001052:	f9b2 200c 	ldrsh.w	r2, [r2, #12]
 8001056:	4413      	add	r3, r2
 8001058:	f113 0f03 	cmn.w	r3, #3
 800105c:	d10a      	bne.n	8001074 <checarVitoria+0x2d0>
		ST7735_DrawLine(48, 69, 111, 8, BLACK);
 800105e:	2300      	movs	r3, #0
 8001060:	9300      	str	r3, [sp, #0]
 8001062:	2308      	movs	r3, #8
 8001064:	226f      	movs	r2, #111	; 0x6f
 8001066:	2145      	movs	r1, #69	; 0x45
 8001068:	2030      	movs	r0, #48	; 0x30
 800106a:	f7ff fae6 	bl	800063a <ST7735_DrawLine>
		fimRodada(2);
 800106e:	2002      	movs	r0, #2
 8001070:	f000 f806 	bl	8001080 <fimRodada>
}
 8001074:	bf00      	nop
 8001076:	3708      	adds	r7, #8
 8001078:	46bd      	mov	sp, r7
 800107a:	bd80      	pop	{r7, pc}
 800107c:	2000012c 	.word	0x2000012c

08001080 <fimRodada>:
void fimRodada(short result) {
 8001080:	b580      	push	{r7, lr}
 8001082:	b082      	sub	sp, #8
 8001084:	af00      	add	r7, sp, #0
 8001086:	4603      	mov	r3, r0
 8001088:	80fb      	strh	r3, [r7, #6]
	switch (result) {
 800108a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800108e:	2b01      	cmp	r3, #1
 8001090:	d003      	beq.n	800109a <fimRodada+0x1a>
 8001092:	2b02      	cmp	r3, #2
 8001094:	d010      	beq.n	80010b8 <fimRodada+0x38>
 8001096:	2b00      	cmp	r3, #0
	case 0:
		break;
 8001098:	e01d      	b.n	80010d6 <fimRodada+0x56>
	case 1:
		pontosX++;
 800109a:	4b2f      	ldr	r3, [pc, #188]	; (8001158 <fimRodada+0xd8>)
 800109c:	f9b3 3000 	ldrsh.w	r3, [r3]
 80010a0:	b29b      	uxth	r3, r3
 80010a2:	3301      	adds	r3, #1
 80010a4:	b29b      	uxth	r3, r3
 80010a6:	b21a      	sxth	r2, r3
 80010a8:	4b2b      	ldr	r3, [pc, #172]	; (8001158 <fimRodada+0xd8>)
 80010aa:	801a      	strh	r2, [r3, #0]
		jogador = "o";
 80010ac:	4b2b      	ldr	r3, [pc, #172]	; (800115c <fimRodada+0xdc>)
 80010ae:	4a2c      	ldr	r2, [pc, #176]	; (8001160 <fimRodada+0xe0>)
 80010b0:	601a      	str	r2, [r3, #0]
		atualizarPontos();
 80010b2:	f000 f895 	bl	80011e0 <atualizarPontos>
		break;
 80010b6:	e00e      	b.n	80010d6 <fimRodada+0x56>
	case 2:
		pontosO++;
 80010b8:	4b2a      	ldr	r3, [pc, #168]	; (8001164 <fimRodada+0xe4>)
 80010ba:	f9b3 3000 	ldrsh.w	r3, [r3]
 80010be:	b29b      	uxth	r3, r3
 80010c0:	3301      	adds	r3, #1
 80010c2:	b29b      	uxth	r3, r3
 80010c4:	b21a      	sxth	r2, r3
 80010c6:	4b27      	ldr	r3, [pc, #156]	; (8001164 <fimRodada+0xe4>)
 80010c8:	801a      	strh	r2, [r3, #0]
		jogador = "x";
 80010ca:	4b24      	ldr	r3, [pc, #144]	; (800115c <fimRodada+0xdc>)
 80010cc:	4a26      	ldr	r2, [pc, #152]	; (8001168 <fimRodada+0xe8>)
 80010ce:	601a      	str	r2, [r3, #0]
		atualizarPontos();
 80010d0:	f000 f886 	bl	80011e0 <atualizarPontos>
		break;
 80010d4:	bf00      	nop
	}
	HAL_Delay(400);
 80010d6:	f44f 70c8 	mov.w	r0, #400	; 0x190
 80010da:	f000 fb2b 	bl	8001734 <HAL_Delay>
	while (!botCima && !botBaixo && !botEsquerda && !botDireita) {}
 80010de:	bf00      	nop
 80010e0:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80010e4:	4821      	ldr	r0, [pc, #132]	; (800116c <fimRodada+0xec>)
 80010e6:	f000 fd85 	bl	8001bf4 <HAL_GPIO_ReadPin>
 80010ea:	4603      	mov	r3, r0
 80010ec:	2b00      	cmp	r3, #0
 80010ee:	d017      	beq.n	8001120 <fimRodada+0xa0>
 80010f0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80010f4:	481d      	ldr	r0, [pc, #116]	; (800116c <fimRodada+0xec>)
 80010f6:	f000 fd7d 	bl	8001bf4 <HAL_GPIO_ReadPin>
 80010fa:	4603      	mov	r3, r0
 80010fc:	2b00      	cmp	r3, #0
 80010fe:	d00f      	beq.n	8001120 <fimRodada+0xa0>
 8001100:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001104:	4819      	ldr	r0, [pc, #100]	; (800116c <fimRodada+0xec>)
 8001106:	f000 fd75 	bl	8001bf4 <HAL_GPIO_ReadPin>
 800110a:	4603      	mov	r3, r0
 800110c:	2b00      	cmp	r3, #0
 800110e:	d007      	beq.n	8001120 <fimRodada+0xa0>
 8001110:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8001114:	4815      	ldr	r0, [pc, #84]	; (800116c <fimRodada+0xec>)
 8001116:	f000 fd6d 	bl	8001bf4 <HAL_GPIO_ReadPin>
 800111a:	4603      	mov	r3, r0
 800111c:	2b00      	cmp	r3, #0
 800111e:	d1df      	bne.n	80010e0 <fimRodada+0x60>
	if (pontosX == 2 || pontosO == 2)
 8001120:	4b0d      	ldr	r3, [pc, #52]	; (8001158 <fimRodada+0xd8>)
 8001122:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001126:	2b02      	cmp	r3, #2
 8001128:	d004      	beq.n	8001134 <fimRodada+0xb4>
 800112a:	4b0e      	ldr	r3, [pc, #56]	; (8001164 <fimRodada+0xe4>)
 800112c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001130:	2b02      	cmp	r3, #2
 8001132:	d101      	bne.n	8001138 <fimRodada+0xb8>
		fimDeJogo();
 8001134:	f000 f90e 	bl	8001354 <fimDeJogo>
	zerarMatriz();
 8001138:	f000 f81e 	bl	8001178 <zerarMatriz>
	novaRodada();
 800113c:	f000 f8ba 	bl	80012b4 <novaRodada>
	cursorX = 0;
 8001140:	4b0b      	ldr	r3, [pc, #44]	; (8001170 <fimRodada+0xf0>)
 8001142:	2200      	movs	r2, #0
 8001144:	801a      	strh	r2, [r3, #0]
	cursorY = 1;
 8001146:	4b0b      	ldr	r3, [pc, #44]	; (8001174 <fimRodada+0xf4>)
 8001148:	2201      	movs	r2, #1
 800114a:	801a      	strh	r2, [r3, #0]
	cursorParaDireita();
 800114c:	f7ff fc72 	bl	8000a34 <cursorParaDireita>
}
 8001150:	bf00      	nop
 8001152:	3708      	adds	r7, #8
 8001154:	46bd      	mov	sp, r7
 8001156:	bd80      	pop	{r7, pc}
 8001158:	200000ac 	.word	0x200000ac
 800115c:	2000001c 	.word	0x2000001c
 8001160:	0800319c 	.word	0x0800319c
 8001164:	200000ae 	.word	0x200000ae
 8001168:	08003194 	.word	0x08003194
 800116c:	40010800 	.word	0x40010800
 8001170:	20000018 	.word	0x20000018
 8001174:	2000001a 	.word	0x2000001a

08001178 <zerarMatriz>:
void zerarMatriz() {
 8001178:	b480      	push	{r7}
 800117a:	b083      	sub	sp, #12
 800117c:	af00      	add	r7, sp, #0
	short i = 0;
 800117e:	2300      	movs	r3, #0
 8001180:	80fb      	strh	r3, [r7, #6]
	short j = 0;
 8001182:	2300      	movs	r3, #0
 8001184:	80bb      	strh	r3, [r7, #4]
	for (i=0; i<=2; i++) {
 8001186:	2300      	movs	r3, #0
 8001188:	80fb      	strh	r3, [r7, #6]
 800118a:	e01e      	b.n	80011ca <zerarMatriz+0x52>
		for (j=0; j<=2; j++) {
 800118c:	2300      	movs	r3, #0
 800118e:	80bb      	strh	r3, [r7, #4]
 8001190:	e011      	b.n	80011b6 <zerarMatriz+0x3e>
			matriz[i][j] = 0;
 8001192:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8001196:	f9b7 1004 	ldrsh.w	r1, [r7, #4]
 800119a:	4810      	ldr	r0, [pc, #64]	; (80011dc <zerarMatriz+0x64>)
 800119c:	4613      	mov	r3, r2
 800119e:	005b      	lsls	r3, r3, #1
 80011a0:	4413      	add	r3, r2
 80011a2:	440b      	add	r3, r1
 80011a4:	2200      	movs	r2, #0
 80011a6:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
		for (j=0; j<=2; j++) {
 80011aa:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80011ae:	b29b      	uxth	r3, r3
 80011b0:	3301      	adds	r3, #1
 80011b2:	b29b      	uxth	r3, r3
 80011b4:	80bb      	strh	r3, [r7, #4]
 80011b6:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80011ba:	2b02      	cmp	r3, #2
 80011bc:	dde9      	ble.n	8001192 <zerarMatriz+0x1a>
	for (i=0; i<=2; i++) {
 80011be:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80011c2:	b29b      	uxth	r3, r3
 80011c4:	3301      	adds	r3, #1
 80011c6:	b29b      	uxth	r3, r3
 80011c8:	80fb      	strh	r3, [r7, #6]
 80011ca:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80011ce:	2b02      	cmp	r3, #2
 80011d0:	dddc      	ble.n	800118c <zerarMatriz+0x14>
		}
	}
}
 80011d2:	bf00      	nop
 80011d4:	370c      	adds	r7, #12
 80011d6:	46bd      	mov	sp, r7
 80011d8:	bc80      	pop	{r7}
 80011da:	4770      	bx	lr
 80011dc:	2000012c 	.word	0x2000012c

080011e0 <atualizarPontos>:
void atualizarPontos() {
 80011e0:	b580      	push	{r7, lr}
 80011e2:	b084      	sub	sp, #16
 80011e4:	af04      	add	r7, sp, #16
	if (pontosX > 0)
 80011e6:	4b2b      	ldr	r3, [pc, #172]	; (8001294 <atualizarPontos+0xb4>)
 80011e8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80011ec:	2b00      	cmp	r3, #0
 80011ee:	dd04      	ble.n	80011fa <atualizarPontos+0x1a>
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, 1);
 80011f0:	2201      	movs	r2, #1
 80011f2:	2140      	movs	r1, #64	; 0x40
 80011f4:	4828      	ldr	r0, [pc, #160]	; (8001298 <atualizarPontos+0xb8>)
 80011f6:	f000 fd14 	bl	8001c22 <HAL_GPIO_WritePin>
	if (pontosX > 1)
 80011fa:	4b26      	ldr	r3, [pc, #152]	; (8001294 <atualizarPontos+0xb4>)
 80011fc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001200:	2b01      	cmp	r3, #1
 8001202:	dd04      	ble.n	800120e <atualizarPontos+0x2e>
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, 1);
 8001204:	2201      	movs	r2, #1
 8001206:	2120      	movs	r1, #32
 8001208:	4823      	ldr	r0, [pc, #140]	; (8001298 <atualizarPontos+0xb8>)
 800120a:	f000 fd0a 	bl	8001c22 <HAL_GPIO_WritePin>
	if (pontosO > 0)
 800120e:	4b23      	ldr	r3, [pc, #140]	; (800129c <atualizarPontos+0xbc>)
 8001210:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001214:	2b00      	cmp	r3, #0
 8001216:	dd04      	ble.n	8001222 <atualizarPontos+0x42>
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, 1);
 8001218:	2201      	movs	r2, #1
 800121a:	2108      	movs	r1, #8
 800121c:	481e      	ldr	r0, [pc, #120]	; (8001298 <atualizarPontos+0xb8>)
 800121e:	f000 fd00 	bl	8001c22 <HAL_GPIO_WritePin>
	if (pontosO > 1)
 8001222:	4b1e      	ldr	r3, [pc, #120]	; (800129c <atualizarPontos+0xbc>)
 8001224:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001228:	2b01      	cmp	r3, #1
 800122a:	dd04      	ble.n	8001236 <atualizarPontos+0x56>
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, 1);
 800122c:	2201      	movs	r2, #1
 800122e:	2110      	movs	r1, #16
 8001230:	4819      	ldr	r0, [pc, #100]	; (8001298 <atualizarPontos+0xb8>)
 8001232:	f000 fcf6 	bl	8001c22 <HAL_GPIO_WritePin>
	sprintf(buffer, "O:%d", pontosO);
 8001236:	4b19      	ldr	r3, [pc, #100]	; (800129c <atualizarPontos+0xbc>)
 8001238:	f9b3 3000 	ldrsh.w	r3, [r3]
 800123c:	461a      	mov	r2, r3
 800123e:	4918      	ldr	r1, [pc, #96]	; (80012a0 <atualizarPontos+0xc0>)
 8001240:	4818      	ldr	r0, [pc, #96]	; (80012a4 <atualizarPontos+0xc4>)
 8001242:	f001 fc3f 	bl	8002ac4 <siprintf>
	sprintf(buffer2, "X:%d", pontosX);
 8001246:	4b13      	ldr	r3, [pc, #76]	; (8001294 <atualizarPontos+0xb4>)
 8001248:	f9b3 3000 	ldrsh.w	r3, [r3]
 800124c:	461a      	mov	r2, r3
 800124e:	4916      	ldr	r1, [pc, #88]	; (80012a8 <atualizarPontos+0xc8>)
 8001250:	4816      	ldr	r0, [pc, #88]	; (80012ac <atualizarPontos+0xcc>)
 8001252:	f001 fc37 	bl	8002ac4 <siprintf>
	ST7735_WriteString(159 - 7 * 3, 79 - 10 * 1, buffer , Font_7x10, BLACK, WHITE);
 8001256:	4b16      	ldr	r3, [pc, #88]	; (80012b0 <atualizarPontos+0xd0>)
 8001258:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800125c:	9202      	str	r2, [sp, #8]
 800125e:	2200      	movs	r2, #0
 8001260:	9201      	str	r2, [sp, #4]
 8001262:	685a      	ldr	r2, [r3, #4]
 8001264:	9200      	str	r2, [sp, #0]
 8001266:	681b      	ldr	r3, [r3, #0]
 8001268:	4a0e      	ldr	r2, [pc, #56]	; (80012a4 <atualizarPontos+0xc4>)
 800126a:	2145      	movs	r1, #69	; 0x45
 800126c:	208a      	movs	r0, #138	; 0x8a
 800126e:	f7ff f915 	bl	800049c <ST7735_WriteString>
	ST7735_WriteString(159 - 7 * 3, 79 - 10 * 2, buffer2 , Font_7x10, BLACK, WHITE);
 8001272:	4b0f      	ldr	r3, [pc, #60]	; (80012b0 <atualizarPontos+0xd0>)
 8001274:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001278:	9202      	str	r2, [sp, #8]
 800127a:	2200      	movs	r2, #0
 800127c:	9201      	str	r2, [sp, #4]
 800127e:	685a      	ldr	r2, [r3, #4]
 8001280:	9200      	str	r2, [sp, #0]
 8001282:	681b      	ldr	r3, [r3, #0]
 8001284:	4a09      	ldr	r2, [pc, #36]	; (80012ac <atualizarPontos+0xcc>)
 8001286:	213b      	movs	r1, #59	; 0x3b
 8001288:	208a      	movs	r0, #138	; 0x8a
 800128a:	f7ff f907 	bl	800049c <ST7735_WriteString>
}
 800128e:	bf00      	nop
 8001290:	46bd      	mov	sp, r7
 8001292:	bd80      	pop	{r7, pc}
 8001294:	200000ac 	.word	0x200000ac
 8001298:	40010c00 	.word	0x40010c00
 800129c:	200000ae 	.word	0x200000ae
 80012a0:	080031a8 	.word	0x080031a8
 80012a4:	200000c8 	.word	0x200000c8
 80012a8:	080031b0 	.word	0x080031b0
 80012ac:	200000bc 	.word	0x200000bc
 80012b0:	20000000 	.word	0x20000000

080012b4 <novaRodada>:
void novaRodada() {
 80012b4:	b580      	push	{r7, lr}
 80012b6:	b084      	sub	sp, #16
 80012b8:	af04      	add	r7, sp, #16
	ST7735_FillScreen(WHITE);
 80012ba:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80012be:	f7ff f9ab 	bl	8000618 <ST7735_FillScreen>
	ST7735_DrawLine(50, 29, 110, 29, BLACK);
 80012c2:	2300      	movs	r3, #0
 80012c4:	9300      	str	r3, [sp, #0]
 80012c6:	231d      	movs	r3, #29
 80012c8:	226e      	movs	r2, #110	; 0x6e
 80012ca:	211d      	movs	r1, #29
 80012cc:	2032      	movs	r0, #50	; 0x32
 80012ce:	f7ff f9b4 	bl	800063a <ST7735_DrawLine>
	ST7735_DrawLine(50, 49, 110, 49, BLACK);
 80012d2:	2300      	movs	r3, #0
 80012d4:	9300      	str	r3, [sp, #0]
 80012d6:	2331      	movs	r3, #49	; 0x31
 80012d8:	226e      	movs	r2, #110	; 0x6e
 80012da:	2131      	movs	r1, #49	; 0x31
 80012dc:	2032      	movs	r0, #50	; 0x32
 80012de:	f7ff f9ac 	bl	800063a <ST7735_DrawLine>
	ST7735_DrawLine(70, 9, 70, 69, BLACK);
 80012e2:	2300      	movs	r3, #0
 80012e4:	9300      	str	r3, [sp, #0]
 80012e6:	2345      	movs	r3, #69	; 0x45
 80012e8:	2246      	movs	r2, #70	; 0x46
 80012ea:	2109      	movs	r1, #9
 80012ec:	2046      	movs	r0, #70	; 0x46
 80012ee:	f7ff f9a4 	bl	800063a <ST7735_DrawLine>
	ST7735_DrawLine(90, 9, 90, 69, BLACK);
 80012f2:	2300      	movs	r3, #0
 80012f4:	9300      	str	r3, [sp, #0]
 80012f6:	2345      	movs	r3, #69	; 0x45
 80012f8:	225a      	movs	r2, #90	; 0x5a
 80012fa:	2109      	movs	r1, #9
 80012fc:	205a      	movs	r0, #90	; 0x5a
 80012fe:	f7ff f99c 	bl	800063a <ST7735_DrawLine>

	atualizarPontos();
 8001302:	f7ff ff6d 	bl	80011e0 <atualizarPontos>
	ST7735_WriteString(0, 0, jogador , Font_11x18, BLACK, WHITE);
 8001306:	4b10      	ldr	r3, [pc, #64]	; (8001348 <novaRodada+0x94>)
 8001308:	6819      	ldr	r1, [r3, #0]
 800130a:	4b10      	ldr	r3, [pc, #64]	; (800134c <novaRodada+0x98>)
 800130c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001310:	9202      	str	r2, [sp, #8]
 8001312:	2200      	movs	r2, #0
 8001314:	9201      	str	r2, [sp, #4]
 8001316:	685a      	ldr	r2, [r3, #4]
 8001318:	9200      	str	r2, [sp, #0]
 800131a:	681b      	ldr	r3, [r3, #0]
 800131c:	460a      	mov	r2, r1
 800131e:	2100      	movs	r1, #0
 8001320:	2000      	movs	r0, #0
 8001322:	f7ff f8bb 	bl	800049c <ST7735_WriteString>
	ST7735_WriteString(11, 0, ":" , Font_11x18, BLACK, WHITE);
 8001326:	4b09      	ldr	r3, [pc, #36]	; (800134c <novaRodada+0x98>)
 8001328:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800132c:	9202      	str	r2, [sp, #8]
 800132e:	2200      	movs	r2, #0
 8001330:	9201      	str	r2, [sp, #4]
 8001332:	685a      	ldr	r2, [r3, #4]
 8001334:	9200      	str	r2, [sp, #0]
 8001336:	681b      	ldr	r3, [r3, #0]
 8001338:	4a05      	ldr	r2, [pc, #20]	; (8001350 <novaRodada+0x9c>)
 800133a:	2100      	movs	r1, #0
 800133c:	200b      	movs	r0, #11
 800133e:	f7ff f8ad 	bl	800049c <ST7735_WriteString>
}
 8001342:	bf00      	nop
 8001344:	46bd      	mov	sp, r7
 8001346:	bd80      	pop	{r7, pc}
 8001348:	2000001c 	.word	0x2000001c
 800134c:	20000008 	.word	0x20000008
 8001350:	080031b8 	.word	0x080031b8

08001354 <fimDeJogo>:
void fimDeJogo() {
 8001354:	b580      	push	{r7, lr}
 8001356:	b084      	sub	sp, #16
 8001358:	af04      	add	r7, sp, #16
	ST7735_FillScreen(WHITE);
 800135a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800135e:	f7ff f95b 	bl	8000618 <ST7735_FillScreen>
	ST7735_WriteString(34, 24, "Vencedor:" , Font_11x18, BLACK, WHITE);
 8001362:	4b3a      	ldr	r3, [pc, #232]	; (800144c <fimDeJogo+0xf8>)
 8001364:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001368:	9202      	str	r2, [sp, #8]
 800136a:	2200      	movs	r2, #0
 800136c:	9201      	str	r2, [sp, #4]
 800136e:	685a      	ldr	r2, [r3, #4]
 8001370:	9200      	str	r2, [sp, #0]
 8001372:	681b      	ldr	r3, [r3, #0]
 8001374:	4a36      	ldr	r2, [pc, #216]	; (8001450 <fimDeJogo+0xfc>)
 8001376:	2118      	movs	r1, #24
 8001378:	2022      	movs	r0, #34	; 0x22
 800137a:	f7ff f88f 	bl	800049c <ST7735_WriteString>
	if (pontosX == 2) {
 800137e:	4b35      	ldr	r3, [pc, #212]	; (8001454 <fimDeJogo+0x100>)
 8001380:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001384:	2b02      	cmp	r3, #2
 8001386:	d10e      	bne.n	80013a6 <fimDeJogo+0x52>
	    ST7735_WriteString(73, 43, "x" , Font_16x26, BLACK, WHITE);
 8001388:	4b33      	ldr	r3, [pc, #204]	; (8001458 <fimDeJogo+0x104>)
 800138a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800138e:	9202      	str	r2, [sp, #8]
 8001390:	2200      	movs	r2, #0
 8001392:	9201      	str	r2, [sp, #4]
 8001394:	685a      	ldr	r2, [r3, #4]
 8001396:	9200      	str	r2, [sp, #0]
 8001398:	681b      	ldr	r3, [r3, #0]
 800139a:	4a30      	ldr	r2, [pc, #192]	; (800145c <fimDeJogo+0x108>)
 800139c:	212b      	movs	r1, #43	; 0x2b
 800139e:	2049      	movs	r0, #73	; 0x49
 80013a0:	f7ff f87c 	bl	800049c <ST7735_WriteString>
 80013a4:	e00d      	b.n	80013c2 <fimDeJogo+0x6e>
	} else {
		ST7735_WriteString(73, 43, "o" , Font_16x26, BLACK, WHITE);
 80013a6:	4b2c      	ldr	r3, [pc, #176]	; (8001458 <fimDeJogo+0x104>)
 80013a8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80013ac:	9202      	str	r2, [sp, #8]
 80013ae:	2200      	movs	r2, #0
 80013b0:	9201      	str	r2, [sp, #4]
 80013b2:	685a      	ldr	r2, [r3, #4]
 80013b4:	9200      	str	r2, [sp, #0]
 80013b6:	681b      	ldr	r3, [r3, #0]
 80013b8:	4a29      	ldr	r2, [pc, #164]	; (8001460 <fimDeJogo+0x10c>)
 80013ba:	212b      	movs	r1, #43	; 0x2b
 80013bc:	2049      	movs	r0, #73	; 0x49
 80013be:	f7ff f86d 	bl	800049c <ST7735_WriteString>
	}
	while (!botCima && !botBaixo && !botEsquerda && !botDireita) {}
 80013c2:	bf00      	nop
 80013c4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80013c8:	4826      	ldr	r0, [pc, #152]	; (8001464 <fimDeJogo+0x110>)
 80013ca:	f000 fc13 	bl	8001bf4 <HAL_GPIO_ReadPin>
 80013ce:	4603      	mov	r3, r0
 80013d0:	2b00      	cmp	r3, #0
 80013d2:	d017      	beq.n	8001404 <fimDeJogo+0xb0>
 80013d4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80013d8:	4822      	ldr	r0, [pc, #136]	; (8001464 <fimDeJogo+0x110>)
 80013da:	f000 fc0b 	bl	8001bf4 <HAL_GPIO_ReadPin>
 80013de:	4603      	mov	r3, r0
 80013e0:	2b00      	cmp	r3, #0
 80013e2:	d00f      	beq.n	8001404 <fimDeJogo+0xb0>
 80013e4:	f44f 7100 	mov.w	r1, #512	; 0x200
 80013e8:	481e      	ldr	r0, [pc, #120]	; (8001464 <fimDeJogo+0x110>)
 80013ea:	f000 fc03 	bl	8001bf4 <HAL_GPIO_ReadPin>
 80013ee:	4603      	mov	r3, r0
 80013f0:	2b00      	cmp	r3, #0
 80013f2:	d007      	beq.n	8001404 <fimDeJogo+0xb0>
 80013f4:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80013f8:	481a      	ldr	r0, [pc, #104]	; (8001464 <fimDeJogo+0x110>)
 80013fa:	f000 fbfb 	bl	8001bf4 <HAL_GPIO_ReadPin>
 80013fe:	4603      	mov	r3, r0
 8001400:	2b00      	cmp	r3, #0
 8001402:	d1df      	bne.n	80013c4 <fimDeJogo+0x70>
	pontosX = 0;
 8001404:	4b13      	ldr	r3, [pc, #76]	; (8001454 <fimDeJogo+0x100>)
 8001406:	2200      	movs	r2, #0
 8001408:	801a      	strh	r2, [r3, #0]
	pontosO = 0;
 800140a:	4b17      	ldr	r3, [pc, #92]	; (8001468 <fimDeJogo+0x114>)
 800140c:	2200      	movs	r2, #0
 800140e:	801a      	strh	r2, [r3, #0]
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, 0);
 8001410:	2200      	movs	r2, #0
 8001412:	2110      	movs	r1, #16
 8001414:	4815      	ldr	r0, [pc, #84]	; (800146c <fimDeJogo+0x118>)
 8001416:	f000 fc04 	bl	8001c22 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, 0);
 800141a:	2200      	movs	r2, #0
 800141c:	2120      	movs	r1, #32
 800141e:	4813      	ldr	r0, [pc, #76]	; (800146c <fimDeJogo+0x118>)
 8001420:	f000 fbff 	bl	8001c22 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, 0);
 8001424:	2200      	movs	r2, #0
 8001426:	2140      	movs	r1, #64	; 0x40
 8001428:	4810      	ldr	r0, [pc, #64]	; (800146c <fimDeJogo+0x118>)
 800142a:	f000 fbfa 	bl	8001c22 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, 0);
 800142e:	2200      	movs	r2, #0
 8001430:	2108      	movs	r1, #8
 8001432:	480e      	ldr	r0, [pc, #56]	; (800146c <fimDeJogo+0x118>)
 8001434:	f000 fbf5 	bl	8001c22 <HAL_GPIO_WritePin>
	jogador = "x";
 8001438:	4b0d      	ldr	r3, [pc, #52]	; (8001470 <fimDeJogo+0x11c>)
 800143a:	4a08      	ldr	r2, [pc, #32]	; (800145c <fimDeJogo+0x108>)
 800143c:	601a      	str	r2, [r3, #0]
	fimRodada(0);
 800143e:	2000      	movs	r0, #0
 8001440:	f7ff fe1e 	bl	8001080 <fimRodada>
}
 8001444:	bf00      	nop
 8001446:	46bd      	mov	sp, r7
 8001448:	bd80      	pop	{r7, pc}
 800144a:	bf00      	nop
 800144c:	20000008 	.word	0x20000008
 8001450:	080031bc 	.word	0x080031bc
 8001454:	200000ac 	.word	0x200000ac
 8001458:	20000010 	.word	0x20000010
 800145c:	08003194 	.word	0x08003194
 8001460:	0800319c 	.word	0x0800319c
 8001464:	40010800 	.word	0x40010800
 8001468:	200000ae 	.word	0x200000ae
 800146c:	40010c00 	.word	0x40010c00
 8001470:	2000001c 	.word	0x2000001c

08001474 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001474:	b480      	push	{r7}
 8001476:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001478:	b672      	cpsid	i
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800147a:	e7fe      	b.n	800147a <Error_Handler+0x6>

0800147c <HAL_MspInit>:
 800147c:	b480      	push	{r7}
 800147e:	b085      	sub	sp, #20
 8001480:	af00      	add	r7, sp, #0
 8001482:	4b15      	ldr	r3, [pc, #84]	; (80014d8 <HAL_MspInit+0x5c>)
 8001484:	699b      	ldr	r3, [r3, #24]
 8001486:	4a14      	ldr	r2, [pc, #80]	; (80014d8 <HAL_MspInit+0x5c>)
 8001488:	f043 0301 	orr.w	r3, r3, #1
 800148c:	6193      	str	r3, [r2, #24]
 800148e:	4b12      	ldr	r3, [pc, #72]	; (80014d8 <HAL_MspInit+0x5c>)
 8001490:	699b      	ldr	r3, [r3, #24]
 8001492:	f003 0301 	and.w	r3, r3, #1
 8001496:	60bb      	str	r3, [r7, #8]
 8001498:	68bb      	ldr	r3, [r7, #8]
 800149a:	4b0f      	ldr	r3, [pc, #60]	; (80014d8 <HAL_MspInit+0x5c>)
 800149c:	69db      	ldr	r3, [r3, #28]
 800149e:	4a0e      	ldr	r2, [pc, #56]	; (80014d8 <HAL_MspInit+0x5c>)
 80014a0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80014a4:	61d3      	str	r3, [r2, #28]
 80014a6:	4b0c      	ldr	r3, [pc, #48]	; (80014d8 <HAL_MspInit+0x5c>)
 80014a8:	69db      	ldr	r3, [r3, #28]
 80014aa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80014ae:	607b      	str	r3, [r7, #4]
 80014b0:	687b      	ldr	r3, [r7, #4]
 80014b2:	4b0a      	ldr	r3, [pc, #40]	; (80014dc <HAL_MspInit+0x60>)
 80014b4:	685b      	ldr	r3, [r3, #4]
 80014b6:	60fb      	str	r3, [r7, #12]
 80014b8:	68fb      	ldr	r3, [r7, #12]
 80014ba:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80014be:	60fb      	str	r3, [r7, #12]
 80014c0:	68fb      	ldr	r3, [r7, #12]
 80014c2:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80014c6:	60fb      	str	r3, [r7, #12]
 80014c8:	4a04      	ldr	r2, [pc, #16]	; (80014dc <HAL_MspInit+0x60>)
 80014ca:	68fb      	ldr	r3, [r7, #12]
 80014cc:	6053      	str	r3, [r2, #4]
 80014ce:	bf00      	nop
 80014d0:	3714      	adds	r7, #20
 80014d2:	46bd      	mov	sp, r7
 80014d4:	bc80      	pop	{r7}
 80014d6:	4770      	bx	lr
 80014d8:	40021000 	.word	0x40021000
 80014dc:	40010000 	.word	0x40010000

080014e0 <HAL_SPI_MspInit>:
 80014e0:	b580      	push	{r7, lr}
 80014e2:	b088      	sub	sp, #32
 80014e4:	af00      	add	r7, sp, #0
 80014e6:	6078      	str	r0, [r7, #4]
 80014e8:	f107 0310 	add.w	r3, r7, #16
 80014ec:	2200      	movs	r2, #0
 80014ee:	601a      	str	r2, [r3, #0]
 80014f0:	605a      	str	r2, [r3, #4]
 80014f2:	609a      	str	r2, [r3, #8]
 80014f4:	60da      	str	r2, [r3, #12]
 80014f6:	687b      	ldr	r3, [r7, #4]
 80014f8:	681b      	ldr	r3, [r3, #0]
 80014fa:	4a15      	ldr	r2, [pc, #84]	; (8001550 <HAL_SPI_MspInit+0x70>)
 80014fc:	4293      	cmp	r3, r2
 80014fe:	d123      	bne.n	8001548 <HAL_SPI_MspInit+0x68>
 8001500:	4b14      	ldr	r3, [pc, #80]	; (8001554 <HAL_SPI_MspInit+0x74>)
 8001502:	699b      	ldr	r3, [r3, #24]
 8001504:	4a13      	ldr	r2, [pc, #76]	; (8001554 <HAL_SPI_MspInit+0x74>)
 8001506:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800150a:	6193      	str	r3, [r2, #24]
 800150c:	4b11      	ldr	r3, [pc, #68]	; (8001554 <HAL_SPI_MspInit+0x74>)
 800150e:	699b      	ldr	r3, [r3, #24]
 8001510:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001514:	60fb      	str	r3, [r7, #12]
 8001516:	68fb      	ldr	r3, [r7, #12]
 8001518:	4b0e      	ldr	r3, [pc, #56]	; (8001554 <HAL_SPI_MspInit+0x74>)
 800151a:	699b      	ldr	r3, [r3, #24]
 800151c:	4a0d      	ldr	r2, [pc, #52]	; (8001554 <HAL_SPI_MspInit+0x74>)
 800151e:	f043 0304 	orr.w	r3, r3, #4
 8001522:	6193      	str	r3, [r2, #24]
 8001524:	4b0b      	ldr	r3, [pc, #44]	; (8001554 <HAL_SPI_MspInit+0x74>)
 8001526:	699b      	ldr	r3, [r3, #24]
 8001528:	f003 0304 	and.w	r3, r3, #4
 800152c:	60bb      	str	r3, [r7, #8]
 800152e:	68bb      	ldr	r3, [r7, #8]
 8001530:	23a0      	movs	r3, #160	; 0xa0
 8001532:	613b      	str	r3, [r7, #16]
 8001534:	2302      	movs	r3, #2
 8001536:	617b      	str	r3, [r7, #20]
 8001538:	2303      	movs	r3, #3
 800153a:	61fb      	str	r3, [r7, #28]
 800153c:	f107 0310 	add.w	r3, r7, #16
 8001540:	4619      	mov	r1, r3
 8001542:	4805      	ldr	r0, [pc, #20]	; (8001558 <HAL_SPI_MspInit+0x78>)
 8001544:	f000 f9fc 	bl	8001940 <HAL_GPIO_Init>
 8001548:	bf00      	nop
 800154a:	3720      	adds	r7, #32
 800154c:	46bd      	mov	sp, r7
 800154e:	bd80      	pop	{r7, pc}
 8001550:	40013000 	.word	0x40013000
 8001554:	40021000 	.word	0x40021000
 8001558:	40010800 	.word	0x40010800

0800155c <NMI_Handler>:
 800155c:	b480      	push	{r7}
 800155e:	af00      	add	r7, sp, #0
 8001560:	e7fe      	b.n	8001560 <NMI_Handler+0x4>

08001562 <HardFault_Handler>:
 8001562:	b480      	push	{r7}
 8001564:	af00      	add	r7, sp, #0
 8001566:	e7fe      	b.n	8001566 <HardFault_Handler+0x4>

08001568 <MemManage_Handler>:
 8001568:	b480      	push	{r7}
 800156a:	af00      	add	r7, sp, #0
 800156c:	e7fe      	b.n	800156c <MemManage_Handler+0x4>

0800156e <BusFault_Handler>:
 800156e:	b480      	push	{r7}
 8001570:	af00      	add	r7, sp, #0
 8001572:	e7fe      	b.n	8001572 <BusFault_Handler+0x4>

08001574 <UsageFault_Handler>:
 8001574:	b480      	push	{r7}
 8001576:	af00      	add	r7, sp, #0
 8001578:	e7fe      	b.n	8001578 <UsageFault_Handler+0x4>

0800157a <SVC_Handler>:
 800157a:	b480      	push	{r7}
 800157c:	af00      	add	r7, sp, #0
 800157e:	bf00      	nop
 8001580:	46bd      	mov	sp, r7
 8001582:	bc80      	pop	{r7}
 8001584:	4770      	bx	lr

08001586 <DebugMon_Handler>:
 8001586:	b480      	push	{r7}
 8001588:	af00      	add	r7, sp, #0
 800158a:	bf00      	nop
 800158c:	46bd      	mov	sp, r7
 800158e:	bc80      	pop	{r7}
 8001590:	4770      	bx	lr

08001592 <PendSV_Handler>:
 8001592:	b480      	push	{r7}
 8001594:	af00      	add	r7, sp, #0
 8001596:	bf00      	nop
 8001598:	46bd      	mov	sp, r7
 800159a:	bc80      	pop	{r7}
 800159c:	4770      	bx	lr

0800159e <SysTick_Handler>:
 800159e:	b580      	push	{r7, lr}
 80015a0:	af00      	add	r7, sp, #0
 80015a2:	f000 f8ab 	bl	80016fc <HAL_IncTick>
 80015a6:	bf00      	nop
 80015a8:	bd80      	pop	{r7, pc}
	...

080015ac <_sbrk>:
 80015ac:	b580      	push	{r7, lr}
 80015ae:	b086      	sub	sp, #24
 80015b0:	af00      	add	r7, sp, #0
 80015b2:	6078      	str	r0, [r7, #4]
 80015b4:	4a14      	ldr	r2, [pc, #80]	; (8001608 <_sbrk+0x5c>)
 80015b6:	4b15      	ldr	r3, [pc, #84]	; (800160c <_sbrk+0x60>)
 80015b8:	1ad3      	subs	r3, r2, r3
 80015ba:	617b      	str	r3, [r7, #20]
 80015bc:	697b      	ldr	r3, [r7, #20]
 80015be:	613b      	str	r3, [r7, #16]
 80015c0:	4b13      	ldr	r3, [pc, #76]	; (8001610 <_sbrk+0x64>)
 80015c2:	681b      	ldr	r3, [r3, #0]
 80015c4:	2b00      	cmp	r3, #0
 80015c6:	d102      	bne.n	80015ce <_sbrk+0x22>
 80015c8:	4b11      	ldr	r3, [pc, #68]	; (8001610 <_sbrk+0x64>)
 80015ca:	4a12      	ldr	r2, [pc, #72]	; (8001614 <_sbrk+0x68>)
 80015cc:	601a      	str	r2, [r3, #0]
 80015ce:	4b10      	ldr	r3, [pc, #64]	; (8001610 <_sbrk+0x64>)
 80015d0:	681a      	ldr	r2, [r3, #0]
 80015d2:	687b      	ldr	r3, [r7, #4]
 80015d4:	4413      	add	r3, r2
 80015d6:	693a      	ldr	r2, [r7, #16]
 80015d8:	429a      	cmp	r2, r3
 80015da:	d207      	bcs.n	80015ec <_sbrk+0x40>
 80015dc:	f001 f98a 	bl	80028f4 <__errno>
 80015e0:	4602      	mov	r2, r0
 80015e2:	230c      	movs	r3, #12
 80015e4:	6013      	str	r3, [r2, #0]
 80015e6:	f04f 33ff 	mov.w	r3, #4294967295
 80015ea:	e009      	b.n	8001600 <_sbrk+0x54>
 80015ec:	4b08      	ldr	r3, [pc, #32]	; (8001610 <_sbrk+0x64>)
 80015ee:	681b      	ldr	r3, [r3, #0]
 80015f0:	60fb      	str	r3, [r7, #12]
 80015f2:	4b07      	ldr	r3, [pc, #28]	; (8001610 <_sbrk+0x64>)
 80015f4:	681a      	ldr	r2, [r3, #0]
 80015f6:	687b      	ldr	r3, [r7, #4]
 80015f8:	4413      	add	r3, r2
 80015fa:	4a05      	ldr	r2, [pc, #20]	; (8001610 <_sbrk+0x64>)
 80015fc:	6013      	str	r3, [r2, #0]
 80015fe:	68fb      	ldr	r3, [r7, #12]
 8001600:	4618      	mov	r0, r3
 8001602:	3718      	adds	r7, #24
 8001604:	46bd      	mov	sp, r7
 8001606:	bd80      	pop	{r7, pc}
 8001608:	20005000 	.word	0x20005000
 800160c:	00000400 	.word	0x00000400
 8001610:	200000b0 	.word	0x200000b0
 8001614:	20000148 	.word	0x20000148

08001618 <SystemInit>:
 8001618:	b480      	push	{r7}
 800161a:	af00      	add	r7, sp, #0
 800161c:	bf00      	nop
 800161e:	46bd      	mov	sp, r7
 8001620:	bc80      	pop	{r7}
 8001622:	4770      	bx	lr

08001624 <Reset_Handler>:
 8001624:	480c      	ldr	r0, [pc, #48]	; (8001658 <LoopFillZerobss+0x12>)
 8001626:	490d      	ldr	r1, [pc, #52]	; (800165c <LoopFillZerobss+0x16>)
 8001628:	4a0d      	ldr	r2, [pc, #52]	; (8001660 <LoopFillZerobss+0x1a>)
 800162a:	2300      	movs	r3, #0
 800162c:	e002      	b.n	8001634 <LoopCopyDataInit>

0800162e <CopyDataInit>:
 800162e:	58d4      	ldr	r4, [r2, r3]
 8001630:	50c4      	str	r4, [r0, r3]
 8001632:	3304      	adds	r3, #4

08001634 <LoopCopyDataInit>:
 8001634:	18c4      	adds	r4, r0, r3
 8001636:	428c      	cmp	r4, r1
 8001638:	d3f9      	bcc.n	800162e <CopyDataInit>
 800163a:	4a0a      	ldr	r2, [pc, #40]	; (8001664 <LoopFillZerobss+0x1e>)
 800163c:	4c0a      	ldr	r4, [pc, #40]	; (8001668 <LoopFillZerobss+0x22>)
 800163e:	2300      	movs	r3, #0
 8001640:	e001      	b.n	8001646 <LoopFillZerobss>

08001642 <FillZerobss>:
 8001642:	6013      	str	r3, [r2, #0]
 8001644:	3204      	adds	r2, #4

08001646 <LoopFillZerobss>:
 8001646:	42a2      	cmp	r2, r4
 8001648:	d3fb      	bcc.n	8001642 <FillZerobss>
 800164a:	f7ff ffe5 	bl	8001618 <SystemInit>
 800164e:	f001 f957 	bl	8002900 <__libc_init_array>
 8001652:	f7ff f87d 	bl	8000750 <main>
 8001656:	4770      	bx	lr
 8001658:	20000000 	.word	0x20000000
 800165c:	20000090 	.word	0x20000090
 8001660:	08005ab4 	.word	0x08005ab4
 8001664:	20000090 	.word	0x20000090
 8001668:	20000148 	.word	0x20000148

0800166c <ADC1_2_IRQHandler>:
 800166c:	e7fe      	b.n	800166c <ADC1_2_IRQHandler>
	...

08001670 <HAL_Init>:
 8001670:	b580      	push	{r7, lr}
 8001672:	af00      	add	r7, sp, #0
 8001674:	4b08      	ldr	r3, [pc, #32]	; (8001698 <HAL_Init+0x28>)
 8001676:	681b      	ldr	r3, [r3, #0]
 8001678:	4a07      	ldr	r2, [pc, #28]	; (8001698 <HAL_Init+0x28>)
 800167a:	f043 0310 	orr.w	r3, r3, #16
 800167e:	6013      	str	r3, [r2, #0]
 8001680:	2003      	movs	r0, #3
 8001682:	f000 f929 	bl	80018d8 <HAL_NVIC_SetPriorityGrouping>
 8001686:	2000      	movs	r0, #0
 8001688:	f000 f808 	bl	800169c <HAL_InitTick>
 800168c:	f7ff fef6 	bl	800147c <HAL_MspInit>
 8001690:	2300      	movs	r3, #0
 8001692:	4618      	mov	r0, r3
 8001694:	bd80      	pop	{r7, pc}
 8001696:	bf00      	nop
 8001698:	40022000 	.word	0x40022000

0800169c <HAL_InitTick>:
 800169c:	b580      	push	{r7, lr}
 800169e:	b082      	sub	sp, #8
 80016a0:	af00      	add	r7, sp, #0
 80016a2:	6078      	str	r0, [r7, #4]
 80016a4:	4b12      	ldr	r3, [pc, #72]	; (80016f0 <HAL_InitTick+0x54>)
 80016a6:	681a      	ldr	r2, [r3, #0]
 80016a8:	4b12      	ldr	r3, [pc, #72]	; (80016f4 <HAL_InitTick+0x58>)
 80016aa:	781b      	ldrb	r3, [r3, #0]
 80016ac:	4619      	mov	r1, r3
 80016ae:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80016b2:	fbb3 f3f1 	udiv	r3, r3, r1
 80016b6:	fbb2 f3f3 	udiv	r3, r2, r3
 80016ba:	4618      	mov	r0, r3
 80016bc:	f000 f933 	bl	8001926 <HAL_SYSTICK_Config>
 80016c0:	4603      	mov	r3, r0
 80016c2:	2b00      	cmp	r3, #0
 80016c4:	d001      	beq.n	80016ca <HAL_InitTick+0x2e>
 80016c6:	2301      	movs	r3, #1
 80016c8:	e00e      	b.n	80016e8 <HAL_InitTick+0x4c>
 80016ca:	687b      	ldr	r3, [r7, #4]
 80016cc:	2b0f      	cmp	r3, #15
 80016ce:	d80a      	bhi.n	80016e6 <HAL_InitTick+0x4a>
 80016d0:	2200      	movs	r2, #0
 80016d2:	6879      	ldr	r1, [r7, #4]
 80016d4:	f04f 30ff 	mov.w	r0, #4294967295
 80016d8:	f000 f909 	bl	80018ee <HAL_NVIC_SetPriority>
 80016dc:	4a06      	ldr	r2, [pc, #24]	; (80016f8 <HAL_InitTick+0x5c>)
 80016de:	687b      	ldr	r3, [r7, #4]
 80016e0:	6013      	str	r3, [r2, #0]
 80016e2:	2300      	movs	r3, #0
 80016e4:	e000      	b.n	80016e8 <HAL_InitTick+0x4c>
 80016e6:	2301      	movs	r3, #1
 80016e8:	4618      	mov	r0, r3
 80016ea:	3708      	adds	r7, #8
 80016ec:	46bd      	mov	sp, r7
 80016ee:	bd80      	pop	{r7, pc}
 80016f0:	20000020 	.word	0x20000020
 80016f4:	20000028 	.word	0x20000028
 80016f8:	20000024 	.word	0x20000024

080016fc <HAL_IncTick>:
 80016fc:	b480      	push	{r7}
 80016fe:	af00      	add	r7, sp, #0
 8001700:	4b05      	ldr	r3, [pc, #20]	; (8001718 <HAL_IncTick+0x1c>)
 8001702:	781b      	ldrb	r3, [r3, #0]
 8001704:	461a      	mov	r2, r3
 8001706:	4b05      	ldr	r3, [pc, #20]	; (800171c <HAL_IncTick+0x20>)
 8001708:	681b      	ldr	r3, [r3, #0]
 800170a:	4413      	add	r3, r2
 800170c:	4a03      	ldr	r2, [pc, #12]	; (800171c <HAL_IncTick+0x20>)
 800170e:	6013      	str	r3, [r2, #0]
 8001710:	bf00      	nop
 8001712:	46bd      	mov	sp, r7
 8001714:	bc80      	pop	{r7}
 8001716:	4770      	bx	lr
 8001718:	20000028 	.word	0x20000028
 800171c:	20000140 	.word	0x20000140

08001720 <HAL_GetTick>:
 8001720:	b480      	push	{r7}
 8001722:	af00      	add	r7, sp, #0
 8001724:	4b02      	ldr	r3, [pc, #8]	; (8001730 <HAL_GetTick+0x10>)
 8001726:	681b      	ldr	r3, [r3, #0]
 8001728:	4618      	mov	r0, r3
 800172a:	46bd      	mov	sp, r7
 800172c:	bc80      	pop	{r7}
 800172e:	4770      	bx	lr
 8001730:	20000140 	.word	0x20000140

08001734 <HAL_Delay>:
 8001734:	b580      	push	{r7, lr}
 8001736:	b084      	sub	sp, #16
 8001738:	af00      	add	r7, sp, #0
 800173a:	6078      	str	r0, [r7, #4]
 800173c:	f7ff fff0 	bl	8001720 <HAL_GetTick>
 8001740:	60b8      	str	r0, [r7, #8]
 8001742:	687b      	ldr	r3, [r7, #4]
 8001744:	60fb      	str	r3, [r7, #12]
 8001746:	68fb      	ldr	r3, [r7, #12]
 8001748:	f1b3 3fff 	cmp.w	r3, #4294967295
 800174c:	d005      	beq.n	800175a <HAL_Delay+0x26>
 800174e:	4b09      	ldr	r3, [pc, #36]	; (8001774 <HAL_Delay+0x40>)
 8001750:	781b      	ldrb	r3, [r3, #0]
 8001752:	461a      	mov	r2, r3
 8001754:	68fb      	ldr	r3, [r7, #12]
 8001756:	4413      	add	r3, r2
 8001758:	60fb      	str	r3, [r7, #12]
 800175a:	bf00      	nop
 800175c:	f7ff ffe0 	bl	8001720 <HAL_GetTick>
 8001760:	4602      	mov	r2, r0
 8001762:	68bb      	ldr	r3, [r7, #8]
 8001764:	1ad3      	subs	r3, r2, r3
 8001766:	68fa      	ldr	r2, [r7, #12]
 8001768:	429a      	cmp	r2, r3
 800176a:	d8f7      	bhi.n	800175c <HAL_Delay+0x28>
 800176c:	bf00      	nop
 800176e:	3710      	adds	r7, #16
 8001770:	46bd      	mov	sp, r7
 8001772:	bd80      	pop	{r7, pc}
 8001774:	20000028 	.word	0x20000028

08001778 <__NVIC_SetPriorityGrouping>:
 8001778:	b480      	push	{r7}
 800177a:	b085      	sub	sp, #20
 800177c:	af00      	add	r7, sp, #0
 800177e:	6078      	str	r0, [r7, #4]
 8001780:	687b      	ldr	r3, [r7, #4]
 8001782:	f003 0307 	and.w	r3, r3, #7
 8001786:	60fb      	str	r3, [r7, #12]
 8001788:	4b0c      	ldr	r3, [pc, #48]	; (80017bc <__NVIC_SetPriorityGrouping+0x44>)
 800178a:	68db      	ldr	r3, [r3, #12]
 800178c:	60bb      	str	r3, [r7, #8]
 800178e:	68ba      	ldr	r2, [r7, #8]
 8001790:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001794:	4013      	ands	r3, r2
 8001796:	60bb      	str	r3, [r7, #8]
 8001798:	68fb      	ldr	r3, [r7, #12]
 800179a:	021a      	lsls	r2, r3, #8
 800179c:	68bb      	ldr	r3, [r7, #8]
 800179e:	4313      	orrs	r3, r2
 80017a0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80017a4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80017a8:	60bb      	str	r3, [r7, #8]
 80017aa:	4a04      	ldr	r2, [pc, #16]	; (80017bc <__NVIC_SetPriorityGrouping+0x44>)
 80017ac:	68bb      	ldr	r3, [r7, #8]
 80017ae:	60d3      	str	r3, [r2, #12]
 80017b0:	bf00      	nop
 80017b2:	3714      	adds	r7, #20
 80017b4:	46bd      	mov	sp, r7
 80017b6:	bc80      	pop	{r7}
 80017b8:	4770      	bx	lr
 80017ba:	bf00      	nop
 80017bc:	e000ed00 	.word	0xe000ed00

080017c0 <__NVIC_GetPriorityGrouping>:
 80017c0:	b480      	push	{r7}
 80017c2:	af00      	add	r7, sp, #0
 80017c4:	4b04      	ldr	r3, [pc, #16]	; (80017d8 <__NVIC_GetPriorityGrouping+0x18>)
 80017c6:	68db      	ldr	r3, [r3, #12]
 80017c8:	0a1b      	lsrs	r3, r3, #8
 80017ca:	f003 0307 	and.w	r3, r3, #7
 80017ce:	4618      	mov	r0, r3
 80017d0:	46bd      	mov	sp, r7
 80017d2:	bc80      	pop	{r7}
 80017d4:	4770      	bx	lr
 80017d6:	bf00      	nop
 80017d8:	e000ed00 	.word	0xe000ed00

080017dc <__NVIC_SetPriority>:
 80017dc:	b480      	push	{r7}
 80017de:	b083      	sub	sp, #12
 80017e0:	af00      	add	r7, sp, #0
 80017e2:	4603      	mov	r3, r0
 80017e4:	6039      	str	r1, [r7, #0]
 80017e6:	71fb      	strb	r3, [r7, #7]
 80017e8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80017ec:	2b00      	cmp	r3, #0
 80017ee:	db0a      	blt.n	8001806 <__NVIC_SetPriority+0x2a>
 80017f0:	683b      	ldr	r3, [r7, #0]
 80017f2:	b2da      	uxtb	r2, r3
 80017f4:	490c      	ldr	r1, [pc, #48]	; (8001828 <__NVIC_SetPriority+0x4c>)
 80017f6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80017fa:	0112      	lsls	r2, r2, #4
 80017fc:	b2d2      	uxtb	r2, r2
 80017fe:	440b      	add	r3, r1
 8001800:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001804:	e00a      	b.n	800181c <__NVIC_SetPriority+0x40>
 8001806:	683b      	ldr	r3, [r7, #0]
 8001808:	b2da      	uxtb	r2, r3
 800180a:	4908      	ldr	r1, [pc, #32]	; (800182c <__NVIC_SetPriority+0x50>)
 800180c:	79fb      	ldrb	r3, [r7, #7]
 800180e:	f003 030f 	and.w	r3, r3, #15
 8001812:	3b04      	subs	r3, #4
 8001814:	0112      	lsls	r2, r2, #4
 8001816:	b2d2      	uxtb	r2, r2
 8001818:	440b      	add	r3, r1
 800181a:	761a      	strb	r2, [r3, #24]
 800181c:	bf00      	nop
 800181e:	370c      	adds	r7, #12
 8001820:	46bd      	mov	sp, r7
 8001822:	bc80      	pop	{r7}
 8001824:	4770      	bx	lr
 8001826:	bf00      	nop
 8001828:	e000e100 	.word	0xe000e100
 800182c:	e000ed00 	.word	0xe000ed00

08001830 <NVIC_EncodePriority>:
 8001830:	b480      	push	{r7}
 8001832:	b089      	sub	sp, #36	; 0x24
 8001834:	af00      	add	r7, sp, #0
 8001836:	60f8      	str	r0, [r7, #12]
 8001838:	60b9      	str	r1, [r7, #8]
 800183a:	607a      	str	r2, [r7, #4]
 800183c:	68fb      	ldr	r3, [r7, #12]
 800183e:	f003 0307 	and.w	r3, r3, #7
 8001842:	61fb      	str	r3, [r7, #28]
 8001844:	69fb      	ldr	r3, [r7, #28]
 8001846:	f1c3 0307 	rsb	r3, r3, #7
 800184a:	2b04      	cmp	r3, #4
 800184c:	bf28      	it	cs
 800184e:	2304      	movcs	r3, #4
 8001850:	61bb      	str	r3, [r7, #24]
 8001852:	69fb      	ldr	r3, [r7, #28]
 8001854:	3304      	adds	r3, #4
 8001856:	2b06      	cmp	r3, #6
 8001858:	d902      	bls.n	8001860 <NVIC_EncodePriority+0x30>
 800185a:	69fb      	ldr	r3, [r7, #28]
 800185c:	3b03      	subs	r3, #3
 800185e:	e000      	b.n	8001862 <NVIC_EncodePriority+0x32>
 8001860:	2300      	movs	r3, #0
 8001862:	617b      	str	r3, [r7, #20]
 8001864:	f04f 32ff 	mov.w	r2, #4294967295
 8001868:	69bb      	ldr	r3, [r7, #24]
 800186a:	fa02 f303 	lsl.w	r3, r2, r3
 800186e:	43da      	mvns	r2, r3
 8001870:	68bb      	ldr	r3, [r7, #8]
 8001872:	401a      	ands	r2, r3
 8001874:	697b      	ldr	r3, [r7, #20]
 8001876:	409a      	lsls	r2, r3
 8001878:	f04f 31ff 	mov.w	r1, #4294967295
 800187c:	697b      	ldr	r3, [r7, #20]
 800187e:	fa01 f303 	lsl.w	r3, r1, r3
 8001882:	43d9      	mvns	r1, r3
 8001884:	687b      	ldr	r3, [r7, #4]
 8001886:	400b      	ands	r3, r1
 8001888:	4313      	orrs	r3, r2
 800188a:	4618      	mov	r0, r3
 800188c:	3724      	adds	r7, #36	; 0x24
 800188e:	46bd      	mov	sp, r7
 8001890:	bc80      	pop	{r7}
 8001892:	4770      	bx	lr

08001894 <SysTick_Config>:
 8001894:	b580      	push	{r7, lr}
 8001896:	b082      	sub	sp, #8
 8001898:	af00      	add	r7, sp, #0
 800189a:	6078      	str	r0, [r7, #4]
 800189c:	687b      	ldr	r3, [r7, #4]
 800189e:	3b01      	subs	r3, #1
 80018a0:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80018a4:	d301      	bcc.n	80018aa <SysTick_Config+0x16>
 80018a6:	2301      	movs	r3, #1
 80018a8:	e00f      	b.n	80018ca <SysTick_Config+0x36>
 80018aa:	4a0a      	ldr	r2, [pc, #40]	; (80018d4 <SysTick_Config+0x40>)
 80018ac:	687b      	ldr	r3, [r7, #4]
 80018ae:	3b01      	subs	r3, #1
 80018b0:	6053      	str	r3, [r2, #4]
 80018b2:	210f      	movs	r1, #15
 80018b4:	f04f 30ff 	mov.w	r0, #4294967295
 80018b8:	f7ff ff90 	bl	80017dc <__NVIC_SetPriority>
 80018bc:	4b05      	ldr	r3, [pc, #20]	; (80018d4 <SysTick_Config+0x40>)
 80018be:	2200      	movs	r2, #0
 80018c0:	609a      	str	r2, [r3, #8]
 80018c2:	4b04      	ldr	r3, [pc, #16]	; (80018d4 <SysTick_Config+0x40>)
 80018c4:	2207      	movs	r2, #7
 80018c6:	601a      	str	r2, [r3, #0]
 80018c8:	2300      	movs	r3, #0
 80018ca:	4618      	mov	r0, r3
 80018cc:	3708      	adds	r7, #8
 80018ce:	46bd      	mov	sp, r7
 80018d0:	bd80      	pop	{r7, pc}
 80018d2:	bf00      	nop
 80018d4:	e000e010 	.word	0xe000e010

080018d8 <HAL_NVIC_SetPriorityGrouping>:
 80018d8:	b580      	push	{r7, lr}
 80018da:	b082      	sub	sp, #8
 80018dc:	af00      	add	r7, sp, #0
 80018de:	6078      	str	r0, [r7, #4]
 80018e0:	6878      	ldr	r0, [r7, #4]
 80018e2:	f7ff ff49 	bl	8001778 <__NVIC_SetPriorityGrouping>
 80018e6:	bf00      	nop
 80018e8:	3708      	adds	r7, #8
 80018ea:	46bd      	mov	sp, r7
 80018ec:	bd80      	pop	{r7, pc}

080018ee <HAL_NVIC_SetPriority>:
 80018ee:	b580      	push	{r7, lr}
 80018f0:	b086      	sub	sp, #24
 80018f2:	af00      	add	r7, sp, #0
 80018f4:	4603      	mov	r3, r0
 80018f6:	60b9      	str	r1, [r7, #8]
 80018f8:	607a      	str	r2, [r7, #4]
 80018fa:	73fb      	strb	r3, [r7, #15]
 80018fc:	2300      	movs	r3, #0
 80018fe:	617b      	str	r3, [r7, #20]
 8001900:	f7ff ff5e 	bl	80017c0 <__NVIC_GetPriorityGrouping>
 8001904:	6178      	str	r0, [r7, #20]
 8001906:	687a      	ldr	r2, [r7, #4]
 8001908:	68b9      	ldr	r1, [r7, #8]
 800190a:	6978      	ldr	r0, [r7, #20]
 800190c:	f7ff ff90 	bl	8001830 <NVIC_EncodePriority>
 8001910:	4602      	mov	r2, r0
 8001912:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001916:	4611      	mov	r1, r2
 8001918:	4618      	mov	r0, r3
 800191a:	f7ff ff5f 	bl	80017dc <__NVIC_SetPriority>
 800191e:	bf00      	nop
 8001920:	3718      	adds	r7, #24
 8001922:	46bd      	mov	sp, r7
 8001924:	bd80      	pop	{r7, pc}

08001926 <HAL_SYSTICK_Config>:
 8001926:	b580      	push	{r7, lr}
 8001928:	b082      	sub	sp, #8
 800192a:	af00      	add	r7, sp, #0
 800192c:	6078      	str	r0, [r7, #4]
 800192e:	6878      	ldr	r0, [r7, #4]
 8001930:	f7ff ffb0 	bl	8001894 <SysTick_Config>
 8001934:	4603      	mov	r3, r0
 8001936:	4618      	mov	r0, r3
 8001938:	3708      	adds	r7, #8
 800193a:	46bd      	mov	sp, r7
 800193c:	bd80      	pop	{r7, pc}
	...

08001940 <HAL_GPIO_Init>:
 8001940:	b480      	push	{r7}
 8001942:	b08b      	sub	sp, #44	; 0x2c
 8001944:	af00      	add	r7, sp, #0
 8001946:	6078      	str	r0, [r7, #4]
 8001948:	6039      	str	r1, [r7, #0]
 800194a:	2300      	movs	r3, #0
 800194c:	627b      	str	r3, [r7, #36]	; 0x24
 800194e:	2300      	movs	r3, #0
 8001950:	623b      	str	r3, [r7, #32]
 8001952:	e127      	b.n	8001ba4 <HAL_GPIO_Init+0x264>
 8001954:	2201      	movs	r2, #1
 8001956:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001958:	fa02 f303 	lsl.w	r3, r2, r3
 800195c:	61fb      	str	r3, [r7, #28]
 800195e:	683b      	ldr	r3, [r7, #0]
 8001960:	681b      	ldr	r3, [r3, #0]
 8001962:	69fa      	ldr	r2, [r7, #28]
 8001964:	4013      	ands	r3, r2
 8001966:	61bb      	str	r3, [r7, #24]
 8001968:	69ba      	ldr	r2, [r7, #24]
 800196a:	69fb      	ldr	r3, [r7, #28]
 800196c:	429a      	cmp	r2, r3
 800196e:	f040 8116 	bne.w	8001b9e <HAL_GPIO_Init+0x25e>
 8001972:	683b      	ldr	r3, [r7, #0]
 8001974:	685b      	ldr	r3, [r3, #4]
 8001976:	2b12      	cmp	r3, #18
 8001978:	d034      	beq.n	80019e4 <HAL_GPIO_Init+0xa4>
 800197a:	2b12      	cmp	r3, #18
 800197c:	d80d      	bhi.n	800199a <HAL_GPIO_Init+0x5a>
 800197e:	2b02      	cmp	r3, #2
 8001980:	d02b      	beq.n	80019da <HAL_GPIO_Init+0x9a>
 8001982:	2b02      	cmp	r3, #2
 8001984:	d804      	bhi.n	8001990 <HAL_GPIO_Init+0x50>
 8001986:	2b00      	cmp	r3, #0
 8001988:	d031      	beq.n	80019ee <HAL_GPIO_Init+0xae>
 800198a:	2b01      	cmp	r3, #1
 800198c:	d01c      	beq.n	80019c8 <HAL_GPIO_Init+0x88>
 800198e:	e048      	b.n	8001a22 <HAL_GPIO_Init+0xe2>
 8001990:	2b03      	cmp	r3, #3
 8001992:	d043      	beq.n	8001a1c <HAL_GPIO_Init+0xdc>
 8001994:	2b11      	cmp	r3, #17
 8001996:	d01b      	beq.n	80019d0 <HAL_GPIO_Init+0x90>
 8001998:	e043      	b.n	8001a22 <HAL_GPIO_Init+0xe2>
 800199a:	4a89      	ldr	r2, [pc, #548]	; (8001bc0 <HAL_GPIO_Init+0x280>)
 800199c:	4293      	cmp	r3, r2
 800199e:	d026      	beq.n	80019ee <HAL_GPIO_Init+0xae>
 80019a0:	4a87      	ldr	r2, [pc, #540]	; (8001bc0 <HAL_GPIO_Init+0x280>)
 80019a2:	4293      	cmp	r3, r2
 80019a4:	d806      	bhi.n	80019b4 <HAL_GPIO_Init+0x74>
 80019a6:	4a87      	ldr	r2, [pc, #540]	; (8001bc4 <HAL_GPIO_Init+0x284>)
 80019a8:	4293      	cmp	r3, r2
 80019aa:	d020      	beq.n	80019ee <HAL_GPIO_Init+0xae>
 80019ac:	4a86      	ldr	r2, [pc, #536]	; (8001bc8 <HAL_GPIO_Init+0x288>)
 80019ae:	4293      	cmp	r3, r2
 80019b0:	d01d      	beq.n	80019ee <HAL_GPIO_Init+0xae>
 80019b2:	e036      	b.n	8001a22 <HAL_GPIO_Init+0xe2>
 80019b4:	4a85      	ldr	r2, [pc, #532]	; (8001bcc <HAL_GPIO_Init+0x28c>)
 80019b6:	4293      	cmp	r3, r2
 80019b8:	d019      	beq.n	80019ee <HAL_GPIO_Init+0xae>
 80019ba:	4a85      	ldr	r2, [pc, #532]	; (8001bd0 <HAL_GPIO_Init+0x290>)
 80019bc:	4293      	cmp	r3, r2
 80019be:	d016      	beq.n	80019ee <HAL_GPIO_Init+0xae>
 80019c0:	4a84      	ldr	r2, [pc, #528]	; (8001bd4 <HAL_GPIO_Init+0x294>)
 80019c2:	4293      	cmp	r3, r2
 80019c4:	d013      	beq.n	80019ee <HAL_GPIO_Init+0xae>
 80019c6:	e02c      	b.n	8001a22 <HAL_GPIO_Init+0xe2>
 80019c8:	683b      	ldr	r3, [r7, #0]
 80019ca:	68db      	ldr	r3, [r3, #12]
 80019cc:	623b      	str	r3, [r7, #32]
 80019ce:	e028      	b.n	8001a22 <HAL_GPIO_Init+0xe2>
 80019d0:	683b      	ldr	r3, [r7, #0]
 80019d2:	68db      	ldr	r3, [r3, #12]
 80019d4:	3304      	adds	r3, #4
 80019d6:	623b      	str	r3, [r7, #32]
 80019d8:	e023      	b.n	8001a22 <HAL_GPIO_Init+0xe2>
 80019da:	683b      	ldr	r3, [r7, #0]
 80019dc:	68db      	ldr	r3, [r3, #12]
 80019de:	3308      	adds	r3, #8
 80019e0:	623b      	str	r3, [r7, #32]
 80019e2:	e01e      	b.n	8001a22 <HAL_GPIO_Init+0xe2>
 80019e4:	683b      	ldr	r3, [r7, #0]
 80019e6:	68db      	ldr	r3, [r3, #12]
 80019e8:	330c      	adds	r3, #12
 80019ea:	623b      	str	r3, [r7, #32]
 80019ec:	e019      	b.n	8001a22 <HAL_GPIO_Init+0xe2>
 80019ee:	683b      	ldr	r3, [r7, #0]
 80019f0:	689b      	ldr	r3, [r3, #8]
 80019f2:	2b00      	cmp	r3, #0
 80019f4:	d102      	bne.n	80019fc <HAL_GPIO_Init+0xbc>
 80019f6:	2304      	movs	r3, #4
 80019f8:	623b      	str	r3, [r7, #32]
 80019fa:	e012      	b.n	8001a22 <HAL_GPIO_Init+0xe2>
 80019fc:	683b      	ldr	r3, [r7, #0]
 80019fe:	689b      	ldr	r3, [r3, #8]
 8001a00:	2b01      	cmp	r3, #1
 8001a02:	d105      	bne.n	8001a10 <HAL_GPIO_Init+0xd0>
 8001a04:	2308      	movs	r3, #8
 8001a06:	623b      	str	r3, [r7, #32]
 8001a08:	687b      	ldr	r3, [r7, #4]
 8001a0a:	69fa      	ldr	r2, [r7, #28]
 8001a0c:	611a      	str	r2, [r3, #16]
 8001a0e:	e008      	b.n	8001a22 <HAL_GPIO_Init+0xe2>
 8001a10:	2308      	movs	r3, #8
 8001a12:	623b      	str	r3, [r7, #32]
 8001a14:	687b      	ldr	r3, [r7, #4]
 8001a16:	69fa      	ldr	r2, [r7, #28]
 8001a18:	615a      	str	r2, [r3, #20]
 8001a1a:	e002      	b.n	8001a22 <HAL_GPIO_Init+0xe2>
 8001a1c:	2300      	movs	r3, #0
 8001a1e:	623b      	str	r3, [r7, #32]
 8001a20:	bf00      	nop
 8001a22:	69bb      	ldr	r3, [r7, #24]
 8001a24:	2bff      	cmp	r3, #255	; 0xff
 8001a26:	d801      	bhi.n	8001a2c <HAL_GPIO_Init+0xec>
 8001a28:	687b      	ldr	r3, [r7, #4]
 8001a2a:	e001      	b.n	8001a30 <HAL_GPIO_Init+0xf0>
 8001a2c:	687b      	ldr	r3, [r7, #4]
 8001a2e:	3304      	adds	r3, #4
 8001a30:	617b      	str	r3, [r7, #20]
 8001a32:	69bb      	ldr	r3, [r7, #24]
 8001a34:	2bff      	cmp	r3, #255	; 0xff
 8001a36:	d802      	bhi.n	8001a3e <HAL_GPIO_Init+0xfe>
 8001a38:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a3a:	009b      	lsls	r3, r3, #2
 8001a3c:	e002      	b.n	8001a44 <HAL_GPIO_Init+0x104>
 8001a3e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a40:	3b08      	subs	r3, #8
 8001a42:	009b      	lsls	r3, r3, #2
 8001a44:	613b      	str	r3, [r7, #16]
 8001a46:	697b      	ldr	r3, [r7, #20]
 8001a48:	681a      	ldr	r2, [r3, #0]
 8001a4a:	210f      	movs	r1, #15
 8001a4c:	693b      	ldr	r3, [r7, #16]
 8001a4e:	fa01 f303 	lsl.w	r3, r1, r3
 8001a52:	43db      	mvns	r3, r3
 8001a54:	401a      	ands	r2, r3
 8001a56:	6a39      	ldr	r1, [r7, #32]
 8001a58:	693b      	ldr	r3, [r7, #16]
 8001a5a:	fa01 f303 	lsl.w	r3, r1, r3
 8001a5e:	431a      	orrs	r2, r3
 8001a60:	697b      	ldr	r3, [r7, #20]
 8001a62:	601a      	str	r2, [r3, #0]
 8001a64:	683b      	ldr	r3, [r7, #0]
 8001a66:	685b      	ldr	r3, [r3, #4]
 8001a68:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a6c:	2b00      	cmp	r3, #0
 8001a6e:	f000 8096 	beq.w	8001b9e <HAL_GPIO_Init+0x25e>
 8001a72:	4b59      	ldr	r3, [pc, #356]	; (8001bd8 <HAL_GPIO_Init+0x298>)
 8001a74:	699b      	ldr	r3, [r3, #24]
 8001a76:	4a58      	ldr	r2, [pc, #352]	; (8001bd8 <HAL_GPIO_Init+0x298>)
 8001a78:	f043 0301 	orr.w	r3, r3, #1
 8001a7c:	6193      	str	r3, [r2, #24]
 8001a7e:	4b56      	ldr	r3, [pc, #344]	; (8001bd8 <HAL_GPIO_Init+0x298>)
 8001a80:	699b      	ldr	r3, [r3, #24]
 8001a82:	f003 0301 	and.w	r3, r3, #1
 8001a86:	60bb      	str	r3, [r7, #8]
 8001a88:	68bb      	ldr	r3, [r7, #8]
 8001a8a:	4a54      	ldr	r2, [pc, #336]	; (8001bdc <HAL_GPIO_Init+0x29c>)
 8001a8c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a8e:	089b      	lsrs	r3, r3, #2
 8001a90:	3302      	adds	r3, #2
 8001a92:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001a96:	60fb      	str	r3, [r7, #12]
 8001a98:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a9a:	f003 0303 	and.w	r3, r3, #3
 8001a9e:	009b      	lsls	r3, r3, #2
 8001aa0:	220f      	movs	r2, #15
 8001aa2:	fa02 f303 	lsl.w	r3, r2, r3
 8001aa6:	43db      	mvns	r3, r3
 8001aa8:	68fa      	ldr	r2, [r7, #12]
 8001aaa:	4013      	ands	r3, r2
 8001aac:	60fb      	str	r3, [r7, #12]
 8001aae:	687b      	ldr	r3, [r7, #4]
 8001ab0:	4a4b      	ldr	r2, [pc, #300]	; (8001be0 <HAL_GPIO_Init+0x2a0>)
 8001ab2:	4293      	cmp	r3, r2
 8001ab4:	d013      	beq.n	8001ade <HAL_GPIO_Init+0x19e>
 8001ab6:	687b      	ldr	r3, [r7, #4]
 8001ab8:	4a4a      	ldr	r2, [pc, #296]	; (8001be4 <HAL_GPIO_Init+0x2a4>)
 8001aba:	4293      	cmp	r3, r2
 8001abc:	d00d      	beq.n	8001ada <HAL_GPIO_Init+0x19a>
 8001abe:	687b      	ldr	r3, [r7, #4]
 8001ac0:	4a49      	ldr	r2, [pc, #292]	; (8001be8 <HAL_GPIO_Init+0x2a8>)
 8001ac2:	4293      	cmp	r3, r2
 8001ac4:	d007      	beq.n	8001ad6 <HAL_GPIO_Init+0x196>
 8001ac6:	687b      	ldr	r3, [r7, #4]
 8001ac8:	4a48      	ldr	r2, [pc, #288]	; (8001bec <HAL_GPIO_Init+0x2ac>)
 8001aca:	4293      	cmp	r3, r2
 8001acc:	d101      	bne.n	8001ad2 <HAL_GPIO_Init+0x192>
 8001ace:	2303      	movs	r3, #3
 8001ad0:	e006      	b.n	8001ae0 <HAL_GPIO_Init+0x1a0>
 8001ad2:	2304      	movs	r3, #4
 8001ad4:	e004      	b.n	8001ae0 <HAL_GPIO_Init+0x1a0>
 8001ad6:	2302      	movs	r3, #2
 8001ad8:	e002      	b.n	8001ae0 <HAL_GPIO_Init+0x1a0>
 8001ada:	2301      	movs	r3, #1
 8001adc:	e000      	b.n	8001ae0 <HAL_GPIO_Init+0x1a0>
 8001ade:	2300      	movs	r3, #0
 8001ae0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001ae2:	f002 0203 	and.w	r2, r2, #3
 8001ae6:	0092      	lsls	r2, r2, #2
 8001ae8:	4093      	lsls	r3, r2
 8001aea:	68fa      	ldr	r2, [r7, #12]
 8001aec:	4313      	orrs	r3, r2
 8001aee:	60fb      	str	r3, [r7, #12]
 8001af0:	493a      	ldr	r1, [pc, #232]	; (8001bdc <HAL_GPIO_Init+0x29c>)
 8001af2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001af4:	089b      	lsrs	r3, r3, #2
 8001af6:	3302      	adds	r3, #2
 8001af8:	68fa      	ldr	r2, [r7, #12]
 8001afa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001afe:	683b      	ldr	r3, [r7, #0]
 8001b00:	685b      	ldr	r3, [r3, #4]
 8001b02:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001b06:	2b00      	cmp	r3, #0
 8001b08:	d006      	beq.n	8001b18 <HAL_GPIO_Init+0x1d8>
 8001b0a:	4b39      	ldr	r3, [pc, #228]	; (8001bf0 <HAL_GPIO_Init+0x2b0>)
 8001b0c:	681a      	ldr	r2, [r3, #0]
 8001b0e:	4938      	ldr	r1, [pc, #224]	; (8001bf0 <HAL_GPIO_Init+0x2b0>)
 8001b10:	69bb      	ldr	r3, [r7, #24]
 8001b12:	4313      	orrs	r3, r2
 8001b14:	600b      	str	r3, [r1, #0]
 8001b16:	e006      	b.n	8001b26 <HAL_GPIO_Init+0x1e6>
 8001b18:	4b35      	ldr	r3, [pc, #212]	; (8001bf0 <HAL_GPIO_Init+0x2b0>)
 8001b1a:	681a      	ldr	r2, [r3, #0]
 8001b1c:	69bb      	ldr	r3, [r7, #24]
 8001b1e:	43db      	mvns	r3, r3
 8001b20:	4933      	ldr	r1, [pc, #204]	; (8001bf0 <HAL_GPIO_Init+0x2b0>)
 8001b22:	4013      	ands	r3, r2
 8001b24:	600b      	str	r3, [r1, #0]
 8001b26:	683b      	ldr	r3, [r7, #0]
 8001b28:	685b      	ldr	r3, [r3, #4]
 8001b2a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001b2e:	2b00      	cmp	r3, #0
 8001b30:	d006      	beq.n	8001b40 <HAL_GPIO_Init+0x200>
 8001b32:	4b2f      	ldr	r3, [pc, #188]	; (8001bf0 <HAL_GPIO_Init+0x2b0>)
 8001b34:	685a      	ldr	r2, [r3, #4]
 8001b36:	492e      	ldr	r1, [pc, #184]	; (8001bf0 <HAL_GPIO_Init+0x2b0>)
 8001b38:	69bb      	ldr	r3, [r7, #24]
 8001b3a:	4313      	orrs	r3, r2
 8001b3c:	604b      	str	r3, [r1, #4]
 8001b3e:	e006      	b.n	8001b4e <HAL_GPIO_Init+0x20e>
 8001b40:	4b2b      	ldr	r3, [pc, #172]	; (8001bf0 <HAL_GPIO_Init+0x2b0>)
 8001b42:	685a      	ldr	r2, [r3, #4]
 8001b44:	69bb      	ldr	r3, [r7, #24]
 8001b46:	43db      	mvns	r3, r3
 8001b48:	4929      	ldr	r1, [pc, #164]	; (8001bf0 <HAL_GPIO_Init+0x2b0>)
 8001b4a:	4013      	ands	r3, r2
 8001b4c:	604b      	str	r3, [r1, #4]
 8001b4e:	683b      	ldr	r3, [r7, #0]
 8001b50:	685b      	ldr	r3, [r3, #4]
 8001b52:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001b56:	2b00      	cmp	r3, #0
 8001b58:	d006      	beq.n	8001b68 <HAL_GPIO_Init+0x228>
 8001b5a:	4b25      	ldr	r3, [pc, #148]	; (8001bf0 <HAL_GPIO_Init+0x2b0>)
 8001b5c:	689a      	ldr	r2, [r3, #8]
 8001b5e:	4924      	ldr	r1, [pc, #144]	; (8001bf0 <HAL_GPIO_Init+0x2b0>)
 8001b60:	69bb      	ldr	r3, [r7, #24]
 8001b62:	4313      	orrs	r3, r2
 8001b64:	608b      	str	r3, [r1, #8]
 8001b66:	e006      	b.n	8001b76 <HAL_GPIO_Init+0x236>
 8001b68:	4b21      	ldr	r3, [pc, #132]	; (8001bf0 <HAL_GPIO_Init+0x2b0>)
 8001b6a:	689a      	ldr	r2, [r3, #8]
 8001b6c:	69bb      	ldr	r3, [r7, #24]
 8001b6e:	43db      	mvns	r3, r3
 8001b70:	491f      	ldr	r1, [pc, #124]	; (8001bf0 <HAL_GPIO_Init+0x2b0>)
 8001b72:	4013      	ands	r3, r2
 8001b74:	608b      	str	r3, [r1, #8]
 8001b76:	683b      	ldr	r3, [r7, #0]
 8001b78:	685b      	ldr	r3, [r3, #4]
 8001b7a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001b7e:	2b00      	cmp	r3, #0
 8001b80:	d006      	beq.n	8001b90 <HAL_GPIO_Init+0x250>
 8001b82:	4b1b      	ldr	r3, [pc, #108]	; (8001bf0 <HAL_GPIO_Init+0x2b0>)
 8001b84:	68da      	ldr	r2, [r3, #12]
 8001b86:	491a      	ldr	r1, [pc, #104]	; (8001bf0 <HAL_GPIO_Init+0x2b0>)
 8001b88:	69bb      	ldr	r3, [r7, #24]
 8001b8a:	4313      	orrs	r3, r2
 8001b8c:	60cb      	str	r3, [r1, #12]
 8001b8e:	e006      	b.n	8001b9e <HAL_GPIO_Init+0x25e>
 8001b90:	4b17      	ldr	r3, [pc, #92]	; (8001bf0 <HAL_GPIO_Init+0x2b0>)
 8001b92:	68da      	ldr	r2, [r3, #12]
 8001b94:	69bb      	ldr	r3, [r7, #24]
 8001b96:	43db      	mvns	r3, r3
 8001b98:	4915      	ldr	r1, [pc, #84]	; (8001bf0 <HAL_GPIO_Init+0x2b0>)
 8001b9a:	4013      	ands	r3, r2
 8001b9c:	60cb      	str	r3, [r1, #12]
 8001b9e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001ba0:	3301      	adds	r3, #1
 8001ba2:	627b      	str	r3, [r7, #36]	; 0x24
 8001ba4:	683b      	ldr	r3, [r7, #0]
 8001ba6:	681a      	ldr	r2, [r3, #0]
 8001ba8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001baa:	fa22 f303 	lsr.w	r3, r2, r3
 8001bae:	2b00      	cmp	r3, #0
 8001bb0:	f47f aed0 	bne.w	8001954 <HAL_GPIO_Init+0x14>
 8001bb4:	bf00      	nop
 8001bb6:	372c      	adds	r7, #44	; 0x2c
 8001bb8:	46bd      	mov	sp, r7
 8001bba:	bc80      	pop	{r7}
 8001bbc:	4770      	bx	lr
 8001bbe:	bf00      	nop
 8001bc0:	10210000 	.word	0x10210000
 8001bc4:	10110000 	.word	0x10110000
 8001bc8:	10120000 	.word	0x10120000
 8001bcc:	10310000 	.word	0x10310000
 8001bd0:	10320000 	.word	0x10320000
 8001bd4:	10220000 	.word	0x10220000
 8001bd8:	40021000 	.word	0x40021000
 8001bdc:	40010000 	.word	0x40010000
 8001be0:	40010800 	.word	0x40010800
 8001be4:	40010c00 	.word	0x40010c00
 8001be8:	40011000 	.word	0x40011000
 8001bec:	40011400 	.word	0x40011400
 8001bf0:	40010400 	.word	0x40010400

08001bf4 <HAL_GPIO_ReadPin>:
 8001bf4:	b480      	push	{r7}
 8001bf6:	b085      	sub	sp, #20
 8001bf8:	af00      	add	r7, sp, #0
 8001bfa:	6078      	str	r0, [r7, #4]
 8001bfc:	460b      	mov	r3, r1
 8001bfe:	807b      	strh	r3, [r7, #2]
 8001c00:	687b      	ldr	r3, [r7, #4]
 8001c02:	689a      	ldr	r2, [r3, #8]
 8001c04:	887b      	ldrh	r3, [r7, #2]
 8001c06:	4013      	ands	r3, r2
 8001c08:	2b00      	cmp	r3, #0
 8001c0a:	d002      	beq.n	8001c12 <HAL_GPIO_ReadPin+0x1e>
 8001c0c:	2301      	movs	r3, #1
 8001c0e:	73fb      	strb	r3, [r7, #15]
 8001c10:	e001      	b.n	8001c16 <HAL_GPIO_ReadPin+0x22>
 8001c12:	2300      	movs	r3, #0
 8001c14:	73fb      	strb	r3, [r7, #15]
 8001c16:	7bfb      	ldrb	r3, [r7, #15]
 8001c18:	4618      	mov	r0, r3
 8001c1a:	3714      	adds	r7, #20
 8001c1c:	46bd      	mov	sp, r7
 8001c1e:	bc80      	pop	{r7}
 8001c20:	4770      	bx	lr

08001c22 <HAL_GPIO_WritePin>:
 8001c22:	b480      	push	{r7}
 8001c24:	b083      	sub	sp, #12
 8001c26:	af00      	add	r7, sp, #0
 8001c28:	6078      	str	r0, [r7, #4]
 8001c2a:	460b      	mov	r3, r1
 8001c2c:	807b      	strh	r3, [r7, #2]
 8001c2e:	4613      	mov	r3, r2
 8001c30:	707b      	strb	r3, [r7, #1]
 8001c32:	787b      	ldrb	r3, [r7, #1]
 8001c34:	2b00      	cmp	r3, #0
 8001c36:	d003      	beq.n	8001c40 <HAL_GPIO_WritePin+0x1e>
 8001c38:	887a      	ldrh	r2, [r7, #2]
 8001c3a:	687b      	ldr	r3, [r7, #4]
 8001c3c:	611a      	str	r2, [r3, #16]
 8001c3e:	e003      	b.n	8001c48 <HAL_GPIO_WritePin+0x26>
 8001c40:	887b      	ldrh	r3, [r7, #2]
 8001c42:	041a      	lsls	r2, r3, #16
 8001c44:	687b      	ldr	r3, [r7, #4]
 8001c46:	611a      	str	r2, [r3, #16]
 8001c48:	bf00      	nop
 8001c4a:	370c      	adds	r7, #12
 8001c4c:	46bd      	mov	sp, r7
 8001c4e:	bc80      	pop	{r7}
 8001c50:	4770      	bx	lr
	...

08001c54 <HAL_RCC_OscConfig>:
 8001c54:	b580      	push	{r7, lr}
 8001c56:	b086      	sub	sp, #24
 8001c58:	af00      	add	r7, sp, #0
 8001c5a:	6078      	str	r0, [r7, #4]
 8001c5c:	687b      	ldr	r3, [r7, #4]
 8001c5e:	2b00      	cmp	r3, #0
 8001c60:	d101      	bne.n	8001c66 <HAL_RCC_OscConfig+0x12>
 8001c62:	2301      	movs	r3, #1
 8001c64:	e26c      	b.n	8002140 <HAL_RCC_OscConfig+0x4ec>
 8001c66:	687b      	ldr	r3, [r7, #4]
 8001c68:	681b      	ldr	r3, [r3, #0]
 8001c6a:	f003 0301 	and.w	r3, r3, #1
 8001c6e:	2b00      	cmp	r3, #0
 8001c70:	f000 8087 	beq.w	8001d82 <HAL_RCC_OscConfig+0x12e>
 8001c74:	4b92      	ldr	r3, [pc, #584]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001c76:	685b      	ldr	r3, [r3, #4]
 8001c78:	f003 030c 	and.w	r3, r3, #12
 8001c7c:	2b04      	cmp	r3, #4
 8001c7e:	d00c      	beq.n	8001c9a <HAL_RCC_OscConfig+0x46>
 8001c80:	4b8f      	ldr	r3, [pc, #572]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001c82:	685b      	ldr	r3, [r3, #4]
 8001c84:	f003 030c 	and.w	r3, r3, #12
 8001c88:	2b08      	cmp	r3, #8
 8001c8a:	d112      	bne.n	8001cb2 <HAL_RCC_OscConfig+0x5e>
 8001c8c:	4b8c      	ldr	r3, [pc, #560]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001c8e:	685b      	ldr	r3, [r3, #4]
 8001c90:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001c94:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001c98:	d10b      	bne.n	8001cb2 <HAL_RCC_OscConfig+0x5e>
 8001c9a:	4b89      	ldr	r3, [pc, #548]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001c9c:	681b      	ldr	r3, [r3, #0]
 8001c9e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001ca2:	2b00      	cmp	r3, #0
 8001ca4:	d06c      	beq.n	8001d80 <HAL_RCC_OscConfig+0x12c>
 8001ca6:	687b      	ldr	r3, [r7, #4]
 8001ca8:	685b      	ldr	r3, [r3, #4]
 8001caa:	2b00      	cmp	r3, #0
 8001cac:	d168      	bne.n	8001d80 <HAL_RCC_OscConfig+0x12c>
 8001cae:	2301      	movs	r3, #1
 8001cb0:	e246      	b.n	8002140 <HAL_RCC_OscConfig+0x4ec>
 8001cb2:	687b      	ldr	r3, [r7, #4]
 8001cb4:	685b      	ldr	r3, [r3, #4]
 8001cb6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001cba:	d106      	bne.n	8001cca <HAL_RCC_OscConfig+0x76>
 8001cbc:	4b80      	ldr	r3, [pc, #512]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001cbe:	681b      	ldr	r3, [r3, #0]
 8001cc0:	4a7f      	ldr	r2, [pc, #508]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001cc2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001cc6:	6013      	str	r3, [r2, #0]
 8001cc8:	e02e      	b.n	8001d28 <HAL_RCC_OscConfig+0xd4>
 8001cca:	687b      	ldr	r3, [r7, #4]
 8001ccc:	685b      	ldr	r3, [r3, #4]
 8001cce:	2b00      	cmp	r3, #0
 8001cd0:	d10c      	bne.n	8001cec <HAL_RCC_OscConfig+0x98>
 8001cd2:	4b7b      	ldr	r3, [pc, #492]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001cd4:	681b      	ldr	r3, [r3, #0]
 8001cd6:	4a7a      	ldr	r2, [pc, #488]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001cd8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001cdc:	6013      	str	r3, [r2, #0]
 8001cde:	4b78      	ldr	r3, [pc, #480]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001ce0:	681b      	ldr	r3, [r3, #0]
 8001ce2:	4a77      	ldr	r2, [pc, #476]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001ce4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001ce8:	6013      	str	r3, [r2, #0]
 8001cea:	e01d      	b.n	8001d28 <HAL_RCC_OscConfig+0xd4>
 8001cec:	687b      	ldr	r3, [r7, #4]
 8001cee:	685b      	ldr	r3, [r3, #4]
 8001cf0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001cf4:	d10c      	bne.n	8001d10 <HAL_RCC_OscConfig+0xbc>
 8001cf6:	4b72      	ldr	r3, [pc, #456]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001cf8:	681b      	ldr	r3, [r3, #0]
 8001cfa:	4a71      	ldr	r2, [pc, #452]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001cfc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001d00:	6013      	str	r3, [r2, #0]
 8001d02:	4b6f      	ldr	r3, [pc, #444]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001d04:	681b      	ldr	r3, [r3, #0]
 8001d06:	4a6e      	ldr	r2, [pc, #440]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001d08:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001d0c:	6013      	str	r3, [r2, #0]
 8001d0e:	e00b      	b.n	8001d28 <HAL_RCC_OscConfig+0xd4>
 8001d10:	4b6b      	ldr	r3, [pc, #428]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001d12:	681b      	ldr	r3, [r3, #0]
 8001d14:	4a6a      	ldr	r2, [pc, #424]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001d16:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001d1a:	6013      	str	r3, [r2, #0]
 8001d1c:	4b68      	ldr	r3, [pc, #416]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001d1e:	681b      	ldr	r3, [r3, #0]
 8001d20:	4a67      	ldr	r2, [pc, #412]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001d22:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001d26:	6013      	str	r3, [r2, #0]
 8001d28:	687b      	ldr	r3, [r7, #4]
 8001d2a:	685b      	ldr	r3, [r3, #4]
 8001d2c:	2b00      	cmp	r3, #0
 8001d2e:	d013      	beq.n	8001d58 <HAL_RCC_OscConfig+0x104>
 8001d30:	f7ff fcf6 	bl	8001720 <HAL_GetTick>
 8001d34:	6138      	str	r0, [r7, #16]
 8001d36:	e008      	b.n	8001d4a <HAL_RCC_OscConfig+0xf6>
 8001d38:	f7ff fcf2 	bl	8001720 <HAL_GetTick>
 8001d3c:	4602      	mov	r2, r0
 8001d3e:	693b      	ldr	r3, [r7, #16]
 8001d40:	1ad3      	subs	r3, r2, r3
 8001d42:	2b64      	cmp	r3, #100	; 0x64
 8001d44:	d901      	bls.n	8001d4a <HAL_RCC_OscConfig+0xf6>
 8001d46:	2303      	movs	r3, #3
 8001d48:	e1fa      	b.n	8002140 <HAL_RCC_OscConfig+0x4ec>
 8001d4a:	4b5d      	ldr	r3, [pc, #372]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001d4c:	681b      	ldr	r3, [r3, #0]
 8001d4e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001d52:	2b00      	cmp	r3, #0
 8001d54:	d0f0      	beq.n	8001d38 <HAL_RCC_OscConfig+0xe4>
 8001d56:	e014      	b.n	8001d82 <HAL_RCC_OscConfig+0x12e>
 8001d58:	f7ff fce2 	bl	8001720 <HAL_GetTick>
 8001d5c:	6138      	str	r0, [r7, #16]
 8001d5e:	e008      	b.n	8001d72 <HAL_RCC_OscConfig+0x11e>
 8001d60:	f7ff fcde 	bl	8001720 <HAL_GetTick>
 8001d64:	4602      	mov	r2, r0
 8001d66:	693b      	ldr	r3, [r7, #16]
 8001d68:	1ad3      	subs	r3, r2, r3
 8001d6a:	2b64      	cmp	r3, #100	; 0x64
 8001d6c:	d901      	bls.n	8001d72 <HAL_RCC_OscConfig+0x11e>
 8001d6e:	2303      	movs	r3, #3
 8001d70:	e1e6      	b.n	8002140 <HAL_RCC_OscConfig+0x4ec>
 8001d72:	4b53      	ldr	r3, [pc, #332]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001d74:	681b      	ldr	r3, [r3, #0]
 8001d76:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001d7a:	2b00      	cmp	r3, #0
 8001d7c:	d1f0      	bne.n	8001d60 <HAL_RCC_OscConfig+0x10c>
 8001d7e:	e000      	b.n	8001d82 <HAL_RCC_OscConfig+0x12e>
 8001d80:	bf00      	nop
 8001d82:	687b      	ldr	r3, [r7, #4]
 8001d84:	681b      	ldr	r3, [r3, #0]
 8001d86:	f003 0302 	and.w	r3, r3, #2
 8001d8a:	2b00      	cmp	r3, #0
 8001d8c:	d063      	beq.n	8001e56 <HAL_RCC_OscConfig+0x202>
 8001d8e:	4b4c      	ldr	r3, [pc, #304]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001d90:	685b      	ldr	r3, [r3, #4]
 8001d92:	f003 030c 	and.w	r3, r3, #12
 8001d96:	2b00      	cmp	r3, #0
 8001d98:	d00b      	beq.n	8001db2 <HAL_RCC_OscConfig+0x15e>
 8001d9a:	4b49      	ldr	r3, [pc, #292]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001d9c:	685b      	ldr	r3, [r3, #4]
 8001d9e:	f003 030c 	and.w	r3, r3, #12
 8001da2:	2b08      	cmp	r3, #8
 8001da4:	d11c      	bne.n	8001de0 <HAL_RCC_OscConfig+0x18c>
 8001da6:	4b46      	ldr	r3, [pc, #280]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001da8:	685b      	ldr	r3, [r3, #4]
 8001daa:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001dae:	2b00      	cmp	r3, #0
 8001db0:	d116      	bne.n	8001de0 <HAL_RCC_OscConfig+0x18c>
 8001db2:	4b43      	ldr	r3, [pc, #268]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001db4:	681b      	ldr	r3, [r3, #0]
 8001db6:	f003 0302 	and.w	r3, r3, #2
 8001dba:	2b00      	cmp	r3, #0
 8001dbc:	d005      	beq.n	8001dca <HAL_RCC_OscConfig+0x176>
 8001dbe:	687b      	ldr	r3, [r7, #4]
 8001dc0:	691b      	ldr	r3, [r3, #16]
 8001dc2:	2b01      	cmp	r3, #1
 8001dc4:	d001      	beq.n	8001dca <HAL_RCC_OscConfig+0x176>
 8001dc6:	2301      	movs	r3, #1
 8001dc8:	e1ba      	b.n	8002140 <HAL_RCC_OscConfig+0x4ec>
 8001dca:	4b3d      	ldr	r3, [pc, #244]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001dcc:	681b      	ldr	r3, [r3, #0]
 8001dce:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001dd2:	687b      	ldr	r3, [r7, #4]
 8001dd4:	695b      	ldr	r3, [r3, #20]
 8001dd6:	00db      	lsls	r3, r3, #3
 8001dd8:	4939      	ldr	r1, [pc, #228]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001dda:	4313      	orrs	r3, r2
 8001ddc:	600b      	str	r3, [r1, #0]
 8001dde:	e03a      	b.n	8001e56 <HAL_RCC_OscConfig+0x202>
 8001de0:	687b      	ldr	r3, [r7, #4]
 8001de2:	691b      	ldr	r3, [r3, #16]
 8001de4:	2b00      	cmp	r3, #0
 8001de6:	d020      	beq.n	8001e2a <HAL_RCC_OscConfig+0x1d6>
 8001de8:	4b36      	ldr	r3, [pc, #216]	; (8001ec4 <HAL_RCC_OscConfig+0x270>)
 8001dea:	2201      	movs	r2, #1
 8001dec:	601a      	str	r2, [r3, #0]
 8001dee:	f7ff fc97 	bl	8001720 <HAL_GetTick>
 8001df2:	6138      	str	r0, [r7, #16]
 8001df4:	e008      	b.n	8001e08 <HAL_RCC_OscConfig+0x1b4>
 8001df6:	f7ff fc93 	bl	8001720 <HAL_GetTick>
 8001dfa:	4602      	mov	r2, r0
 8001dfc:	693b      	ldr	r3, [r7, #16]
 8001dfe:	1ad3      	subs	r3, r2, r3
 8001e00:	2b02      	cmp	r3, #2
 8001e02:	d901      	bls.n	8001e08 <HAL_RCC_OscConfig+0x1b4>
 8001e04:	2303      	movs	r3, #3
 8001e06:	e19b      	b.n	8002140 <HAL_RCC_OscConfig+0x4ec>
 8001e08:	4b2d      	ldr	r3, [pc, #180]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001e0a:	681b      	ldr	r3, [r3, #0]
 8001e0c:	f003 0302 	and.w	r3, r3, #2
 8001e10:	2b00      	cmp	r3, #0
 8001e12:	d0f0      	beq.n	8001df6 <HAL_RCC_OscConfig+0x1a2>
 8001e14:	4b2a      	ldr	r3, [pc, #168]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001e16:	681b      	ldr	r3, [r3, #0]
 8001e18:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001e1c:	687b      	ldr	r3, [r7, #4]
 8001e1e:	695b      	ldr	r3, [r3, #20]
 8001e20:	00db      	lsls	r3, r3, #3
 8001e22:	4927      	ldr	r1, [pc, #156]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001e24:	4313      	orrs	r3, r2
 8001e26:	600b      	str	r3, [r1, #0]
 8001e28:	e015      	b.n	8001e56 <HAL_RCC_OscConfig+0x202>
 8001e2a:	4b26      	ldr	r3, [pc, #152]	; (8001ec4 <HAL_RCC_OscConfig+0x270>)
 8001e2c:	2200      	movs	r2, #0
 8001e2e:	601a      	str	r2, [r3, #0]
 8001e30:	f7ff fc76 	bl	8001720 <HAL_GetTick>
 8001e34:	6138      	str	r0, [r7, #16]
 8001e36:	e008      	b.n	8001e4a <HAL_RCC_OscConfig+0x1f6>
 8001e38:	f7ff fc72 	bl	8001720 <HAL_GetTick>
 8001e3c:	4602      	mov	r2, r0
 8001e3e:	693b      	ldr	r3, [r7, #16]
 8001e40:	1ad3      	subs	r3, r2, r3
 8001e42:	2b02      	cmp	r3, #2
 8001e44:	d901      	bls.n	8001e4a <HAL_RCC_OscConfig+0x1f6>
 8001e46:	2303      	movs	r3, #3
 8001e48:	e17a      	b.n	8002140 <HAL_RCC_OscConfig+0x4ec>
 8001e4a:	4b1d      	ldr	r3, [pc, #116]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001e4c:	681b      	ldr	r3, [r3, #0]
 8001e4e:	f003 0302 	and.w	r3, r3, #2
 8001e52:	2b00      	cmp	r3, #0
 8001e54:	d1f0      	bne.n	8001e38 <HAL_RCC_OscConfig+0x1e4>
 8001e56:	687b      	ldr	r3, [r7, #4]
 8001e58:	681b      	ldr	r3, [r3, #0]
 8001e5a:	f003 0308 	and.w	r3, r3, #8
 8001e5e:	2b00      	cmp	r3, #0
 8001e60:	d03a      	beq.n	8001ed8 <HAL_RCC_OscConfig+0x284>
 8001e62:	687b      	ldr	r3, [r7, #4]
 8001e64:	699b      	ldr	r3, [r3, #24]
 8001e66:	2b00      	cmp	r3, #0
 8001e68:	d019      	beq.n	8001e9e <HAL_RCC_OscConfig+0x24a>
 8001e6a:	4b17      	ldr	r3, [pc, #92]	; (8001ec8 <HAL_RCC_OscConfig+0x274>)
 8001e6c:	2201      	movs	r2, #1
 8001e6e:	601a      	str	r2, [r3, #0]
 8001e70:	f7ff fc56 	bl	8001720 <HAL_GetTick>
 8001e74:	6138      	str	r0, [r7, #16]
 8001e76:	e008      	b.n	8001e8a <HAL_RCC_OscConfig+0x236>
 8001e78:	f7ff fc52 	bl	8001720 <HAL_GetTick>
 8001e7c:	4602      	mov	r2, r0
 8001e7e:	693b      	ldr	r3, [r7, #16]
 8001e80:	1ad3      	subs	r3, r2, r3
 8001e82:	2b02      	cmp	r3, #2
 8001e84:	d901      	bls.n	8001e8a <HAL_RCC_OscConfig+0x236>
 8001e86:	2303      	movs	r3, #3
 8001e88:	e15a      	b.n	8002140 <HAL_RCC_OscConfig+0x4ec>
 8001e8a:	4b0d      	ldr	r3, [pc, #52]	; (8001ec0 <HAL_RCC_OscConfig+0x26c>)
 8001e8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e8e:	f003 0302 	and.w	r3, r3, #2
 8001e92:	2b00      	cmp	r3, #0
 8001e94:	d0f0      	beq.n	8001e78 <HAL_RCC_OscConfig+0x224>
 8001e96:	2001      	movs	r0, #1
 8001e98:	f000 faa8 	bl	80023ec <RCC_Delay>
 8001e9c:	e01c      	b.n	8001ed8 <HAL_RCC_OscConfig+0x284>
 8001e9e:	4b0a      	ldr	r3, [pc, #40]	; (8001ec8 <HAL_RCC_OscConfig+0x274>)
 8001ea0:	2200      	movs	r2, #0
 8001ea2:	601a      	str	r2, [r3, #0]
 8001ea4:	f7ff fc3c 	bl	8001720 <HAL_GetTick>
 8001ea8:	6138      	str	r0, [r7, #16]
 8001eaa:	e00f      	b.n	8001ecc <HAL_RCC_OscConfig+0x278>
 8001eac:	f7ff fc38 	bl	8001720 <HAL_GetTick>
 8001eb0:	4602      	mov	r2, r0
 8001eb2:	693b      	ldr	r3, [r7, #16]
 8001eb4:	1ad3      	subs	r3, r2, r3
 8001eb6:	2b02      	cmp	r3, #2
 8001eb8:	d908      	bls.n	8001ecc <HAL_RCC_OscConfig+0x278>
 8001eba:	2303      	movs	r3, #3
 8001ebc:	e140      	b.n	8002140 <HAL_RCC_OscConfig+0x4ec>
 8001ebe:	bf00      	nop
 8001ec0:	40021000 	.word	0x40021000
 8001ec4:	42420000 	.word	0x42420000
 8001ec8:	42420480 	.word	0x42420480
 8001ecc:	4b9e      	ldr	r3, [pc, #632]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8001ece:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ed0:	f003 0302 	and.w	r3, r3, #2
 8001ed4:	2b00      	cmp	r3, #0
 8001ed6:	d1e9      	bne.n	8001eac <HAL_RCC_OscConfig+0x258>
 8001ed8:	687b      	ldr	r3, [r7, #4]
 8001eda:	681b      	ldr	r3, [r3, #0]
 8001edc:	f003 0304 	and.w	r3, r3, #4
 8001ee0:	2b00      	cmp	r3, #0
 8001ee2:	f000 80a6 	beq.w	8002032 <HAL_RCC_OscConfig+0x3de>
 8001ee6:	2300      	movs	r3, #0
 8001ee8:	75fb      	strb	r3, [r7, #23]
 8001eea:	4b97      	ldr	r3, [pc, #604]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8001eec:	69db      	ldr	r3, [r3, #28]
 8001eee:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001ef2:	2b00      	cmp	r3, #0
 8001ef4:	d10d      	bne.n	8001f12 <HAL_RCC_OscConfig+0x2be>
 8001ef6:	4b94      	ldr	r3, [pc, #592]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8001ef8:	69db      	ldr	r3, [r3, #28]
 8001efa:	4a93      	ldr	r2, [pc, #588]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8001efc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001f00:	61d3      	str	r3, [r2, #28]
 8001f02:	4b91      	ldr	r3, [pc, #580]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8001f04:	69db      	ldr	r3, [r3, #28]
 8001f06:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001f0a:	60bb      	str	r3, [r7, #8]
 8001f0c:	68bb      	ldr	r3, [r7, #8]
 8001f0e:	2301      	movs	r3, #1
 8001f10:	75fb      	strb	r3, [r7, #23]
 8001f12:	4b8e      	ldr	r3, [pc, #568]	; (800214c <HAL_RCC_OscConfig+0x4f8>)
 8001f14:	681b      	ldr	r3, [r3, #0]
 8001f16:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001f1a:	2b00      	cmp	r3, #0
 8001f1c:	d118      	bne.n	8001f50 <HAL_RCC_OscConfig+0x2fc>
 8001f1e:	4b8b      	ldr	r3, [pc, #556]	; (800214c <HAL_RCC_OscConfig+0x4f8>)
 8001f20:	681b      	ldr	r3, [r3, #0]
 8001f22:	4a8a      	ldr	r2, [pc, #552]	; (800214c <HAL_RCC_OscConfig+0x4f8>)
 8001f24:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001f28:	6013      	str	r3, [r2, #0]
 8001f2a:	f7ff fbf9 	bl	8001720 <HAL_GetTick>
 8001f2e:	6138      	str	r0, [r7, #16]
 8001f30:	e008      	b.n	8001f44 <HAL_RCC_OscConfig+0x2f0>
 8001f32:	f7ff fbf5 	bl	8001720 <HAL_GetTick>
 8001f36:	4602      	mov	r2, r0
 8001f38:	693b      	ldr	r3, [r7, #16]
 8001f3a:	1ad3      	subs	r3, r2, r3
 8001f3c:	2b64      	cmp	r3, #100	; 0x64
 8001f3e:	d901      	bls.n	8001f44 <HAL_RCC_OscConfig+0x2f0>
 8001f40:	2303      	movs	r3, #3
 8001f42:	e0fd      	b.n	8002140 <HAL_RCC_OscConfig+0x4ec>
 8001f44:	4b81      	ldr	r3, [pc, #516]	; (800214c <HAL_RCC_OscConfig+0x4f8>)
 8001f46:	681b      	ldr	r3, [r3, #0]
 8001f48:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001f4c:	2b00      	cmp	r3, #0
 8001f4e:	d0f0      	beq.n	8001f32 <HAL_RCC_OscConfig+0x2de>
 8001f50:	687b      	ldr	r3, [r7, #4]
 8001f52:	68db      	ldr	r3, [r3, #12]
 8001f54:	2b01      	cmp	r3, #1
 8001f56:	d106      	bne.n	8001f66 <HAL_RCC_OscConfig+0x312>
 8001f58:	4b7b      	ldr	r3, [pc, #492]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8001f5a:	6a1b      	ldr	r3, [r3, #32]
 8001f5c:	4a7a      	ldr	r2, [pc, #488]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8001f5e:	f043 0301 	orr.w	r3, r3, #1
 8001f62:	6213      	str	r3, [r2, #32]
 8001f64:	e02d      	b.n	8001fc2 <HAL_RCC_OscConfig+0x36e>
 8001f66:	687b      	ldr	r3, [r7, #4]
 8001f68:	68db      	ldr	r3, [r3, #12]
 8001f6a:	2b00      	cmp	r3, #0
 8001f6c:	d10c      	bne.n	8001f88 <HAL_RCC_OscConfig+0x334>
 8001f6e:	4b76      	ldr	r3, [pc, #472]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8001f70:	6a1b      	ldr	r3, [r3, #32]
 8001f72:	4a75      	ldr	r2, [pc, #468]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8001f74:	f023 0301 	bic.w	r3, r3, #1
 8001f78:	6213      	str	r3, [r2, #32]
 8001f7a:	4b73      	ldr	r3, [pc, #460]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8001f7c:	6a1b      	ldr	r3, [r3, #32]
 8001f7e:	4a72      	ldr	r2, [pc, #456]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8001f80:	f023 0304 	bic.w	r3, r3, #4
 8001f84:	6213      	str	r3, [r2, #32]
 8001f86:	e01c      	b.n	8001fc2 <HAL_RCC_OscConfig+0x36e>
 8001f88:	687b      	ldr	r3, [r7, #4]
 8001f8a:	68db      	ldr	r3, [r3, #12]
 8001f8c:	2b05      	cmp	r3, #5
 8001f8e:	d10c      	bne.n	8001faa <HAL_RCC_OscConfig+0x356>
 8001f90:	4b6d      	ldr	r3, [pc, #436]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8001f92:	6a1b      	ldr	r3, [r3, #32]
 8001f94:	4a6c      	ldr	r2, [pc, #432]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8001f96:	f043 0304 	orr.w	r3, r3, #4
 8001f9a:	6213      	str	r3, [r2, #32]
 8001f9c:	4b6a      	ldr	r3, [pc, #424]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8001f9e:	6a1b      	ldr	r3, [r3, #32]
 8001fa0:	4a69      	ldr	r2, [pc, #420]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8001fa2:	f043 0301 	orr.w	r3, r3, #1
 8001fa6:	6213      	str	r3, [r2, #32]
 8001fa8:	e00b      	b.n	8001fc2 <HAL_RCC_OscConfig+0x36e>
 8001faa:	4b67      	ldr	r3, [pc, #412]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8001fac:	6a1b      	ldr	r3, [r3, #32]
 8001fae:	4a66      	ldr	r2, [pc, #408]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8001fb0:	f023 0301 	bic.w	r3, r3, #1
 8001fb4:	6213      	str	r3, [r2, #32]
 8001fb6:	4b64      	ldr	r3, [pc, #400]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8001fb8:	6a1b      	ldr	r3, [r3, #32]
 8001fba:	4a63      	ldr	r2, [pc, #396]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8001fbc:	f023 0304 	bic.w	r3, r3, #4
 8001fc0:	6213      	str	r3, [r2, #32]
 8001fc2:	687b      	ldr	r3, [r7, #4]
 8001fc4:	68db      	ldr	r3, [r3, #12]
 8001fc6:	2b00      	cmp	r3, #0
 8001fc8:	d015      	beq.n	8001ff6 <HAL_RCC_OscConfig+0x3a2>
 8001fca:	f7ff fba9 	bl	8001720 <HAL_GetTick>
 8001fce:	6138      	str	r0, [r7, #16]
 8001fd0:	e00a      	b.n	8001fe8 <HAL_RCC_OscConfig+0x394>
 8001fd2:	f7ff fba5 	bl	8001720 <HAL_GetTick>
 8001fd6:	4602      	mov	r2, r0
 8001fd8:	693b      	ldr	r3, [r7, #16]
 8001fda:	1ad3      	subs	r3, r2, r3
 8001fdc:	f241 3288 	movw	r2, #5000	; 0x1388
 8001fe0:	4293      	cmp	r3, r2
 8001fe2:	d901      	bls.n	8001fe8 <HAL_RCC_OscConfig+0x394>
 8001fe4:	2303      	movs	r3, #3
 8001fe6:	e0ab      	b.n	8002140 <HAL_RCC_OscConfig+0x4ec>
 8001fe8:	4b57      	ldr	r3, [pc, #348]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8001fea:	6a1b      	ldr	r3, [r3, #32]
 8001fec:	f003 0302 	and.w	r3, r3, #2
 8001ff0:	2b00      	cmp	r3, #0
 8001ff2:	d0ee      	beq.n	8001fd2 <HAL_RCC_OscConfig+0x37e>
 8001ff4:	e014      	b.n	8002020 <HAL_RCC_OscConfig+0x3cc>
 8001ff6:	f7ff fb93 	bl	8001720 <HAL_GetTick>
 8001ffa:	6138      	str	r0, [r7, #16]
 8001ffc:	e00a      	b.n	8002014 <HAL_RCC_OscConfig+0x3c0>
 8001ffe:	f7ff fb8f 	bl	8001720 <HAL_GetTick>
 8002002:	4602      	mov	r2, r0
 8002004:	693b      	ldr	r3, [r7, #16]
 8002006:	1ad3      	subs	r3, r2, r3
 8002008:	f241 3288 	movw	r2, #5000	; 0x1388
 800200c:	4293      	cmp	r3, r2
 800200e:	d901      	bls.n	8002014 <HAL_RCC_OscConfig+0x3c0>
 8002010:	2303      	movs	r3, #3
 8002012:	e095      	b.n	8002140 <HAL_RCC_OscConfig+0x4ec>
 8002014:	4b4c      	ldr	r3, [pc, #304]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8002016:	6a1b      	ldr	r3, [r3, #32]
 8002018:	f003 0302 	and.w	r3, r3, #2
 800201c:	2b00      	cmp	r3, #0
 800201e:	d1ee      	bne.n	8001ffe <HAL_RCC_OscConfig+0x3aa>
 8002020:	7dfb      	ldrb	r3, [r7, #23]
 8002022:	2b01      	cmp	r3, #1
 8002024:	d105      	bne.n	8002032 <HAL_RCC_OscConfig+0x3de>
 8002026:	4b48      	ldr	r3, [pc, #288]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8002028:	69db      	ldr	r3, [r3, #28]
 800202a:	4a47      	ldr	r2, [pc, #284]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 800202c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002030:	61d3      	str	r3, [r2, #28]
 8002032:	687b      	ldr	r3, [r7, #4]
 8002034:	69db      	ldr	r3, [r3, #28]
 8002036:	2b00      	cmp	r3, #0
 8002038:	f000 8081 	beq.w	800213e <HAL_RCC_OscConfig+0x4ea>
 800203c:	4b42      	ldr	r3, [pc, #264]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 800203e:	685b      	ldr	r3, [r3, #4]
 8002040:	f003 030c 	and.w	r3, r3, #12
 8002044:	2b08      	cmp	r3, #8
 8002046:	d061      	beq.n	800210c <HAL_RCC_OscConfig+0x4b8>
 8002048:	687b      	ldr	r3, [r7, #4]
 800204a:	69db      	ldr	r3, [r3, #28]
 800204c:	2b02      	cmp	r3, #2
 800204e:	d146      	bne.n	80020de <HAL_RCC_OscConfig+0x48a>
 8002050:	4b3f      	ldr	r3, [pc, #252]	; (8002150 <HAL_RCC_OscConfig+0x4fc>)
 8002052:	2200      	movs	r2, #0
 8002054:	601a      	str	r2, [r3, #0]
 8002056:	f7ff fb63 	bl	8001720 <HAL_GetTick>
 800205a:	6138      	str	r0, [r7, #16]
 800205c:	e008      	b.n	8002070 <HAL_RCC_OscConfig+0x41c>
 800205e:	f7ff fb5f 	bl	8001720 <HAL_GetTick>
 8002062:	4602      	mov	r2, r0
 8002064:	693b      	ldr	r3, [r7, #16]
 8002066:	1ad3      	subs	r3, r2, r3
 8002068:	2b02      	cmp	r3, #2
 800206a:	d901      	bls.n	8002070 <HAL_RCC_OscConfig+0x41c>
 800206c:	2303      	movs	r3, #3
 800206e:	e067      	b.n	8002140 <HAL_RCC_OscConfig+0x4ec>
 8002070:	4b35      	ldr	r3, [pc, #212]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8002072:	681b      	ldr	r3, [r3, #0]
 8002074:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002078:	2b00      	cmp	r3, #0
 800207a:	d1f0      	bne.n	800205e <HAL_RCC_OscConfig+0x40a>
 800207c:	687b      	ldr	r3, [r7, #4]
 800207e:	6a1b      	ldr	r3, [r3, #32]
 8002080:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002084:	d108      	bne.n	8002098 <HAL_RCC_OscConfig+0x444>
 8002086:	4b30      	ldr	r3, [pc, #192]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8002088:	685b      	ldr	r3, [r3, #4]
 800208a:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 800208e:	687b      	ldr	r3, [r7, #4]
 8002090:	689b      	ldr	r3, [r3, #8]
 8002092:	492d      	ldr	r1, [pc, #180]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8002094:	4313      	orrs	r3, r2
 8002096:	604b      	str	r3, [r1, #4]
 8002098:	4b2b      	ldr	r3, [pc, #172]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 800209a:	685b      	ldr	r3, [r3, #4]
 800209c:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 80020a0:	687b      	ldr	r3, [r7, #4]
 80020a2:	6a19      	ldr	r1, [r3, #32]
 80020a4:	687b      	ldr	r3, [r7, #4]
 80020a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020a8:	430b      	orrs	r3, r1
 80020aa:	4927      	ldr	r1, [pc, #156]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 80020ac:	4313      	orrs	r3, r2
 80020ae:	604b      	str	r3, [r1, #4]
 80020b0:	4b27      	ldr	r3, [pc, #156]	; (8002150 <HAL_RCC_OscConfig+0x4fc>)
 80020b2:	2201      	movs	r2, #1
 80020b4:	601a      	str	r2, [r3, #0]
 80020b6:	f7ff fb33 	bl	8001720 <HAL_GetTick>
 80020ba:	6138      	str	r0, [r7, #16]
 80020bc:	e008      	b.n	80020d0 <HAL_RCC_OscConfig+0x47c>
 80020be:	f7ff fb2f 	bl	8001720 <HAL_GetTick>
 80020c2:	4602      	mov	r2, r0
 80020c4:	693b      	ldr	r3, [r7, #16]
 80020c6:	1ad3      	subs	r3, r2, r3
 80020c8:	2b02      	cmp	r3, #2
 80020ca:	d901      	bls.n	80020d0 <HAL_RCC_OscConfig+0x47c>
 80020cc:	2303      	movs	r3, #3
 80020ce:	e037      	b.n	8002140 <HAL_RCC_OscConfig+0x4ec>
 80020d0:	4b1d      	ldr	r3, [pc, #116]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 80020d2:	681b      	ldr	r3, [r3, #0]
 80020d4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80020d8:	2b00      	cmp	r3, #0
 80020da:	d0f0      	beq.n	80020be <HAL_RCC_OscConfig+0x46a>
 80020dc:	e02f      	b.n	800213e <HAL_RCC_OscConfig+0x4ea>
 80020de:	4b1c      	ldr	r3, [pc, #112]	; (8002150 <HAL_RCC_OscConfig+0x4fc>)
 80020e0:	2200      	movs	r2, #0
 80020e2:	601a      	str	r2, [r3, #0]
 80020e4:	f7ff fb1c 	bl	8001720 <HAL_GetTick>
 80020e8:	6138      	str	r0, [r7, #16]
 80020ea:	e008      	b.n	80020fe <HAL_RCC_OscConfig+0x4aa>
 80020ec:	f7ff fb18 	bl	8001720 <HAL_GetTick>
 80020f0:	4602      	mov	r2, r0
 80020f2:	693b      	ldr	r3, [r7, #16]
 80020f4:	1ad3      	subs	r3, r2, r3
 80020f6:	2b02      	cmp	r3, #2
 80020f8:	d901      	bls.n	80020fe <HAL_RCC_OscConfig+0x4aa>
 80020fa:	2303      	movs	r3, #3
 80020fc:	e020      	b.n	8002140 <HAL_RCC_OscConfig+0x4ec>
 80020fe:	4b12      	ldr	r3, [pc, #72]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 8002100:	681b      	ldr	r3, [r3, #0]
 8002102:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002106:	2b00      	cmp	r3, #0
 8002108:	d1f0      	bne.n	80020ec <HAL_RCC_OscConfig+0x498>
 800210a:	e018      	b.n	800213e <HAL_RCC_OscConfig+0x4ea>
 800210c:	687b      	ldr	r3, [r7, #4]
 800210e:	69db      	ldr	r3, [r3, #28]
 8002110:	2b01      	cmp	r3, #1
 8002112:	d101      	bne.n	8002118 <HAL_RCC_OscConfig+0x4c4>
 8002114:	2301      	movs	r3, #1
 8002116:	e013      	b.n	8002140 <HAL_RCC_OscConfig+0x4ec>
 8002118:	4b0b      	ldr	r3, [pc, #44]	; (8002148 <HAL_RCC_OscConfig+0x4f4>)
 800211a:	685b      	ldr	r3, [r3, #4]
 800211c:	60fb      	str	r3, [r7, #12]
 800211e:	68fb      	ldr	r3, [r7, #12]
 8002120:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	6a1b      	ldr	r3, [r3, #32]
 8002128:	429a      	cmp	r2, r3
 800212a:	d106      	bne.n	800213a <HAL_RCC_OscConfig+0x4e6>
 800212c:	68fb      	ldr	r3, [r7, #12]
 800212e:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8002132:	687b      	ldr	r3, [r7, #4]
 8002134:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002136:	429a      	cmp	r2, r3
 8002138:	d001      	beq.n	800213e <HAL_RCC_OscConfig+0x4ea>
 800213a:	2301      	movs	r3, #1
 800213c:	e000      	b.n	8002140 <HAL_RCC_OscConfig+0x4ec>
 800213e:	2300      	movs	r3, #0
 8002140:	4618      	mov	r0, r3
 8002142:	3718      	adds	r7, #24
 8002144:	46bd      	mov	sp, r7
 8002146:	bd80      	pop	{r7, pc}
 8002148:	40021000 	.word	0x40021000
 800214c:	40007000 	.word	0x40007000
 8002150:	42420060 	.word	0x42420060

08002154 <HAL_RCC_ClockConfig>:
 8002154:	b580      	push	{r7, lr}
 8002156:	b084      	sub	sp, #16
 8002158:	af00      	add	r7, sp, #0
 800215a:	6078      	str	r0, [r7, #4]
 800215c:	6039      	str	r1, [r7, #0]
 800215e:	687b      	ldr	r3, [r7, #4]
 8002160:	2b00      	cmp	r3, #0
 8002162:	d101      	bne.n	8002168 <HAL_RCC_ClockConfig+0x14>
 8002164:	2301      	movs	r3, #1
 8002166:	e0d0      	b.n	800230a <HAL_RCC_ClockConfig+0x1b6>
 8002168:	4b6a      	ldr	r3, [pc, #424]	; (8002314 <HAL_RCC_ClockConfig+0x1c0>)
 800216a:	681b      	ldr	r3, [r3, #0]
 800216c:	f003 0307 	and.w	r3, r3, #7
 8002170:	683a      	ldr	r2, [r7, #0]
 8002172:	429a      	cmp	r2, r3
 8002174:	d910      	bls.n	8002198 <HAL_RCC_ClockConfig+0x44>
 8002176:	4b67      	ldr	r3, [pc, #412]	; (8002314 <HAL_RCC_ClockConfig+0x1c0>)
 8002178:	681b      	ldr	r3, [r3, #0]
 800217a:	f023 0207 	bic.w	r2, r3, #7
 800217e:	4965      	ldr	r1, [pc, #404]	; (8002314 <HAL_RCC_ClockConfig+0x1c0>)
 8002180:	683b      	ldr	r3, [r7, #0]
 8002182:	4313      	orrs	r3, r2
 8002184:	600b      	str	r3, [r1, #0]
 8002186:	4b63      	ldr	r3, [pc, #396]	; (8002314 <HAL_RCC_ClockConfig+0x1c0>)
 8002188:	681b      	ldr	r3, [r3, #0]
 800218a:	f003 0307 	and.w	r3, r3, #7
 800218e:	683a      	ldr	r2, [r7, #0]
 8002190:	429a      	cmp	r2, r3
 8002192:	d001      	beq.n	8002198 <HAL_RCC_ClockConfig+0x44>
 8002194:	2301      	movs	r3, #1
 8002196:	e0b8      	b.n	800230a <HAL_RCC_ClockConfig+0x1b6>
 8002198:	687b      	ldr	r3, [r7, #4]
 800219a:	681b      	ldr	r3, [r3, #0]
 800219c:	f003 0302 	and.w	r3, r3, #2
 80021a0:	2b00      	cmp	r3, #0
 80021a2:	d020      	beq.n	80021e6 <HAL_RCC_ClockConfig+0x92>
 80021a4:	687b      	ldr	r3, [r7, #4]
 80021a6:	681b      	ldr	r3, [r3, #0]
 80021a8:	f003 0304 	and.w	r3, r3, #4
 80021ac:	2b00      	cmp	r3, #0
 80021ae:	d005      	beq.n	80021bc <HAL_RCC_ClockConfig+0x68>
 80021b0:	4b59      	ldr	r3, [pc, #356]	; (8002318 <HAL_RCC_ClockConfig+0x1c4>)
 80021b2:	685b      	ldr	r3, [r3, #4]
 80021b4:	4a58      	ldr	r2, [pc, #352]	; (8002318 <HAL_RCC_ClockConfig+0x1c4>)
 80021b6:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80021ba:	6053      	str	r3, [r2, #4]
 80021bc:	687b      	ldr	r3, [r7, #4]
 80021be:	681b      	ldr	r3, [r3, #0]
 80021c0:	f003 0308 	and.w	r3, r3, #8
 80021c4:	2b00      	cmp	r3, #0
 80021c6:	d005      	beq.n	80021d4 <HAL_RCC_ClockConfig+0x80>
 80021c8:	4b53      	ldr	r3, [pc, #332]	; (8002318 <HAL_RCC_ClockConfig+0x1c4>)
 80021ca:	685b      	ldr	r3, [r3, #4]
 80021cc:	4a52      	ldr	r2, [pc, #328]	; (8002318 <HAL_RCC_ClockConfig+0x1c4>)
 80021ce:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 80021d2:	6053      	str	r3, [r2, #4]
 80021d4:	4b50      	ldr	r3, [pc, #320]	; (8002318 <HAL_RCC_ClockConfig+0x1c4>)
 80021d6:	685b      	ldr	r3, [r3, #4]
 80021d8:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80021dc:	687b      	ldr	r3, [r7, #4]
 80021de:	689b      	ldr	r3, [r3, #8]
 80021e0:	494d      	ldr	r1, [pc, #308]	; (8002318 <HAL_RCC_ClockConfig+0x1c4>)
 80021e2:	4313      	orrs	r3, r2
 80021e4:	604b      	str	r3, [r1, #4]
 80021e6:	687b      	ldr	r3, [r7, #4]
 80021e8:	681b      	ldr	r3, [r3, #0]
 80021ea:	f003 0301 	and.w	r3, r3, #1
 80021ee:	2b00      	cmp	r3, #0
 80021f0:	d040      	beq.n	8002274 <HAL_RCC_ClockConfig+0x120>
 80021f2:	687b      	ldr	r3, [r7, #4]
 80021f4:	685b      	ldr	r3, [r3, #4]
 80021f6:	2b01      	cmp	r3, #1
 80021f8:	d107      	bne.n	800220a <HAL_RCC_ClockConfig+0xb6>
 80021fa:	4b47      	ldr	r3, [pc, #284]	; (8002318 <HAL_RCC_ClockConfig+0x1c4>)
 80021fc:	681b      	ldr	r3, [r3, #0]
 80021fe:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002202:	2b00      	cmp	r3, #0
 8002204:	d115      	bne.n	8002232 <HAL_RCC_ClockConfig+0xde>
 8002206:	2301      	movs	r3, #1
 8002208:	e07f      	b.n	800230a <HAL_RCC_ClockConfig+0x1b6>
 800220a:	687b      	ldr	r3, [r7, #4]
 800220c:	685b      	ldr	r3, [r3, #4]
 800220e:	2b02      	cmp	r3, #2
 8002210:	d107      	bne.n	8002222 <HAL_RCC_ClockConfig+0xce>
 8002212:	4b41      	ldr	r3, [pc, #260]	; (8002318 <HAL_RCC_ClockConfig+0x1c4>)
 8002214:	681b      	ldr	r3, [r3, #0]
 8002216:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800221a:	2b00      	cmp	r3, #0
 800221c:	d109      	bne.n	8002232 <HAL_RCC_ClockConfig+0xde>
 800221e:	2301      	movs	r3, #1
 8002220:	e073      	b.n	800230a <HAL_RCC_ClockConfig+0x1b6>
 8002222:	4b3d      	ldr	r3, [pc, #244]	; (8002318 <HAL_RCC_ClockConfig+0x1c4>)
 8002224:	681b      	ldr	r3, [r3, #0]
 8002226:	f003 0302 	and.w	r3, r3, #2
 800222a:	2b00      	cmp	r3, #0
 800222c:	d101      	bne.n	8002232 <HAL_RCC_ClockConfig+0xde>
 800222e:	2301      	movs	r3, #1
 8002230:	e06b      	b.n	800230a <HAL_RCC_ClockConfig+0x1b6>
 8002232:	4b39      	ldr	r3, [pc, #228]	; (8002318 <HAL_RCC_ClockConfig+0x1c4>)
 8002234:	685b      	ldr	r3, [r3, #4]
 8002236:	f023 0203 	bic.w	r2, r3, #3
 800223a:	687b      	ldr	r3, [r7, #4]
 800223c:	685b      	ldr	r3, [r3, #4]
 800223e:	4936      	ldr	r1, [pc, #216]	; (8002318 <HAL_RCC_ClockConfig+0x1c4>)
 8002240:	4313      	orrs	r3, r2
 8002242:	604b      	str	r3, [r1, #4]
 8002244:	f7ff fa6c 	bl	8001720 <HAL_GetTick>
 8002248:	60f8      	str	r0, [r7, #12]
 800224a:	e00a      	b.n	8002262 <HAL_RCC_ClockConfig+0x10e>
 800224c:	f7ff fa68 	bl	8001720 <HAL_GetTick>
 8002250:	4602      	mov	r2, r0
 8002252:	68fb      	ldr	r3, [r7, #12]
 8002254:	1ad3      	subs	r3, r2, r3
 8002256:	f241 3288 	movw	r2, #5000	; 0x1388
 800225a:	4293      	cmp	r3, r2
 800225c:	d901      	bls.n	8002262 <HAL_RCC_ClockConfig+0x10e>
 800225e:	2303      	movs	r3, #3
 8002260:	e053      	b.n	800230a <HAL_RCC_ClockConfig+0x1b6>
 8002262:	4b2d      	ldr	r3, [pc, #180]	; (8002318 <HAL_RCC_ClockConfig+0x1c4>)
 8002264:	685b      	ldr	r3, [r3, #4]
 8002266:	f003 020c 	and.w	r2, r3, #12
 800226a:	687b      	ldr	r3, [r7, #4]
 800226c:	685b      	ldr	r3, [r3, #4]
 800226e:	009b      	lsls	r3, r3, #2
 8002270:	429a      	cmp	r2, r3
 8002272:	d1eb      	bne.n	800224c <HAL_RCC_ClockConfig+0xf8>
 8002274:	4b27      	ldr	r3, [pc, #156]	; (8002314 <HAL_RCC_ClockConfig+0x1c0>)
 8002276:	681b      	ldr	r3, [r3, #0]
 8002278:	f003 0307 	and.w	r3, r3, #7
 800227c:	683a      	ldr	r2, [r7, #0]
 800227e:	429a      	cmp	r2, r3
 8002280:	d210      	bcs.n	80022a4 <HAL_RCC_ClockConfig+0x150>
 8002282:	4b24      	ldr	r3, [pc, #144]	; (8002314 <HAL_RCC_ClockConfig+0x1c0>)
 8002284:	681b      	ldr	r3, [r3, #0]
 8002286:	f023 0207 	bic.w	r2, r3, #7
 800228a:	4922      	ldr	r1, [pc, #136]	; (8002314 <HAL_RCC_ClockConfig+0x1c0>)
 800228c:	683b      	ldr	r3, [r7, #0]
 800228e:	4313      	orrs	r3, r2
 8002290:	600b      	str	r3, [r1, #0]
 8002292:	4b20      	ldr	r3, [pc, #128]	; (8002314 <HAL_RCC_ClockConfig+0x1c0>)
 8002294:	681b      	ldr	r3, [r3, #0]
 8002296:	f003 0307 	and.w	r3, r3, #7
 800229a:	683a      	ldr	r2, [r7, #0]
 800229c:	429a      	cmp	r2, r3
 800229e:	d001      	beq.n	80022a4 <HAL_RCC_ClockConfig+0x150>
 80022a0:	2301      	movs	r3, #1
 80022a2:	e032      	b.n	800230a <HAL_RCC_ClockConfig+0x1b6>
 80022a4:	687b      	ldr	r3, [r7, #4]
 80022a6:	681b      	ldr	r3, [r3, #0]
 80022a8:	f003 0304 	and.w	r3, r3, #4
 80022ac:	2b00      	cmp	r3, #0
 80022ae:	d008      	beq.n	80022c2 <HAL_RCC_ClockConfig+0x16e>
 80022b0:	4b19      	ldr	r3, [pc, #100]	; (8002318 <HAL_RCC_ClockConfig+0x1c4>)
 80022b2:	685b      	ldr	r3, [r3, #4]
 80022b4:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80022b8:	687b      	ldr	r3, [r7, #4]
 80022ba:	68db      	ldr	r3, [r3, #12]
 80022bc:	4916      	ldr	r1, [pc, #88]	; (8002318 <HAL_RCC_ClockConfig+0x1c4>)
 80022be:	4313      	orrs	r3, r2
 80022c0:	604b      	str	r3, [r1, #4]
 80022c2:	687b      	ldr	r3, [r7, #4]
 80022c4:	681b      	ldr	r3, [r3, #0]
 80022c6:	f003 0308 	and.w	r3, r3, #8
 80022ca:	2b00      	cmp	r3, #0
 80022cc:	d009      	beq.n	80022e2 <HAL_RCC_ClockConfig+0x18e>
 80022ce:	4b12      	ldr	r3, [pc, #72]	; (8002318 <HAL_RCC_ClockConfig+0x1c4>)
 80022d0:	685b      	ldr	r3, [r3, #4]
 80022d2:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80022d6:	687b      	ldr	r3, [r7, #4]
 80022d8:	691b      	ldr	r3, [r3, #16]
 80022da:	00db      	lsls	r3, r3, #3
 80022dc:	490e      	ldr	r1, [pc, #56]	; (8002318 <HAL_RCC_ClockConfig+0x1c4>)
 80022de:	4313      	orrs	r3, r2
 80022e0:	604b      	str	r3, [r1, #4]
 80022e2:	f000 f821 	bl	8002328 <HAL_RCC_GetSysClockFreq>
 80022e6:	4601      	mov	r1, r0
 80022e8:	4b0b      	ldr	r3, [pc, #44]	; (8002318 <HAL_RCC_ClockConfig+0x1c4>)
 80022ea:	685b      	ldr	r3, [r3, #4]
 80022ec:	091b      	lsrs	r3, r3, #4
 80022ee:	f003 030f 	and.w	r3, r3, #15
 80022f2:	4a0a      	ldr	r2, [pc, #40]	; (800231c <HAL_RCC_ClockConfig+0x1c8>)
 80022f4:	5cd3      	ldrb	r3, [r2, r3]
 80022f6:	fa21 f303 	lsr.w	r3, r1, r3
 80022fa:	4a09      	ldr	r2, [pc, #36]	; (8002320 <HAL_RCC_ClockConfig+0x1cc>)
 80022fc:	6013      	str	r3, [r2, #0]
 80022fe:	4b09      	ldr	r3, [pc, #36]	; (8002324 <HAL_RCC_ClockConfig+0x1d0>)
 8002300:	681b      	ldr	r3, [r3, #0]
 8002302:	4618      	mov	r0, r3
 8002304:	f7ff f9ca 	bl	800169c <HAL_InitTick>
 8002308:	2300      	movs	r3, #0
 800230a:	4618      	mov	r0, r3
 800230c:	3710      	adds	r7, #16
 800230e:	46bd      	mov	sp, r7
 8002310:	bd80      	pop	{r7, pc}
 8002312:	bf00      	nop
 8002314:	40022000 	.word	0x40022000
 8002318:	40021000 	.word	0x40021000
 800231c:	08005a68 	.word	0x08005a68
 8002320:	20000020 	.word	0x20000020
 8002324:	20000024 	.word	0x20000024

08002328 <HAL_RCC_GetSysClockFreq>:
 8002328:	b490      	push	{r4, r7}
 800232a:	b08a      	sub	sp, #40	; 0x28
 800232c:	af00      	add	r7, sp, #0
 800232e:	4b2a      	ldr	r3, [pc, #168]	; (80023d8 <HAL_RCC_GetSysClockFreq+0xb0>)
 8002330:	1d3c      	adds	r4, r7, #4
 8002332:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002334:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8002338:	4b28      	ldr	r3, [pc, #160]	; (80023dc <HAL_RCC_GetSysClockFreq+0xb4>)
 800233a:	881b      	ldrh	r3, [r3, #0]
 800233c:	803b      	strh	r3, [r7, #0]
 800233e:	2300      	movs	r3, #0
 8002340:	61fb      	str	r3, [r7, #28]
 8002342:	2300      	movs	r3, #0
 8002344:	61bb      	str	r3, [r7, #24]
 8002346:	2300      	movs	r3, #0
 8002348:	627b      	str	r3, [r7, #36]	; 0x24
 800234a:	2300      	movs	r3, #0
 800234c:	617b      	str	r3, [r7, #20]
 800234e:	2300      	movs	r3, #0
 8002350:	623b      	str	r3, [r7, #32]
 8002352:	4b23      	ldr	r3, [pc, #140]	; (80023e0 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002354:	685b      	ldr	r3, [r3, #4]
 8002356:	61fb      	str	r3, [r7, #28]
 8002358:	69fb      	ldr	r3, [r7, #28]
 800235a:	f003 030c 	and.w	r3, r3, #12
 800235e:	2b04      	cmp	r3, #4
 8002360:	d002      	beq.n	8002368 <HAL_RCC_GetSysClockFreq+0x40>
 8002362:	2b08      	cmp	r3, #8
 8002364:	d003      	beq.n	800236e <HAL_RCC_GetSysClockFreq+0x46>
 8002366:	e02d      	b.n	80023c4 <HAL_RCC_GetSysClockFreq+0x9c>
 8002368:	4b1e      	ldr	r3, [pc, #120]	; (80023e4 <HAL_RCC_GetSysClockFreq+0xbc>)
 800236a:	623b      	str	r3, [r7, #32]
 800236c:	e02d      	b.n	80023ca <HAL_RCC_GetSysClockFreq+0xa2>
 800236e:	69fb      	ldr	r3, [r7, #28]
 8002370:	0c9b      	lsrs	r3, r3, #18
 8002372:	f003 030f 	and.w	r3, r3, #15
 8002376:	f107 0228 	add.w	r2, r7, #40	; 0x28
 800237a:	4413      	add	r3, r2
 800237c:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8002380:	617b      	str	r3, [r7, #20]
 8002382:	69fb      	ldr	r3, [r7, #28]
 8002384:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002388:	2b00      	cmp	r3, #0
 800238a:	d013      	beq.n	80023b4 <HAL_RCC_GetSysClockFreq+0x8c>
 800238c:	4b14      	ldr	r3, [pc, #80]	; (80023e0 <HAL_RCC_GetSysClockFreq+0xb8>)
 800238e:	685b      	ldr	r3, [r3, #4]
 8002390:	0c5b      	lsrs	r3, r3, #17
 8002392:	f003 0301 	and.w	r3, r3, #1
 8002396:	f107 0228 	add.w	r2, r7, #40	; 0x28
 800239a:	4413      	add	r3, r2
 800239c:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 80023a0:	61bb      	str	r3, [r7, #24]
 80023a2:	697b      	ldr	r3, [r7, #20]
 80023a4:	4a0f      	ldr	r2, [pc, #60]	; (80023e4 <HAL_RCC_GetSysClockFreq+0xbc>)
 80023a6:	fb02 f203 	mul.w	r2, r2, r3
 80023aa:	69bb      	ldr	r3, [r7, #24]
 80023ac:	fbb2 f3f3 	udiv	r3, r2, r3
 80023b0:	627b      	str	r3, [r7, #36]	; 0x24
 80023b2:	e004      	b.n	80023be <HAL_RCC_GetSysClockFreq+0x96>
 80023b4:	697b      	ldr	r3, [r7, #20]
 80023b6:	4a0c      	ldr	r2, [pc, #48]	; (80023e8 <HAL_RCC_GetSysClockFreq+0xc0>)
 80023b8:	fb02 f303 	mul.w	r3, r2, r3
 80023bc:	627b      	str	r3, [r7, #36]	; 0x24
 80023be:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80023c0:	623b      	str	r3, [r7, #32]
 80023c2:	e002      	b.n	80023ca <HAL_RCC_GetSysClockFreq+0xa2>
 80023c4:	4b07      	ldr	r3, [pc, #28]	; (80023e4 <HAL_RCC_GetSysClockFreq+0xbc>)
 80023c6:	623b      	str	r3, [r7, #32]
 80023c8:	bf00      	nop
 80023ca:	6a3b      	ldr	r3, [r7, #32]
 80023cc:	4618      	mov	r0, r3
 80023ce:	3728      	adds	r7, #40	; 0x28
 80023d0:	46bd      	mov	sp, r7
 80023d2:	bc90      	pop	{r4, r7}
 80023d4:	4770      	bx	lr
 80023d6:	bf00      	nop
 80023d8:	080031c8 	.word	0x080031c8
 80023dc:	080031d8 	.word	0x080031d8
 80023e0:	40021000 	.word	0x40021000
 80023e4:	007a1200 	.word	0x007a1200
 80023e8:	003d0900 	.word	0x003d0900

080023ec <RCC_Delay>:
 80023ec:	b480      	push	{r7}
 80023ee:	b085      	sub	sp, #20
 80023f0:	af00      	add	r7, sp, #0
 80023f2:	6078      	str	r0, [r7, #4]
 80023f4:	4b0a      	ldr	r3, [pc, #40]	; (8002420 <RCC_Delay+0x34>)
 80023f6:	681b      	ldr	r3, [r3, #0]
 80023f8:	4a0a      	ldr	r2, [pc, #40]	; (8002424 <RCC_Delay+0x38>)
 80023fa:	fba2 2303 	umull	r2, r3, r2, r3
 80023fe:	0a5b      	lsrs	r3, r3, #9
 8002400:	687a      	ldr	r2, [r7, #4]
 8002402:	fb02 f303 	mul.w	r3, r2, r3
 8002406:	60fb      	str	r3, [r7, #12]
 8002408:	bf00      	nop
 800240a:	68fb      	ldr	r3, [r7, #12]
 800240c:	1e5a      	subs	r2, r3, #1
 800240e:	60fa      	str	r2, [r7, #12]
 8002410:	2b00      	cmp	r3, #0
 8002412:	d1f9      	bne.n	8002408 <RCC_Delay+0x1c>
 8002414:	bf00      	nop
 8002416:	3714      	adds	r7, #20
 8002418:	46bd      	mov	sp, r7
 800241a:	bc80      	pop	{r7}
 800241c:	4770      	bx	lr
 800241e:	bf00      	nop
 8002420:	20000020 	.word	0x20000020
 8002424:	10624dd3 	.word	0x10624dd3

08002428 <HAL_SPI_Init>:
 8002428:	b580      	push	{r7, lr}
 800242a:	b082      	sub	sp, #8
 800242c:	af00      	add	r7, sp, #0
 800242e:	6078      	str	r0, [r7, #4]
 8002430:	687b      	ldr	r3, [r7, #4]
 8002432:	2b00      	cmp	r3, #0
 8002434:	d101      	bne.n	800243a <HAL_SPI_Init+0x12>
 8002436:	2301      	movs	r3, #1
 8002438:	e076      	b.n	8002528 <HAL_SPI_Init+0x100>
 800243a:	687b      	ldr	r3, [r7, #4]
 800243c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800243e:	2b00      	cmp	r3, #0
 8002440:	d108      	bne.n	8002454 <HAL_SPI_Init+0x2c>
 8002442:	687b      	ldr	r3, [r7, #4]
 8002444:	685b      	ldr	r3, [r3, #4]
 8002446:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800244a:	d009      	beq.n	8002460 <HAL_SPI_Init+0x38>
 800244c:	687b      	ldr	r3, [r7, #4]
 800244e:	2200      	movs	r2, #0
 8002450:	61da      	str	r2, [r3, #28]
 8002452:	e005      	b.n	8002460 <HAL_SPI_Init+0x38>
 8002454:	687b      	ldr	r3, [r7, #4]
 8002456:	2200      	movs	r2, #0
 8002458:	611a      	str	r2, [r3, #16]
 800245a:	687b      	ldr	r3, [r7, #4]
 800245c:	2200      	movs	r2, #0
 800245e:	615a      	str	r2, [r3, #20]
 8002460:	687b      	ldr	r3, [r7, #4]
 8002462:	2200      	movs	r2, #0
 8002464:	629a      	str	r2, [r3, #40]	; 0x28
 8002466:	687b      	ldr	r3, [r7, #4]
 8002468:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800246c:	b2db      	uxtb	r3, r3
 800246e:	2b00      	cmp	r3, #0
 8002470:	d106      	bne.n	8002480 <HAL_SPI_Init+0x58>
 8002472:	687b      	ldr	r3, [r7, #4]
 8002474:	2200      	movs	r2, #0
 8002476:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800247a:	6878      	ldr	r0, [r7, #4]
 800247c:	f7ff f830 	bl	80014e0 <HAL_SPI_MspInit>
 8002480:	687b      	ldr	r3, [r7, #4]
 8002482:	2202      	movs	r2, #2
 8002484:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002488:	687b      	ldr	r3, [r7, #4]
 800248a:	681b      	ldr	r3, [r3, #0]
 800248c:	681a      	ldr	r2, [r3, #0]
 800248e:	687b      	ldr	r3, [r7, #4]
 8002490:	681b      	ldr	r3, [r3, #0]
 8002492:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002496:	601a      	str	r2, [r3, #0]
 8002498:	687b      	ldr	r3, [r7, #4]
 800249a:	685b      	ldr	r3, [r3, #4]
 800249c:	f403 7282 	and.w	r2, r3, #260	; 0x104
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	689b      	ldr	r3, [r3, #8]
 80024a4:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 80024a8:	431a      	orrs	r2, r3
 80024aa:	687b      	ldr	r3, [r7, #4]
 80024ac:	68db      	ldr	r3, [r3, #12]
 80024ae:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80024b2:	431a      	orrs	r2, r3
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	691b      	ldr	r3, [r3, #16]
 80024b8:	f003 0302 	and.w	r3, r3, #2
 80024bc:	431a      	orrs	r2, r3
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	695b      	ldr	r3, [r3, #20]
 80024c2:	f003 0301 	and.w	r3, r3, #1
 80024c6:	431a      	orrs	r2, r3
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	699b      	ldr	r3, [r3, #24]
 80024cc:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80024d0:	431a      	orrs	r2, r3
 80024d2:	687b      	ldr	r3, [r7, #4]
 80024d4:	69db      	ldr	r3, [r3, #28]
 80024d6:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80024da:	431a      	orrs	r2, r3
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	6a1b      	ldr	r3, [r3, #32]
 80024e0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80024e4:	ea42 0103 	orr.w	r1, r2, r3
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80024ec:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 80024f0:	687b      	ldr	r3, [r7, #4]
 80024f2:	681b      	ldr	r3, [r3, #0]
 80024f4:	430a      	orrs	r2, r1
 80024f6:	601a      	str	r2, [r3, #0]
 80024f8:	687b      	ldr	r3, [r7, #4]
 80024fa:	699b      	ldr	r3, [r3, #24]
 80024fc:	0c1a      	lsrs	r2, r3, #16
 80024fe:	687b      	ldr	r3, [r7, #4]
 8002500:	681b      	ldr	r3, [r3, #0]
 8002502:	f002 0204 	and.w	r2, r2, #4
 8002506:	605a      	str	r2, [r3, #4]
 8002508:	687b      	ldr	r3, [r7, #4]
 800250a:	681b      	ldr	r3, [r3, #0]
 800250c:	69da      	ldr	r2, [r3, #28]
 800250e:	687b      	ldr	r3, [r7, #4]
 8002510:	681b      	ldr	r3, [r3, #0]
 8002512:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002516:	61da      	str	r2, [r3, #28]
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	2200      	movs	r2, #0
 800251c:	655a      	str	r2, [r3, #84]	; 0x54
 800251e:	687b      	ldr	r3, [r7, #4]
 8002520:	2201      	movs	r2, #1
 8002522:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002526:	2300      	movs	r3, #0
 8002528:	4618      	mov	r0, r3
 800252a:	3708      	adds	r7, #8
 800252c:	46bd      	mov	sp, r7
 800252e:	bd80      	pop	{r7, pc}

08002530 <HAL_SPI_Transmit>:
 8002530:	b580      	push	{r7, lr}
 8002532:	b088      	sub	sp, #32
 8002534:	af00      	add	r7, sp, #0
 8002536:	60f8      	str	r0, [r7, #12]
 8002538:	60b9      	str	r1, [r7, #8]
 800253a:	603b      	str	r3, [r7, #0]
 800253c:	4613      	mov	r3, r2
 800253e:	80fb      	strh	r3, [r7, #6]
 8002540:	2300      	movs	r3, #0
 8002542:	77fb      	strb	r3, [r7, #31]
 8002544:	68fb      	ldr	r3, [r7, #12]
 8002546:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 800254a:	2b01      	cmp	r3, #1
 800254c:	d101      	bne.n	8002552 <HAL_SPI_Transmit+0x22>
 800254e:	2302      	movs	r3, #2
 8002550:	e126      	b.n	80027a0 <HAL_SPI_Transmit+0x270>
 8002552:	68fb      	ldr	r3, [r7, #12]
 8002554:	2201      	movs	r2, #1
 8002556:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800255a:	f7ff f8e1 	bl	8001720 <HAL_GetTick>
 800255e:	61b8      	str	r0, [r7, #24]
 8002560:	88fb      	ldrh	r3, [r7, #6]
 8002562:	82fb      	strh	r3, [r7, #22]
 8002564:	68fb      	ldr	r3, [r7, #12]
 8002566:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800256a:	b2db      	uxtb	r3, r3
 800256c:	2b01      	cmp	r3, #1
 800256e:	d002      	beq.n	8002576 <HAL_SPI_Transmit+0x46>
 8002570:	2302      	movs	r3, #2
 8002572:	77fb      	strb	r3, [r7, #31]
 8002574:	e10b      	b.n	800278e <HAL_SPI_Transmit+0x25e>
 8002576:	68bb      	ldr	r3, [r7, #8]
 8002578:	2b00      	cmp	r3, #0
 800257a:	d002      	beq.n	8002582 <HAL_SPI_Transmit+0x52>
 800257c:	88fb      	ldrh	r3, [r7, #6]
 800257e:	2b00      	cmp	r3, #0
 8002580:	d102      	bne.n	8002588 <HAL_SPI_Transmit+0x58>
 8002582:	2301      	movs	r3, #1
 8002584:	77fb      	strb	r3, [r7, #31]
 8002586:	e102      	b.n	800278e <HAL_SPI_Transmit+0x25e>
 8002588:	68fb      	ldr	r3, [r7, #12]
 800258a:	2203      	movs	r2, #3
 800258c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002590:	68fb      	ldr	r3, [r7, #12]
 8002592:	2200      	movs	r2, #0
 8002594:	655a      	str	r2, [r3, #84]	; 0x54
 8002596:	68fb      	ldr	r3, [r7, #12]
 8002598:	68ba      	ldr	r2, [r7, #8]
 800259a:	631a      	str	r2, [r3, #48]	; 0x30
 800259c:	68fb      	ldr	r3, [r7, #12]
 800259e:	88fa      	ldrh	r2, [r7, #6]
 80025a0:	869a      	strh	r2, [r3, #52]	; 0x34
 80025a2:	68fb      	ldr	r3, [r7, #12]
 80025a4:	88fa      	ldrh	r2, [r7, #6]
 80025a6:	86da      	strh	r2, [r3, #54]	; 0x36
 80025a8:	68fb      	ldr	r3, [r7, #12]
 80025aa:	2200      	movs	r2, #0
 80025ac:	639a      	str	r2, [r3, #56]	; 0x38
 80025ae:	68fb      	ldr	r3, [r7, #12]
 80025b0:	2200      	movs	r2, #0
 80025b2:	879a      	strh	r2, [r3, #60]	; 0x3c
 80025b4:	68fb      	ldr	r3, [r7, #12]
 80025b6:	2200      	movs	r2, #0
 80025b8:	87da      	strh	r2, [r3, #62]	; 0x3e
 80025ba:	68fb      	ldr	r3, [r7, #12]
 80025bc:	2200      	movs	r2, #0
 80025be:	645a      	str	r2, [r3, #68]	; 0x44
 80025c0:	68fb      	ldr	r3, [r7, #12]
 80025c2:	2200      	movs	r2, #0
 80025c4:	641a      	str	r2, [r3, #64]	; 0x40
 80025c6:	68fb      	ldr	r3, [r7, #12]
 80025c8:	689b      	ldr	r3, [r3, #8]
 80025ca:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80025ce:	d10f      	bne.n	80025f0 <HAL_SPI_Transmit+0xc0>
 80025d0:	68fb      	ldr	r3, [r7, #12]
 80025d2:	681b      	ldr	r3, [r3, #0]
 80025d4:	681a      	ldr	r2, [r3, #0]
 80025d6:	68fb      	ldr	r3, [r7, #12]
 80025d8:	681b      	ldr	r3, [r3, #0]
 80025da:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80025de:	601a      	str	r2, [r3, #0]
 80025e0:	68fb      	ldr	r3, [r7, #12]
 80025e2:	681b      	ldr	r3, [r3, #0]
 80025e4:	681a      	ldr	r2, [r3, #0]
 80025e6:	68fb      	ldr	r3, [r7, #12]
 80025e8:	681b      	ldr	r3, [r3, #0]
 80025ea:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80025ee:	601a      	str	r2, [r3, #0]
 80025f0:	68fb      	ldr	r3, [r7, #12]
 80025f2:	681b      	ldr	r3, [r3, #0]
 80025f4:	681b      	ldr	r3, [r3, #0]
 80025f6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80025fa:	2b40      	cmp	r3, #64	; 0x40
 80025fc:	d007      	beq.n	800260e <HAL_SPI_Transmit+0xde>
 80025fe:	68fb      	ldr	r3, [r7, #12]
 8002600:	681b      	ldr	r3, [r3, #0]
 8002602:	681a      	ldr	r2, [r3, #0]
 8002604:	68fb      	ldr	r3, [r7, #12]
 8002606:	681b      	ldr	r3, [r3, #0]
 8002608:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800260c:	601a      	str	r2, [r3, #0]
 800260e:	68fb      	ldr	r3, [r7, #12]
 8002610:	68db      	ldr	r3, [r3, #12]
 8002612:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8002616:	d14b      	bne.n	80026b0 <HAL_SPI_Transmit+0x180>
 8002618:	68fb      	ldr	r3, [r7, #12]
 800261a:	685b      	ldr	r3, [r3, #4]
 800261c:	2b00      	cmp	r3, #0
 800261e:	d002      	beq.n	8002626 <HAL_SPI_Transmit+0xf6>
 8002620:	8afb      	ldrh	r3, [r7, #22]
 8002622:	2b01      	cmp	r3, #1
 8002624:	d13e      	bne.n	80026a4 <HAL_SPI_Transmit+0x174>
 8002626:	68fb      	ldr	r3, [r7, #12]
 8002628:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800262a:	881a      	ldrh	r2, [r3, #0]
 800262c:	68fb      	ldr	r3, [r7, #12]
 800262e:	681b      	ldr	r3, [r3, #0]
 8002630:	60da      	str	r2, [r3, #12]
 8002632:	68fb      	ldr	r3, [r7, #12]
 8002634:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002636:	1c9a      	adds	r2, r3, #2
 8002638:	68fb      	ldr	r3, [r7, #12]
 800263a:	631a      	str	r2, [r3, #48]	; 0x30
 800263c:	68fb      	ldr	r3, [r7, #12]
 800263e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002640:	b29b      	uxth	r3, r3
 8002642:	3b01      	subs	r3, #1
 8002644:	b29a      	uxth	r2, r3
 8002646:	68fb      	ldr	r3, [r7, #12]
 8002648:	86da      	strh	r2, [r3, #54]	; 0x36
 800264a:	e02b      	b.n	80026a4 <HAL_SPI_Transmit+0x174>
 800264c:	68fb      	ldr	r3, [r7, #12]
 800264e:	681b      	ldr	r3, [r3, #0]
 8002650:	689b      	ldr	r3, [r3, #8]
 8002652:	f003 0302 	and.w	r3, r3, #2
 8002656:	2b02      	cmp	r3, #2
 8002658:	d112      	bne.n	8002680 <HAL_SPI_Transmit+0x150>
 800265a:	68fb      	ldr	r3, [r7, #12]
 800265c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800265e:	881a      	ldrh	r2, [r3, #0]
 8002660:	68fb      	ldr	r3, [r7, #12]
 8002662:	681b      	ldr	r3, [r3, #0]
 8002664:	60da      	str	r2, [r3, #12]
 8002666:	68fb      	ldr	r3, [r7, #12]
 8002668:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800266a:	1c9a      	adds	r2, r3, #2
 800266c:	68fb      	ldr	r3, [r7, #12]
 800266e:	631a      	str	r2, [r3, #48]	; 0x30
 8002670:	68fb      	ldr	r3, [r7, #12]
 8002672:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002674:	b29b      	uxth	r3, r3
 8002676:	3b01      	subs	r3, #1
 8002678:	b29a      	uxth	r2, r3
 800267a:	68fb      	ldr	r3, [r7, #12]
 800267c:	86da      	strh	r2, [r3, #54]	; 0x36
 800267e:	e011      	b.n	80026a4 <HAL_SPI_Transmit+0x174>
 8002680:	f7ff f84e 	bl	8001720 <HAL_GetTick>
 8002684:	4602      	mov	r2, r0
 8002686:	69bb      	ldr	r3, [r7, #24]
 8002688:	1ad3      	subs	r3, r2, r3
 800268a:	683a      	ldr	r2, [r7, #0]
 800268c:	429a      	cmp	r2, r3
 800268e:	d803      	bhi.n	8002698 <HAL_SPI_Transmit+0x168>
 8002690:	683b      	ldr	r3, [r7, #0]
 8002692:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002696:	d102      	bne.n	800269e <HAL_SPI_Transmit+0x16e>
 8002698:	683b      	ldr	r3, [r7, #0]
 800269a:	2b00      	cmp	r3, #0
 800269c:	d102      	bne.n	80026a4 <HAL_SPI_Transmit+0x174>
 800269e:	2303      	movs	r3, #3
 80026a0:	77fb      	strb	r3, [r7, #31]
 80026a2:	e074      	b.n	800278e <HAL_SPI_Transmit+0x25e>
 80026a4:	68fb      	ldr	r3, [r7, #12]
 80026a6:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80026a8:	b29b      	uxth	r3, r3
 80026aa:	2b00      	cmp	r3, #0
 80026ac:	d1ce      	bne.n	800264c <HAL_SPI_Transmit+0x11c>
 80026ae:	e04c      	b.n	800274a <HAL_SPI_Transmit+0x21a>
 80026b0:	68fb      	ldr	r3, [r7, #12]
 80026b2:	685b      	ldr	r3, [r3, #4]
 80026b4:	2b00      	cmp	r3, #0
 80026b6:	d002      	beq.n	80026be <HAL_SPI_Transmit+0x18e>
 80026b8:	8afb      	ldrh	r3, [r7, #22]
 80026ba:	2b01      	cmp	r3, #1
 80026bc:	d140      	bne.n	8002740 <HAL_SPI_Transmit+0x210>
 80026be:	68fb      	ldr	r3, [r7, #12]
 80026c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80026c2:	68fb      	ldr	r3, [r7, #12]
 80026c4:	681b      	ldr	r3, [r3, #0]
 80026c6:	330c      	adds	r3, #12
 80026c8:	7812      	ldrb	r2, [r2, #0]
 80026ca:	701a      	strb	r2, [r3, #0]
 80026cc:	68fb      	ldr	r3, [r7, #12]
 80026ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80026d0:	1c5a      	adds	r2, r3, #1
 80026d2:	68fb      	ldr	r3, [r7, #12]
 80026d4:	631a      	str	r2, [r3, #48]	; 0x30
 80026d6:	68fb      	ldr	r3, [r7, #12]
 80026d8:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80026da:	b29b      	uxth	r3, r3
 80026dc:	3b01      	subs	r3, #1
 80026de:	b29a      	uxth	r2, r3
 80026e0:	68fb      	ldr	r3, [r7, #12]
 80026e2:	86da      	strh	r2, [r3, #54]	; 0x36
 80026e4:	e02c      	b.n	8002740 <HAL_SPI_Transmit+0x210>
 80026e6:	68fb      	ldr	r3, [r7, #12]
 80026e8:	681b      	ldr	r3, [r3, #0]
 80026ea:	689b      	ldr	r3, [r3, #8]
 80026ec:	f003 0302 	and.w	r3, r3, #2
 80026f0:	2b02      	cmp	r3, #2
 80026f2:	d113      	bne.n	800271c <HAL_SPI_Transmit+0x1ec>
 80026f4:	68fb      	ldr	r3, [r7, #12]
 80026f6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80026f8:	68fb      	ldr	r3, [r7, #12]
 80026fa:	681b      	ldr	r3, [r3, #0]
 80026fc:	330c      	adds	r3, #12
 80026fe:	7812      	ldrb	r2, [r2, #0]
 8002700:	701a      	strb	r2, [r3, #0]
 8002702:	68fb      	ldr	r3, [r7, #12]
 8002704:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002706:	1c5a      	adds	r2, r3, #1
 8002708:	68fb      	ldr	r3, [r7, #12]
 800270a:	631a      	str	r2, [r3, #48]	; 0x30
 800270c:	68fb      	ldr	r3, [r7, #12]
 800270e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002710:	b29b      	uxth	r3, r3
 8002712:	3b01      	subs	r3, #1
 8002714:	b29a      	uxth	r2, r3
 8002716:	68fb      	ldr	r3, [r7, #12]
 8002718:	86da      	strh	r2, [r3, #54]	; 0x36
 800271a:	e011      	b.n	8002740 <HAL_SPI_Transmit+0x210>
 800271c:	f7ff f800 	bl	8001720 <HAL_GetTick>
 8002720:	4602      	mov	r2, r0
 8002722:	69bb      	ldr	r3, [r7, #24]
 8002724:	1ad3      	subs	r3, r2, r3
 8002726:	683a      	ldr	r2, [r7, #0]
 8002728:	429a      	cmp	r2, r3
 800272a:	d803      	bhi.n	8002734 <HAL_SPI_Transmit+0x204>
 800272c:	683b      	ldr	r3, [r7, #0]
 800272e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002732:	d102      	bne.n	800273a <HAL_SPI_Transmit+0x20a>
 8002734:	683b      	ldr	r3, [r7, #0]
 8002736:	2b00      	cmp	r3, #0
 8002738:	d102      	bne.n	8002740 <HAL_SPI_Transmit+0x210>
 800273a:	2303      	movs	r3, #3
 800273c:	77fb      	strb	r3, [r7, #31]
 800273e:	e026      	b.n	800278e <HAL_SPI_Transmit+0x25e>
 8002740:	68fb      	ldr	r3, [r7, #12]
 8002742:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002744:	b29b      	uxth	r3, r3
 8002746:	2b00      	cmp	r3, #0
 8002748:	d1cd      	bne.n	80026e6 <HAL_SPI_Transmit+0x1b6>
 800274a:	69ba      	ldr	r2, [r7, #24]
 800274c:	6839      	ldr	r1, [r7, #0]
 800274e:	68f8      	ldr	r0, [r7, #12]
 8002750:	f000 f8b2 	bl	80028b8 <SPI_EndRxTxTransaction>
 8002754:	4603      	mov	r3, r0
 8002756:	2b00      	cmp	r3, #0
 8002758:	d002      	beq.n	8002760 <HAL_SPI_Transmit+0x230>
 800275a:	68fb      	ldr	r3, [r7, #12]
 800275c:	2220      	movs	r2, #32
 800275e:	655a      	str	r2, [r3, #84]	; 0x54
 8002760:	68fb      	ldr	r3, [r7, #12]
 8002762:	689b      	ldr	r3, [r3, #8]
 8002764:	2b00      	cmp	r3, #0
 8002766:	d10a      	bne.n	800277e <HAL_SPI_Transmit+0x24e>
 8002768:	2300      	movs	r3, #0
 800276a:	613b      	str	r3, [r7, #16]
 800276c:	68fb      	ldr	r3, [r7, #12]
 800276e:	681b      	ldr	r3, [r3, #0]
 8002770:	68db      	ldr	r3, [r3, #12]
 8002772:	613b      	str	r3, [r7, #16]
 8002774:	68fb      	ldr	r3, [r7, #12]
 8002776:	681b      	ldr	r3, [r3, #0]
 8002778:	689b      	ldr	r3, [r3, #8]
 800277a:	613b      	str	r3, [r7, #16]
 800277c:	693b      	ldr	r3, [r7, #16]
 800277e:	68fb      	ldr	r3, [r7, #12]
 8002780:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002782:	2b00      	cmp	r3, #0
 8002784:	d002      	beq.n	800278c <HAL_SPI_Transmit+0x25c>
 8002786:	2301      	movs	r3, #1
 8002788:	77fb      	strb	r3, [r7, #31]
 800278a:	e000      	b.n	800278e <HAL_SPI_Transmit+0x25e>
 800278c:	bf00      	nop
 800278e:	68fb      	ldr	r3, [r7, #12]
 8002790:	2201      	movs	r2, #1
 8002792:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002796:	68fb      	ldr	r3, [r7, #12]
 8002798:	2200      	movs	r2, #0
 800279a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800279e:	7ffb      	ldrb	r3, [r7, #31]
 80027a0:	4618      	mov	r0, r3
 80027a2:	3720      	adds	r7, #32
 80027a4:	46bd      	mov	sp, r7
 80027a6:	bd80      	pop	{r7, pc}

080027a8 <SPI_WaitFlagStateUntilTimeout>:
 80027a8:	b580      	push	{r7, lr}
 80027aa:	b088      	sub	sp, #32
 80027ac:	af00      	add	r7, sp, #0
 80027ae:	60f8      	str	r0, [r7, #12]
 80027b0:	60b9      	str	r1, [r7, #8]
 80027b2:	603b      	str	r3, [r7, #0]
 80027b4:	4613      	mov	r3, r2
 80027b6:	71fb      	strb	r3, [r7, #7]
 80027b8:	f7fe ffb2 	bl	8001720 <HAL_GetTick>
 80027bc:	4602      	mov	r2, r0
 80027be:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80027c0:	1a9b      	subs	r3, r3, r2
 80027c2:	683a      	ldr	r2, [r7, #0]
 80027c4:	4413      	add	r3, r2
 80027c6:	61fb      	str	r3, [r7, #28]
 80027c8:	f7fe ffaa 	bl	8001720 <HAL_GetTick>
 80027cc:	61b8      	str	r0, [r7, #24]
 80027ce:	4b39      	ldr	r3, [pc, #228]	; (80028b4 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 80027d0:	681b      	ldr	r3, [r3, #0]
 80027d2:	015b      	lsls	r3, r3, #5
 80027d4:	0d1b      	lsrs	r3, r3, #20
 80027d6:	69fa      	ldr	r2, [r7, #28]
 80027d8:	fb02 f303 	mul.w	r3, r2, r3
 80027dc:	617b      	str	r3, [r7, #20]
 80027de:	e054      	b.n	800288a <SPI_WaitFlagStateUntilTimeout+0xe2>
 80027e0:	683b      	ldr	r3, [r7, #0]
 80027e2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80027e6:	d050      	beq.n	800288a <SPI_WaitFlagStateUntilTimeout+0xe2>
 80027e8:	f7fe ff9a 	bl	8001720 <HAL_GetTick>
 80027ec:	4602      	mov	r2, r0
 80027ee:	69bb      	ldr	r3, [r7, #24]
 80027f0:	1ad3      	subs	r3, r2, r3
 80027f2:	69fa      	ldr	r2, [r7, #28]
 80027f4:	429a      	cmp	r2, r3
 80027f6:	d902      	bls.n	80027fe <SPI_WaitFlagStateUntilTimeout+0x56>
 80027f8:	69fb      	ldr	r3, [r7, #28]
 80027fa:	2b00      	cmp	r3, #0
 80027fc:	d13d      	bne.n	800287a <SPI_WaitFlagStateUntilTimeout+0xd2>
 80027fe:	68fb      	ldr	r3, [r7, #12]
 8002800:	681b      	ldr	r3, [r3, #0]
 8002802:	685a      	ldr	r2, [r3, #4]
 8002804:	68fb      	ldr	r3, [r7, #12]
 8002806:	681b      	ldr	r3, [r3, #0]
 8002808:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800280c:	605a      	str	r2, [r3, #4]
 800280e:	68fb      	ldr	r3, [r7, #12]
 8002810:	685b      	ldr	r3, [r3, #4]
 8002812:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002816:	d111      	bne.n	800283c <SPI_WaitFlagStateUntilTimeout+0x94>
 8002818:	68fb      	ldr	r3, [r7, #12]
 800281a:	689b      	ldr	r3, [r3, #8]
 800281c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8002820:	d004      	beq.n	800282c <SPI_WaitFlagStateUntilTimeout+0x84>
 8002822:	68fb      	ldr	r3, [r7, #12]
 8002824:	689b      	ldr	r3, [r3, #8]
 8002826:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800282a:	d107      	bne.n	800283c <SPI_WaitFlagStateUntilTimeout+0x94>
 800282c:	68fb      	ldr	r3, [r7, #12]
 800282e:	681b      	ldr	r3, [r3, #0]
 8002830:	681a      	ldr	r2, [r3, #0]
 8002832:	68fb      	ldr	r3, [r7, #12]
 8002834:	681b      	ldr	r3, [r3, #0]
 8002836:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800283a:	601a      	str	r2, [r3, #0]
 800283c:	68fb      	ldr	r3, [r7, #12]
 800283e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002840:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002844:	d10f      	bne.n	8002866 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8002846:	68fb      	ldr	r3, [r7, #12]
 8002848:	681b      	ldr	r3, [r3, #0]
 800284a:	681a      	ldr	r2, [r3, #0]
 800284c:	68fb      	ldr	r3, [r7, #12]
 800284e:	681b      	ldr	r3, [r3, #0]
 8002850:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002854:	601a      	str	r2, [r3, #0]
 8002856:	68fb      	ldr	r3, [r7, #12]
 8002858:	681b      	ldr	r3, [r3, #0]
 800285a:	681a      	ldr	r2, [r3, #0]
 800285c:	68fb      	ldr	r3, [r7, #12]
 800285e:	681b      	ldr	r3, [r3, #0]
 8002860:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002864:	601a      	str	r2, [r3, #0]
 8002866:	68fb      	ldr	r3, [r7, #12]
 8002868:	2201      	movs	r2, #1
 800286a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800286e:	68fb      	ldr	r3, [r7, #12]
 8002870:	2200      	movs	r2, #0
 8002872:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8002876:	2303      	movs	r3, #3
 8002878:	e017      	b.n	80028aa <SPI_WaitFlagStateUntilTimeout+0x102>
 800287a:	697b      	ldr	r3, [r7, #20]
 800287c:	2b00      	cmp	r3, #0
 800287e:	d101      	bne.n	8002884 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8002880:	2300      	movs	r3, #0
 8002882:	61fb      	str	r3, [r7, #28]
 8002884:	697b      	ldr	r3, [r7, #20]
 8002886:	3b01      	subs	r3, #1
 8002888:	617b      	str	r3, [r7, #20]
 800288a:	68fb      	ldr	r3, [r7, #12]
 800288c:	681b      	ldr	r3, [r3, #0]
 800288e:	689a      	ldr	r2, [r3, #8]
 8002890:	68bb      	ldr	r3, [r7, #8]
 8002892:	4013      	ands	r3, r2
 8002894:	68ba      	ldr	r2, [r7, #8]
 8002896:	429a      	cmp	r2, r3
 8002898:	bf0c      	ite	eq
 800289a:	2301      	moveq	r3, #1
 800289c:	2300      	movne	r3, #0
 800289e:	b2db      	uxtb	r3, r3
 80028a0:	461a      	mov	r2, r3
 80028a2:	79fb      	ldrb	r3, [r7, #7]
 80028a4:	429a      	cmp	r2, r3
 80028a6:	d19b      	bne.n	80027e0 <SPI_WaitFlagStateUntilTimeout+0x38>
 80028a8:	2300      	movs	r3, #0
 80028aa:	4618      	mov	r0, r3
 80028ac:	3720      	adds	r7, #32
 80028ae:	46bd      	mov	sp, r7
 80028b0:	bd80      	pop	{r7, pc}
 80028b2:	bf00      	nop
 80028b4:	20000020 	.word	0x20000020

080028b8 <SPI_EndRxTxTransaction>:
 80028b8:	b580      	push	{r7, lr}
 80028ba:	b086      	sub	sp, #24
 80028bc:	af02      	add	r7, sp, #8
 80028be:	60f8      	str	r0, [r7, #12]
 80028c0:	60b9      	str	r1, [r7, #8]
 80028c2:	607a      	str	r2, [r7, #4]
 80028c4:	687b      	ldr	r3, [r7, #4]
 80028c6:	9300      	str	r3, [sp, #0]
 80028c8:	68bb      	ldr	r3, [r7, #8]
 80028ca:	2200      	movs	r2, #0
 80028cc:	2180      	movs	r1, #128	; 0x80
 80028ce:	68f8      	ldr	r0, [r7, #12]
 80028d0:	f7ff ff6a 	bl	80027a8 <SPI_WaitFlagStateUntilTimeout>
 80028d4:	4603      	mov	r3, r0
 80028d6:	2b00      	cmp	r3, #0
 80028d8:	d007      	beq.n	80028ea <SPI_EndRxTxTransaction+0x32>
 80028da:	68fb      	ldr	r3, [r7, #12]
 80028dc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80028de:	f043 0220 	orr.w	r2, r3, #32
 80028e2:	68fb      	ldr	r3, [r7, #12]
 80028e4:	655a      	str	r2, [r3, #84]	; 0x54
 80028e6:	2303      	movs	r3, #3
 80028e8:	e000      	b.n	80028ec <SPI_EndRxTxTransaction+0x34>
 80028ea:	2300      	movs	r3, #0
 80028ec:	4618      	mov	r0, r3
 80028ee:	3710      	adds	r7, #16
 80028f0:	46bd      	mov	sp, r7
 80028f2:	bd80      	pop	{r7, pc}

080028f4 <__errno>:
 80028f4:	4b01      	ldr	r3, [pc, #4]	; (80028fc <__errno+0x8>)
 80028f6:	6818      	ldr	r0, [r3, #0]
 80028f8:	4770      	bx	lr
 80028fa:	bf00      	nop
 80028fc:	2000002c 	.word	0x2000002c

08002900 <__libc_init_array>:
 8002900:	b570      	push	{r4, r5, r6, lr}
 8002902:	2500      	movs	r5, #0
 8002904:	4e0c      	ldr	r6, [pc, #48]	; (8002938 <__libc_init_array+0x38>)
 8002906:	4c0d      	ldr	r4, [pc, #52]	; (800293c <__libc_init_array+0x3c>)
 8002908:	1ba4      	subs	r4, r4, r6
 800290a:	10a4      	asrs	r4, r4, #2
 800290c:	42a5      	cmp	r5, r4
 800290e:	d109      	bne.n	8002924 <__libc_init_array+0x24>
 8002910:	f000 fc34 	bl	800317c <_init>
 8002914:	2500      	movs	r5, #0
 8002916:	4e0a      	ldr	r6, [pc, #40]	; (8002940 <__libc_init_array+0x40>)
 8002918:	4c0a      	ldr	r4, [pc, #40]	; (8002944 <__libc_init_array+0x44>)
 800291a:	1ba4      	subs	r4, r4, r6
 800291c:	10a4      	asrs	r4, r4, #2
 800291e:	42a5      	cmp	r5, r4
 8002920:	d105      	bne.n	800292e <__libc_init_array+0x2e>
 8002922:	bd70      	pop	{r4, r5, r6, pc}
 8002924:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8002928:	4798      	blx	r3
 800292a:	3501      	adds	r5, #1
 800292c:	e7ee      	b.n	800290c <__libc_init_array+0xc>
 800292e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8002932:	4798      	blx	r3
 8002934:	3501      	adds	r5, #1
 8002936:	e7f2      	b.n	800291e <__libc_init_array+0x1e>
 8002938:	08005aac 	.word	0x08005aac
 800293c:	08005aac 	.word	0x08005aac
 8002940:	08005aac 	.word	0x08005aac
 8002944:	08005ab0 	.word	0x08005ab0

08002948 <memset>:
 8002948:	4603      	mov	r3, r0
 800294a:	4402      	add	r2, r0
 800294c:	4293      	cmp	r3, r2
 800294e:	d100      	bne.n	8002952 <memset+0xa>
 8002950:	4770      	bx	lr
 8002952:	f803 1b01 	strb.w	r1, [r3], #1
 8002956:	e7f9      	b.n	800294c <memset+0x4>

08002958 <_free_r>:
 8002958:	b538      	push	{r3, r4, r5, lr}
 800295a:	4605      	mov	r5, r0
 800295c:	2900      	cmp	r1, #0
 800295e:	d043      	beq.n	80029e8 <_free_r+0x90>
 8002960:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002964:	1f0c      	subs	r4, r1, #4
 8002966:	2b00      	cmp	r3, #0
 8002968:	bfb8      	it	lt
 800296a:	18e4      	addlt	r4, r4, r3
 800296c:	f000 f8ca 	bl	8002b04 <__malloc_lock>
 8002970:	4a1e      	ldr	r2, [pc, #120]	; (80029ec <_free_r+0x94>)
 8002972:	6813      	ldr	r3, [r2, #0]
 8002974:	4610      	mov	r0, r2
 8002976:	b933      	cbnz	r3, 8002986 <_free_r+0x2e>
 8002978:	6063      	str	r3, [r4, #4]
 800297a:	6014      	str	r4, [r2, #0]
 800297c:	4628      	mov	r0, r5
 800297e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002982:	f000 b8c0 	b.w	8002b06 <__malloc_unlock>
 8002986:	42a3      	cmp	r3, r4
 8002988:	d90b      	bls.n	80029a2 <_free_r+0x4a>
 800298a:	6821      	ldr	r1, [r4, #0]
 800298c:	1862      	adds	r2, r4, r1
 800298e:	4293      	cmp	r3, r2
 8002990:	bf01      	itttt	eq
 8002992:	681a      	ldreq	r2, [r3, #0]
 8002994:	685b      	ldreq	r3, [r3, #4]
 8002996:	1852      	addeq	r2, r2, r1
 8002998:	6022      	streq	r2, [r4, #0]
 800299a:	6063      	str	r3, [r4, #4]
 800299c:	6004      	str	r4, [r0, #0]
 800299e:	e7ed      	b.n	800297c <_free_r+0x24>
 80029a0:	4613      	mov	r3, r2
 80029a2:	685a      	ldr	r2, [r3, #4]
 80029a4:	b10a      	cbz	r2, 80029aa <_free_r+0x52>
 80029a6:	42a2      	cmp	r2, r4
 80029a8:	d9fa      	bls.n	80029a0 <_free_r+0x48>
 80029aa:	6819      	ldr	r1, [r3, #0]
 80029ac:	1858      	adds	r0, r3, r1
 80029ae:	42a0      	cmp	r0, r4
 80029b0:	d10b      	bne.n	80029ca <_free_r+0x72>
 80029b2:	6820      	ldr	r0, [r4, #0]
 80029b4:	4401      	add	r1, r0
 80029b6:	1858      	adds	r0, r3, r1
 80029b8:	4282      	cmp	r2, r0
 80029ba:	6019      	str	r1, [r3, #0]
 80029bc:	d1de      	bne.n	800297c <_free_r+0x24>
 80029be:	6810      	ldr	r0, [r2, #0]
 80029c0:	6852      	ldr	r2, [r2, #4]
 80029c2:	4401      	add	r1, r0
 80029c4:	6019      	str	r1, [r3, #0]
 80029c6:	605a      	str	r2, [r3, #4]
 80029c8:	e7d8      	b.n	800297c <_free_r+0x24>
 80029ca:	d902      	bls.n	80029d2 <_free_r+0x7a>
 80029cc:	230c      	movs	r3, #12
 80029ce:	602b      	str	r3, [r5, #0]
 80029d0:	e7d4      	b.n	800297c <_free_r+0x24>
 80029d2:	6820      	ldr	r0, [r4, #0]
 80029d4:	1821      	adds	r1, r4, r0
 80029d6:	428a      	cmp	r2, r1
 80029d8:	bf01      	itttt	eq
 80029da:	6811      	ldreq	r1, [r2, #0]
 80029dc:	6852      	ldreq	r2, [r2, #4]
 80029de:	1809      	addeq	r1, r1, r0
 80029e0:	6021      	streq	r1, [r4, #0]
 80029e2:	6062      	str	r2, [r4, #4]
 80029e4:	605c      	str	r4, [r3, #4]
 80029e6:	e7c9      	b.n	800297c <_free_r+0x24>
 80029e8:	bd38      	pop	{r3, r4, r5, pc}
 80029ea:	bf00      	nop
 80029ec:	200000b4 	.word	0x200000b4

080029f0 <_malloc_r>:
 80029f0:	b570      	push	{r4, r5, r6, lr}
 80029f2:	1ccd      	adds	r5, r1, #3
 80029f4:	f025 0503 	bic.w	r5, r5, #3
 80029f8:	3508      	adds	r5, #8
 80029fa:	2d0c      	cmp	r5, #12
 80029fc:	bf38      	it	cc
 80029fe:	250c      	movcc	r5, #12
 8002a00:	2d00      	cmp	r5, #0
 8002a02:	4606      	mov	r6, r0
 8002a04:	db01      	blt.n	8002a0a <_malloc_r+0x1a>
 8002a06:	42a9      	cmp	r1, r5
 8002a08:	d903      	bls.n	8002a12 <_malloc_r+0x22>
 8002a0a:	230c      	movs	r3, #12
 8002a0c:	6033      	str	r3, [r6, #0]
 8002a0e:	2000      	movs	r0, #0
 8002a10:	bd70      	pop	{r4, r5, r6, pc}
 8002a12:	f000 f877 	bl	8002b04 <__malloc_lock>
 8002a16:	4a21      	ldr	r2, [pc, #132]	; (8002a9c <_malloc_r+0xac>)
 8002a18:	6814      	ldr	r4, [r2, #0]
 8002a1a:	4621      	mov	r1, r4
 8002a1c:	b991      	cbnz	r1, 8002a44 <_malloc_r+0x54>
 8002a1e:	4c20      	ldr	r4, [pc, #128]	; (8002aa0 <_malloc_r+0xb0>)
 8002a20:	6823      	ldr	r3, [r4, #0]
 8002a22:	b91b      	cbnz	r3, 8002a2c <_malloc_r+0x3c>
 8002a24:	4630      	mov	r0, r6
 8002a26:	f000 f83d 	bl	8002aa4 <_sbrk_r>
 8002a2a:	6020      	str	r0, [r4, #0]
 8002a2c:	4629      	mov	r1, r5
 8002a2e:	4630      	mov	r0, r6
 8002a30:	f000 f838 	bl	8002aa4 <_sbrk_r>
 8002a34:	1c43      	adds	r3, r0, #1
 8002a36:	d124      	bne.n	8002a82 <_malloc_r+0x92>
 8002a38:	230c      	movs	r3, #12
 8002a3a:	4630      	mov	r0, r6
 8002a3c:	6033      	str	r3, [r6, #0]
 8002a3e:	f000 f862 	bl	8002b06 <__malloc_unlock>
 8002a42:	e7e4      	b.n	8002a0e <_malloc_r+0x1e>
 8002a44:	680b      	ldr	r3, [r1, #0]
 8002a46:	1b5b      	subs	r3, r3, r5
 8002a48:	d418      	bmi.n	8002a7c <_malloc_r+0x8c>
 8002a4a:	2b0b      	cmp	r3, #11
 8002a4c:	d90f      	bls.n	8002a6e <_malloc_r+0x7e>
 8002a4e:	600b      	str	r3, [r1, #0]
 8002a50:	18cc      	adds	r4, r1, r3
 8002a52:	50cd      	str	r5, [r1, r3]
 8002a54:	4630      	mov	r0, r6
 8002a56:	f000 f856 	bl	8002b06 <__malloc_unlock>
 8002a5a:	f104 000b 	add.w	r0, r4, #11
 8002a5e:	1d23      	adds	r3, r4, #4
 8002a60:	f020 0007 	bic.w	r0, r0, #7
 8002a64:	1ac3      	subs	r3, r0, r3
 8002a66:	d0d3      	beq.n	8002a10 <_malloc_r+0x20>
 8002a68:	425a      	negs	r2, r3
 8002a6a:	50e2      	str	r2, [r4, r3]
 8002a6c:	e7d0      	b.n	8002a10 <_malloc_r+0x20>
 8002a6e:	684b      	ldr	r3, [r1, #4]
 8002a70:	428c      	cmp	r4, r1
 8002a72:	bf16      	itet	ne
 8002a74:	6063      	strne	r3, [r4, #4]
 8002a76:	6013      	streq	r3, [r2, #0]
 8002a78:	460c      	movne	r4, r1
 8002a7a:	e7eb      	b.n	8002a54 <_malloc_r+0x64>
 8002a7c:	460c      	mov	r4, r1
 8002a7e:	6849      	ldr	r1, [r1, #4]
 8002a80:	e7cc      	b.n	8002a1c <_malloc_r+0x2c>
 8002a82:	1cc4      	adds	r4, r0, #3
 8002a84:	f024 0403 	bic.w	r4, r4, #3
 8002a88:	42a0      	cmp	r0, r4
 8002a8a:	d005      	beq.n	8002a98 <_malloc_r+0xa8>
 8002a8c:	1a21      	subs	r1, r4, r0
 8002a8e:	4630      	mov	r0, r6
 8002a90:	f000 f808 	bl	8002aa4 <_sbrk_r>
 8002a94:	3001      	adds	r0, #1
 8002a96:	d0cf      	beq.n	8002a38 <_malloc_r+0x48>
 8002a98:	6025      	str	r5, [r4, #0]
 8002a9a:	e7db      	b.n	8002a54 <_malloc_r+0x64>
 8002a9c:	200000b4 	.word	0x200000b4
 8002aa0:	200000b8 	.word	0x200000b8

08002aa4 <_sbrk_r>:
 8002aa4:	b538      	push	{r3, r4, r5, lr}
 8002aa6:	2300      	movs	r3, #0
 8002aa8:	4c05      	ldr	r4, [pc, #20]	; (8002ac0 <_sbrk_r+0x1c>)
 8002aaa:	4605      	mov	r5, r0
 8002aac:	4608      	mov	r0, r1
 8002aae:	6023      	str	r3, [r4, #0]
 8002ab0:	f7fe fd7c 	bl	80015ac <_sbrk>
 8002ab4:	1c43      	adds	r3, r0, #1
 8002ab6:	d102      	bne.n	8002abe <_sbrk_r+0x1a>
 8002ab8:	6823      	ldr	r3, [r4, #0]
 8002aba:	b103      	cbz	r3, 8002abe <_sbrk_r+0x1a>
 8002abc:	602b      	str	r3, [r5, #0]
 8002abe:	bd38      	pop	{r3, r4, r5, pc}
 8002ac0:	20000144 	.word	0x20000144

08002ac4 <siprintf>:
 8002ac4:	b40e      	push	{r1, r2, r3}
 8002ac6:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8002aca:	b500      	push	{lr}
 8002acc:	b09c      	sub	sp, #112	; 0x70
 8002ace:	ab1d      	add	r3, sp, #116	; 0x74
 8002ad0:	9002      	str	r0, [sp, #8]
 8002ad2:	9006      	str	r0, [sp, #24]
 8002ad4:	9107      	str	r1, [sp, #28]
 8002ad6:	9104      	str	r1, [sp, #16]
 8002ad8:	4808      	ldr	r0, [pc, #32]	; (8002afc <siprintf+0x38>)
 8002ada:	4909      	ldr	r1, [pc, #36]	; (8002b00 <siprintf+0x3c>)
 8002adc:	f853 2b04 	ldr.w	r2, [r3], #4
 8002ae0:	9105      	str	r1, [sp, #20]
 8002ae2:	6800      	ldr	r0, [r0, #0]
 8002ae4:	a902      	add	r1, sp, #8
 8002ae6:	9301      	str	r3, [sp, #4]
 8002ae8:	f000 f868 	bl	8002bbc <_svfiprintf_r>
 8002aec:	2200      	movs	r2, #0
 8002aee:	9b02      	ldr	r3, [sp, #8]
 8002af0:	701a      	strb	r2, [r3, #0]
 8002af2:	b01c      	add	sp, #112	; 0x70
 8002af4:	f85d eb04 	ldr.w	lr, [sp], #4
 8002af8:	b003      	add	sp, #12
 8002afa:	4770      	bx	lr
 8002afc:	2000002c 	.word	0x2000002c
 8002b00:	ffff0208 	.word	0xffff0208

08002b04 <__malloc_lock>:
 8002b04:	4770      	bx	lr

08002b06 <__malloc_unlock>:
 8002b06:	4770      	bx	lr

08002b08 <__ssputs_r>:
 8002b08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002b0c:	688e      	ldr	r6, [r1, #8]
 8002b0e:	4682      	mov	sl, r0
 8002b10:	429e      	cmp	r6, r3
 8002b12:	460c      	mov	r4, r1
 8002b14:	4690      	mov	r8, r2
 8002b16:	4699      	mov	r9, r3
 8002b18:	d837      	bhi.n	8002b8a <__ssputs_r+0x82>
 8002b1a:	898a      	ldrh	r2, [r1, #12]
 8002b1c:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8002b20:	d031      	beq.n	8002b86 <__ssputs_r+0x7e>
 8002b22:	2302      	movs	r3, #2
 8002b24:	6825      	ldr	r5, [r4, #0]
 8002b26:	6909      	ldr	r1, [r1, #16]
 8002b28:	1a6f      	subs	r7, r5, r1
 8002b2a:	6965      	ldr	r5, [r4, #20]
 8002b2c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8002b30:	fb95 f5f3 	sdiv	r5, r5, r3
 8002b34:	f109 0301 	add.w	r3, r9, #1
 8002b38:	443b      	add	r3, r7
 8002b3a:	429d      	cmp	r5, r3
 8002b3c:	bf38      	it	cc
 8002b3e:	461d      	movcc	r5, r3
 8002b40:	0553      	lsls	r3, r2, #21
 8002b42:	d530      	bpl.n	8002ba6 <__ssputs_r+0x9e>
 8002b44:	4629      	mov	r1, r5
 8002b46:	f7ff ff53 	bl	80029f0 <_malloc_r>
 8002b4a:	4606      	mov	r6, r0
 8002b4c:	b950      	cbnz	r0, 8002b64 <__ssputs_r+0x5c>
 8002b4e:	230c      	movs	r3, #12
 8002b50:	f04f 30ff 	mov.w	r0, #4294967295
 8002b54:	f8ca 3000 	str.w	r3, [sl]
 8002b58:	89a3      	ldrh	r3, [r4, #12]
 8002b5a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002b5e:	81a3      	strh	r3, [r4, #12]
 8002b60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002b64:	463a      	mov	r2, r7
 8002b66:	6921      	ldr	r1, [r4, #16]
 8002b68:	f000 fab6 	bl	80030d8 <memcpy>
 8002b6c:	89a3      	ldrh	r3, [r4, #12]
 8002b6e:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8002b72:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002b76:	81a3      	strh	r3, [r4, #12]
 8002b78:	6126      	str	r6, [r4, #16]
 8002b7a:	443e      	add	r6, r7
 8002b7c:	6026      	str	r6, [r4, #0]
 8002b7e:	464e      	mov	r6, r9
 8002b80:	6165      	str	r5, [r4, #20]
 8002b82:	1bed      	subs	r5, r5, r7
 8002b84:	60a5      	str	r5, [r4, #8]
 8002b86:	454e      	cmp	r6, r9
 8002b88:	d900      	bls.n	8002b8c <__ssputs_r+0x84>
 8002b8a:	464e      	mov	r6, r9
 8002b8c:	4632      	mov	r2, r6
 8002b8e:	4641      	mov	r1, r8
 8002b90:	6820      	ldr	r0, [r4, #0]
 8002b92:	f000 faac 	bl	80030ee <memmove>
 8002b96:	68a3      	ldr	r3, [r4, #8]
 8002b98:	2000      	movs	r0, #0
 8002b9a:	1b9b      	subs	r3, r3, r6
 8002b9c:	60a3      	str	r3, [r4, #8]
 8002b9e:	6823      	ldr	r3, [r4, #0]
 8002ba0:	441e      	add	r6, r3
 8002ba2:	6026      	str	r6, [r4, #0]
 8002ba4:	e7dc      	b.n	8002b60 <__ssputs_r+0x58>
 8002ba6:	462a      	mov	r2, r5
 8002ba8:	f000 faba 	bl	8003120 <_realloc_r>
 8002bac:	4606      	mov	r6, r0
 8002bae:	2800      	cmp	r0, #0
 8002bb0:	d1e2      	bne.n	8002b78 <__ssputs_r+0x70>
 8002bb2:	6921      	ldr	r1, [r4, #16]
 8002bb4:	4650      	mov	r0, sl
 8002bb6:	f7ff fecf 	bl	8002958 <_free_r>
 8002bba:	e7c8      	b.n	8002b4e <__ssputs_r+0x46>

08002bbc <_svfiprintf_r>:
 8002bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002bc0:	461d      	mov	r5, r3
 8002bc2:	898b      	ldrh	r3, [r1, #12]
 8002bc4:	b09d      	sub	sp, #116	; 0x74
 8002bc6:	061f      	lsls	r7, r3, #24
 8002bc8:	4680      	mov	r8, r0
 8002bca:	460c      	mov	r4, r1
 8002bcc:	4616      	mov	r6, r2
 8002bce:	d50f      	bpl.n	8002bf0 <_svfiprintf_r+0x34>
 8002bd0:	690b      	ldr	r3, [r1, #16]
 8002bd2:	b96b      	cbnz	r3, 8002bf0 <_svfiprintf_r+0x34>
 8002bd4:	2140      	movs	r1, #64	; 0x40
 8002bd6:	f7ff ff0b 	bl	80029f0 <_malloc_r>
 8002bda:	6020      	str	r0, [r4, #0]
 8002bdc:	6120      	str	r0, [r4, #16]
 8002bde:	b928      	cbnz	r0, 8002bec <_svfiprintf_r+0x30>
 8002be0:	230c      	movs	r3, #12
 8002be2:	f8c8 3000 	str.w	r3, [r8]
 8002be6:	f04f 30ff 	mov.w	r0, #4294967295
 8002bea:	e0c8      	b.n	8002d7e <_svfiprintf_r+0x1c2>
 8002bec:	2340      	movs	r3, #64	; 0x40
 8002bee:	6163      	str	r3, [r4, #20]
 8002bf0:	2300      	movs	r3, #0
 8002bf2:	9309      	str	r3, [sp, #36]	; 0x24
 8002bf4:	2320      	movs	r3, #32
 8002bf6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8002bfa:	2330      	movs	r3, #48	; 0x30
 8002bfc:	f04f 0b01 	mov.w	fp, #1
 8002c00:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8002c04:	9503      	str	r5, [sp, #12]
 8002c06:	4637      	mov	r7, r6
 8002c08:	463d      	mov	r5, r7
 8002c0a:	f815 3b01 	ldrb.w	r3, [r5], #1
 8002c0e:	b10b      	cbz	r3, 8002c14 <_svfiprintf_r+0x58>
 8002c10:	2b25      	cmp	r3, #37	; 0x25
 8002c12:	d13e      	bne.n	8002c92 <_svfiprintf_r+0xd6>
 8002c14:	ebb7 0a06 	subs.w	sl, r7, r6
 8002c18:	d00b      	beq.n	8002c32 <_svfiprintf_r+0x76>
 8002c1a:	4653      	mov	r3, sl
 8002c1c:	4632      	mov	r2, r6
 8002c1e:	4621      	mov	r1, r4
 8002c20:	4640      	mov	r0, r8
 8002c22:	f7ff ff71 	bl	8002b08 <__ssputs_r>
 8002c26:	3001      	adds	r0, #1
 8002c28:	f000 80a4 	beq.w	8002d74 <_svfiprintf_r+0x1b8>
 8002c2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002c2e:	4453      	add	r3, sl
 8002c30:	9309      	str	r3, [sp, #36]	; 0x24
 8002c32:	783b      	ldrb	r3, [r7, #0]
 8002c34:	2b00      	cmp	r3, #0
 8002c36:	f000 809d 	beq.w	8002d74 <_svfiprintf_r+0x1b8>
 8002c3a:	2300      	movs	r3, #0
 8002c3c:	f04f 32ff 	mov.w	r2, #4294967295
 8002c40:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8002c44:	9304      	str	r3, [sp, #16]
 8002c46:	9307      	str	r3, [sp, #28]
 8002c48:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8002c4c:	931a      	str	r3, [sp, #104]	; 0x68
 8002c4e:	462f      	mov	r7, r5
 8002c50:	2205      	movs	r2, #5
 8002c52:	f817 1b01 	ldrb.w	r1, [r7], #1
 8002c56:	4850      	ldr	r0, [pc, #320]	; (8002d98 <_svfiprintf_r+0x1dc>)
 8002c58:	f000 fa30 	bl	80030bc <memchr>
 8002c5c:	9b04      	ldr	r3, [sp, #16]
 8002c5e:	b9d0      	cbnz	r0, 8002c96 <_svfiprintf_r+0xda>
 8002c60:	06d9      	lsls	r1, r3, #27
 8002c62:	bf44      	itt	mi
 8002c64:	2220      	movmi	r2, #32
 8002c66:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8002c6a:	071a      	lsls	r2, r3, #28
 8002c6c:	bf44      	itt	mi
 8002c6e:	222b      	movmi	r2, #43	; 0x2b
 8002c70:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8002c74:	782a      	ldrb	r2, [r5, #0]
 8002c76:	2a2a      	cmp	r2, #42	; 0x2a
 8002c78:	d015      	beq.n	8002ca6 <_svfiprintf_r+0xea>
 8002c7a:	462f      	mov	r7, r5
 8002c7c:	2000      	movs	r0, #0
 8002c7e:	250a      	movs	r5, #10
 8002c80:	9a07      	ldr	r2, [sp, #28]
 8002c82:	4639      	mov	r1, r7
 8002c84:	f811 3b01 	ldrb.w	r3, [r1], #1
 8002c88:	3b30      	subs	r3, #48	; 0x30
 8002c8a:	2b09      	cmp	r3, #9
 8002c8c:	d94d      	bls.n	8002d2a <_svfiprintf_r+0x16e>
 8002c8e:	b1b8      	cbz	r0, 8002cc0 <_svfiprintf_r+0x104>
 8002c90:	e00f      	b.n	8002cb2 <_svfiprintf_r+0xf6>
 8002c92:	462f      	mov	r7, r5
 8002c94:	e7b8      	b.n	8002c08 <_svfiprintf_r+0x4c>
 8002c96:	4a40      	ldr	r2, [pc, #256]	; (8002d98 <_svfiprintf_r+0x1dc>)
 8002c98:	463d      	mov	r5, r7
 8002c9a:	1a80      	subs	r0, r0, r2
 8002c9c:	fa0b f000 	lsl.w	r0, fp, r0
 8002ca0:	4318      	orrs	r0, r3
 8002ca2:	9004      	str	r0, [sp, #16]
 8002ca4:	e7d3      	b.n	8002c4e <_svfiprintf_r+0x92>
 8002ca6:	9a03      	ldr	r2, [sp, #12]
 8002ca8:	1d11      	adds	r1, r2, #4
 8002caa:	6812      	ldr	r2, [r2, #0]
 8002cac:	9103      	str	r1, [sp, #12]
 8002cae:	2a00      	cmp	r2, #0
 8002cb0:	db01      	blt.n	8002cb6 <_svfiprintf_r+0xfa>
 8002cb2:	9207      	str	r2, [sp, #28]
 8002cb4:	e004      	b.n	8002cc0 <_svfiprintf_r+0x104>
 8002cb6:	4252      	negs	r2, r2
 8002cb8:	f043 0302 	orr.w	r3, r3, #2
 8002cbc:	9207      	str	r2, [sp, #28]
 8002cbe:	9304      	str	r3, [sp, #16]
 8002cc0:	783b      	ldrb	r3, [r7, #0]
 8002cc2:	2b2e      	cmp	r3, #46	; 0x2e
 8002cc4:	d10c      	bne.n	8002ce0 <_svfiprintf_r+0x124>
 8002cc6:	787b      	ldrb	r3, [r7, #1]
 8002cc8:	2b2a      	cmp	r3, #42	; 0x2a
 8002cca:	d133      	bne.n	8002d34 <_svfiprintf_r+0x178>
 8002ccc:	9b03      	ldr	r3, [sp, #12]
 8002cce:	3702      	adds	r7, #2
 8002cd0:	1d1a      	adds	r2, r3, #4
 8002cd2:	681b      	ldr	r3, [r3, #0]
 8002cd4:	9203      	str	r2, [sp, #12]
 8002cd6:	2b00      	cmp	r3, #0
 8002cd8:	bfb8      	it	lt
 8002cda:	f04f 33ff 	movlt.w	r3, #4294967295
 8002cde:	9305      	str	r3, [sp, #20]
 8002ce0:	4d2e      	ldr	r5, [pc, #184]	; (8002d9c <_svfiprintf_r+0x1e0>)
 8002ce2:	2203      	movs	r2, #3
 8002ce4:	7839      	ldrb	r1, [r7, #0]
 8002ce6:	4628      	mov	r0, r5
 8002ce8:	f000 f9e8 	bl	80030bc <memchr>
 8002cec:	b138      	cbz	r0, 8002cfe <_svfiprintf_r+0x142>
 8002cee:	2340      	movs	r3, #64	; 0x40
 8002cf0:	1b40      	subs	r0, r0, r5
 8002cf2:	fa03 f000 	lsl.w	r0, r3, r0
 8002cf6:	9b04      	ldr	r3, [sp, #16]
 8002cf8:	3701      	adds	r7, #1
 8002cfa:	4303      	orrs	r3, r0
 8002cfc:	9304      	str	r3, [sp, #16]
 8002cfe:	7839      	ldrb	r1, [r7, #0]
 8002d00:	2206      	movs	r2, #6
 8002d02:	4827      	ldr	r0, [pc, #156]	; (8002da0 <_svfiprintf_r+0x1e4>)
 8002d04:	1c7e      	adds	r6, r7, #1
 8002d06:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8002d0a:	f000 f9d7 	bl	80030bc <memchr>
 8002d0e:	2800      	cmp	r0, #0
 8002d10:	d038      	beq.n	8002d84 <_svfiprintf_r+0x1c8>
 8002d12:	4b24      	ldr	r3, [pc, #144]	; (8002da4 <_svfiprintf_r+0x1e8>)
 8002d14:	bb13      	cbnz	r3, 8002d5c <_svfiprintf_r+0x1a0>
 8002d16:	9b03      	ldr	r3, [sp, #12]
 8002d18:	3307      	adds	r3, #7
 8002d1a:	f023 0307 	bic.w	r3, r3, #7
 8002d1e:	3308      	adds	r3, #8
 8002d20:	9303      	str	r3, [sp, #12]
 8002d22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002d24:	444b      	add	r3, r9
 8002d26:	9309      	str	r3, [sp, #36]	; 0x24
 8002d28:	e76d      	b.n	8002c06 <_svfiprintf_r+0x4a>
 8002d2a:	fb05 3202 	mla	r2, r5, r2, r3
 8002d2e:	2001      	movs	r0, #1
 8002d30:	460f      	mov	r7, r1
 8002d32:	e7a6      	b.n	8002c82 <_svfiprintf_r+0xc6>
 8002d34:	2300      	movs	r3, #0
 8002d36:	250a      	movs	r5, #10
 8002d38:	4619      	mov	r1, r3
 8002d3a:	3701      	adds	r7, #1
 8002d3c:	9305      	str	r3, [sp, #20]
 8002d3e:	4638      	mov	r0, r7
 8002d40:	f810 2b01 	ldrb.w	r2, [r0], #1
 8002d44:	3a30      	subs	r2, #48	; 0x30
 8002d46:	2a09      	cmp	r2, #9
 8002d48:	d903      	bls.n	8002d52 <_svfiprintf_r+0x196>
 8002d4a:	2b00      	cmp	r3, #0
 8002d4c:	d0c8      	beq.n	8002ce0 <_svfiprintf_r+0x124>
 8002d4e:	9105      	str	r1, [sp, #20]
 8002d50:	e7c6      	b.n	8002ce0 <_svfiprintf_r+0x124>
 8002d52:	fb05 2101 	mla	r1, r5, r1, r2
 8002d56:	2301      	movs	r3, #1
 8002d58:	4607      	mov	r7, r0
 8002d5a:	e7f0      	b.n	8002d3e <_svfiprintf_r+0x182>
 8002d5c:	ab03      	add	r3, sp, #12
 8002d5e:	9300      	str	r3, [sp, #0]
 8002d60:	4622      	mov	r2, r4
 8002d62:	4b11      	ldr	r3, [pc, #68]	; (8002da8 <_svfiprintf_r+0x1ec>)
 8002d64:	a904      	add	r1, sp, #16
 8002d66:	4640      	mov	r0, r8
 8002d68:	f3af 8000 	nop.w
 8002d6c:	f1b0 3fff 	cmp.w	r0, #4294967295
 8002d70:	4681      	mov	r9, r0
 8002d72:	d1d6      	bne.n	8002d22 <_svfiprintf_r+0x166>
 8002d74:	89a3      	ldrh	r3, [r4, #12]
 8002d76:	065b      	lsls	r3, r3, #25
 8002d78:	f53f af35 	bmi.w	8002be6 <_svfiprintf_r+0x2a>
 8002d7c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8002d7e:	b01d      	add	sp, #116	; 0x74
 8002d80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002d84:	ab03      	add	r3, sp, #12
 8002d86:	9300      	str	r3, [sp, #0]
 8002d88:	4622      	mov	r2, r4
 8002d8a:	4b07      	ldr	r3, [pc, #28]	; (8002da8 <_svfiprintf_r+0x1ec>)
 8002d8c:	a904      	add	r1, sp, #16
 8002d8e:	4640      	mov	r0, r8
 8002d90:	f000 f882 	bl	8002e98 <_printf_i>
 8002d94:	e7ea      	b.n	8002d6c <_svfiprintf_r+0x1b0>
 8002d96:	bf00      	nop
 8002d98:	08005a78 	.word	0x08005a78
 8002d9c:	08005a7e 	.word	0x08005a7e
 8002da0:	08005a82 	.word	0x08005a82
 8002da4:	00000000 	.word	0x00000000
 8002da8:	08002b09 	.word	0x08002b09

08002dac <_printf_common>:
 8002dac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002db0:	4691      	mov	r9, r2
 8002db2:	461f      	mov	r7, r3
 8002db4:	688a      	ldr	r2, [r1, #8]
 8002db6:	690b      	ldr	r3, [r1, #16]
 8002db8:	4606      	mov	r6, r0
 8002dba:	4293      	cmp	r3, r2
 8002dbc:	bfb8      	it	lt
 8002dbe:	4613      	movlt	r3, r2
 8002dc0:	f8c9 3000 	str.w	r3, [r9]
 8002dc4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8002dc8:	460c      	mov	r4, r1
 8002dca:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002dce:	b112      	cbz	r2, 8002dd6 <_printf_common+0x2a>
 8002dd0:	3301      	adds	r3, #1
 8002dd2:	f8c9 3000 	str.w	r3, [r9]
 8002dd6:	6823      	ldr	r3, [r4, #0]
 8002dd8:	0699      	lsls	r1, r3, #26
 8002dda:	bf42      	ittt	mi
 8002ddc:	f8d9 3000 	ldrmi.w	r3, [r9]
 8002de0:	3302      	addmi	r3, #2
 8002de2:	f8c9 3000 	strmi.w	r3, [r9]
 8002de6:	6825      	ldr	r5, [r4, #0]
 8002de8:	f015 0506 	ands.w	r5, r5, #6
 8002dec:	d107      	bne.n	8002dfe <_printf_common+0x52>
 8002dee:	f104 0a19 	add.w	sl, r4, #25
 8002df2:	68e3      	ldr	r3, [r4, #12]
 8002df4:	f8d9 2000 	ldr.w	r2, [r9]
 8002df8:	1a9b      	subs	r3, r3, r2
 8002dfa:	42ab      	cmp	r3, r5
 8002dfc:	dc29      	bgt.n	8002e52 <_printf_common+0xa6>
 8002dfe:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8002e02:	6822      	ldr	r2, [r4, #0]
 8002e04:	3300      	adds	r3, #0
 8002e06:	bf18      	it	ne
 8002e08:	2301      	movne	r3, #1
 8002e0a:	0692      	lsls	r2, r2, #26
 8002e0c:	d42e      	bmi.n	8002e6c <_printf_common+0xc0>
 8002e0e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8002e12:	4639      	mov	r1, r7
 8002e14:	4630      	mov	r0, r6
 8002e16:	47c0      	blx	r8
 8002e18:	3001      	adds	r0, #1
 8002e1a:	d021      	beq.n	8002e60 <_printf_common+0xb4>
 8002e1c:	6823      	ldr	r3, [r4, #0]
 8002e1e:	68e5      	ldr	r5, [r4, #12]
 8002e20:	f003 0306 	and.w	r3, r3, #6
 8002e24:	2b04      	cmp	r3, #4
 8002e26:	bf18      	it	ne
 8002e28:	2500      	movne	r5, #0
 8002e2a:	f8d9 2000 	ldr.w	r2, [r9]
 8002e2e:	f04f 0900 	mov.w	r9, #0
 8002e32:	bf08      	it	eq
 8002e34:	1aad      	subeq	r5, r5, r2
 8002e36:	68a3      	ldr	r3, [r4, #8]
 8002e38:	6922      	ldr	r2, [r4, #16]
 8002e3a:	bf08      	it	eq
 8002e3c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002e40:	4293      	cmp	r3, r2
 8002e42:	bfc4      	itt	gt
 8002e44:	1a9b      	subgt	r3, r3, r2
 8002e46:	18ed      	addgt	r5, r5, r3
 8002e48:	341a      	adds	r4, #26
 8002e4a:	454d      	cmp	r5, r9
 8002e4c:	d11a      	bne.n	8002e84 <_printf_common+0xd8>
 8002e4e:	2000      	movs	r0, #0
 8002e50:	e008      	b.n	8002e64 <_printf_common+0xb8>
 8002e52:	2301      	movs	r3, #1
 8002e54:	4652      	mov	r2, sl
 8002e56:	4639      	mov	r1, r7
 8002e58:	4630      	mov	r0, r6
 8002e5a:	47c0      	blx	r8
 8002e5c:	3001      	adds	r0, #1
 8002e5e:	d103      	bne.n	8002e68 <_printf_common+0xbc>
 8002e60:	f04f 30ff 	mov.w	r0, #4294967295
 8002e64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002e68:	3501      	adds	r5, #1
 8002e6a:	e7c2      	b.n	8002df2 <_printf_common+0x46>
 8002e6c:	2030      	movs	r0, #48	; 0x30
 8002e6e:	18e1      	adds	r1, r4, r3
 8002e70:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8002e74:	1c5a      	adds	r2, r3, #1
 8002e76:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8002e7a:	4422      	add	r2, r4
 8002e7c:	3302      	adds	r3, #2
 8002e7e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8002e82:	e7c4      	b.n	8002e0e <_printf_common+0x62>
 8002e84:	2301      	movs	r3, #1
 8002e86:	4622      	mov	r2, r4
 8002e88:	4639      	mov	r1, r7
 8002e8a:	4630      	mov	r0, r6
 8002e8c:	47c0      	blx	r8
 8002e8e:	3001      	adds	r0, #1
 8002e90:	d0e6      	beq.n	8002e60 <_printf_common+0xb4>
 8002e92:	f109 0901 	add.w	r9, r9, #1
 8002e96:	e7d8      	b.n	8002e4a <_printf_common+0x9e>

08002e98 <_printf_i>:
 8002e98:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002e9c:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8002ea0:	460c      	mov	r4, r1
 8002ea2:	7e09      	ldrb	r1, [r1, #24]
 8002ea4:	b085      	sub	sp, #20
 8002ea6:	296e      	cmp	r1, #110	; 0x6e
 8002ea8:	4617      	mov	r7, r2
 8002eaa:	4606      	mov	r6, r0
 8002eac:	4698      	mov	r8, r3
 8002eae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8002eb0:	f000 80b3 	beq.w	800301a <_printf_i+0x182>
 8002eb4:	d822      	bhi.n	8002efc <_printf_i+0x64>
 8002eb6:	2963      	cmp	r1, #99	; 0x63
 8002eb8:	d036      	beq.n	8002f28 <_printf_i+0x90>
 8002eba:	d80a      	bhi.n	8002ed2 <_printf_i+0x3a>
 8002ebc:	2900      	cmp	r1, #0
 8002ebe:	f000 80b9 	beq.w	8003034 <_printf_i+0x19c>
 8002ec2:	2958      	cmp	r1, #88	; 0x58
 8002ec4:	f000 8083 	beq.w	8002fce <_printf_i+0x136>
 8002ec8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002ecc:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8002ed0:	e032      	b.n	8002f38 <_printf_i+0xa0>
 8002ed2:	2964      	cmp	r1, #100	; 0x64
 8002ed4:	d001      	beq.n	8002eda <_printf_i+0x42>
 8002ed6:	2969      	cmp	r1, #105	; 0x69
 8002ed8:	d1f6      	bne.n	8002ec8 <_printf_i+0x30>
 8002eda:	6820      	ldr	r0, [r4, #0]
 8002edc:	6813      	ldr	r3, [r2, #0]
 8002ede:	0605      	lsls	r5, r0, #24
 8002ee0:	f103 0104 	add.w	r1, r3, #4
 8002ee4:	d52a      	bpl.n	8002f3c <_printf_i+0xa4>
 8002ee6:	681b      	ldr	r3, [r3, #0]
 8002ee8:	6011      	str	r1, [r2, #0]
 8002eea:	2b00      	cmp	r3, #0
 8002eec:	da03      	bge.n	8002ef6 <_printf_i+0x5e>
 8002eee:	222d      	movs	r2, #45	; 0x2d
 8002ef0:	425b      	negs	r3, r3
 8002ef2:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8002ef6:	486f      	ldr	r0, [pc, #444]	; (80030b4 <_printf_i+0x21c>)
 8002ef8:	220a      	movs	r2, #10
 8002efa:	e039      	b.n	8002f70 <_printf_i+0xd8>
 8002efc:	2973      	cmp	r1, #115	; 0x73
 8002efe:	f000 809d 	beq.w	800303c <_printf_i+0x1a4>
 8002f02:	d808      	bhi.n	8002f16 <_printf_i+0x7e>
 8002f04:	296f      	cmp	r1, #111	; 0x6f
 8002f06:	d020      	beq.n	8002f4a <_printf_i+0xb2>
 8002f08:	2970      	cmp	r1, #112	; 0x70
 8002f0a:	d1dd      	bne.n	8002ec8 <_printf_i+0x30>
 8002f0c:	6823      	ldr	r3, [r4, #0]
 8002f0e:	f043 0320 	orr.w	r3, r3, #32
 8002f12:	6023      	str	r3, [r4, #0]
 8002f14:	e003      	b.n	8002f1e <_printf_i+0x86>
 8002f16:	2975      	cmp	r1, #117	; 0x75
 8002f18:	d017      	beq.n	8002f4a <_printf_i+0xb2>
 8002f1a:	2978      	cmp	r1, #120	; 0x78
 8002f1c:	d1d4      	bne.n	8002ec8 <_printf_i+0x30>
 8002f1e:	2378      	movs	r3, #120	; 0x78
 8002f20:	4865      	ldr	r0, [pc, #404]	; (80030b8 <_printf_i+0x220>)
 8002f22:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002f26:	e055      	b.n	8002fd4 <_printf_i+0x13c>
 8002f28:	6813      	ldr	r3, [r2, #0]
 8002f2a:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002f2e:	1d19      	adds	r1, r3, #4
 8002f30:	681b      	ldr	r3, [r3, #0]
 8002f32:	6011      	str	r1, [r2, #0]
 8002f34:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002f38:	2301      	movs	r3, #1
 8002f3a:	e08c      	b.n	8003056 <_printf_i+0x1be>
 8002f3c:	681b      	ldr	r3, [r3, #0]
 8002f3e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8002f42:	6011      	str	r1, [r2, #0]
 8002f44:	bf18      	it	ne
 8002f46:	b21b      	sxthne	r3, r3
 8002f48:	e7cf      	b.n	8002eea <_printf_i+0x52>
 8002f4a:	6813      	ldr	r3, [r2, #0]
 8002f4c:	6825      	ldr	r5, [r4, #0]
 8002f4e:	1d18      	adds	r0, r3, #4
 8002f50:	6010      	str	r0, [r2, #0]
 8002f52:	0628      	lsls	r0, r5, #24
 8002f54:	d501      	bpl.n	8002f5a <_printf_i+0xc2>
 8002f56:	681b      	ldr	r3, [r3, #0]
 8002f58:	e002      	b.n	8002f60 <_printf_i+0xc8>
 8002f5a:	0668      	lsls	r0, r5, #25
 8002f5c:	d5fb      	bpl.n	8002f56 <_printf_i+0xbe>
 8002f5e:	881b      	ldrh	r3, [r3, #0]
 8002f60:	296f      	cmp	r1, #111	; 0x6f
 8002f62:	bf14      	ite	ne
 8002f64:	220a      	movne	r2, #10
 8002f66:	2208      	moveq	r2, #8
 8002f68:	4852      	ldr	r0, [pc, #328]	; (80030b4 <_printf_i+0x21c>)
 8002f6a:	2100      	movs	r1, #0
 8002f6c:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8002f70:	6865      	ldr	r5, [r4, #4]
 8002f72:	2d00      	cmp	r5, #0
 8002f74:	60a5      	str	r5, [r4, #8]
 8002f76:	f2c0 8095 	blt.w	80030a4 <_printf_i+0x20c>
 8002f7a:	6821      	ldr	r1, [r4, #0]
 8002f7c:	f021 0104 	bic.w	r1, r1, #4
 8002f80:	6021      	str	r1, [r4, #0]
 8002f82:	2b00      	cmp	r3, #0
 8002f84:	d13d      	bne.n	8003002 <_printf_i+0x16a>
 8002f86:	2d00      	cmp	r5, #0
 8002f88:	f040 808e 	bne.w	80030a8 <_printf_i+0x210>
 8002f8c:	4665      	mov	r5, ip
 8002f8e:	2a08      	cmp	r2, #8
 8002f90:	d10b      	bne.n	8002faa <_printf_i+0x112>
 8002f92:	6823      	ldr	r3, [r4, #0]
 8002f94:	07db      	lsls	r3, r3, #31
 8002f96:	d508      	bpl.n	8002faa <_printf_i+0x112>
 8002f98:	6923      	ldr	r3, [r4, #16]
 8002f9a:	6862      	ldr	r2, [r4, #4]
 8002f9c:	429a      	cmp	r2, r3
 8002f9e:	bfde      	ittt	le
 8002fa0:	2330      	movle	r3, #48	; 0x30
 8002fa2:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002fa6:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002faa:	ebac 0305 	sub.w	r3, ip, r5
 8002fae:	6123      	str	r3, [r4, #16]
 8002fb0:	f8cd 8000 	str.w	r8, [sp]
 8002fb4:	463b      	mov	r3, r7
 8002fb6:	aa03      	add	r2, sp, #12
 8002fb8:	4621      	mov	r1, r4
 8002fba:	4630      	mov	r0, r6
 8002fbc:	f7ff fef6 	bl	8002dac <_printf_common>
 8002fc0:	3001      	adds	r0, #1
 8002fc2:	d14d      	bne.n	8003060 <_printf_i+0x1c8>
 8002fc4:	f04f 30ff 	mov.w	r0, #4294967295
 8002fc8:	b005      	add	sp, #20
 8002fca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002fce:	4839      	ldr	r0, [pc, #228]	; (80030b4 <_printf_i+0x21c>)
 8002fd0:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8002fd4:	6813      	ldr	r3, [r2, #0]
 8002fd6:	6821      	ldr	r1, [r4, #0]
 8002fd8:	1d1d      	adds	r5, r3, #4
 8002fda:	681b      	ldr	r3, [r3, #0]
 8002fdc:	6015      	str	r5, [r2, #0]
 8002fde:	060a      	lsls	r2, r1, #24
 8002fe0:	d50b      	bpl.n	8002ffa <_printf_i+0x162>
 8002fe2:	07ca      	lsls	r2, r1, #31
 8002fe4:	bf44      	itt	mi
 8002fe6:	f041 0120 	orrmi.w	r1, r1, #32
 8002fea:	6021      	strmi	r1, [r4, #0]
 8002fec:	b91b      	cbnz	r3, 8002ff6 <_printf_i+0x15e>
 8002fee:	6822      	ldr	r2, [r4, #0]
 8002ff0:	f022 0220 	bic.w	r2, r2, #32
 8002ff4:	6022      	str	r2, [r4, #0]
 8002ff6:	2210      	movs	r2, #16
 8002ff8:	e7b7      	b.n	8002f6a <_printf_i+0xd2>
 8002ffa:	064d      	lsls	r5, r1, #25
 8002ffc:	bf48      	it	mi
 8002ffe:	b29b      	uxthmi	r3, r3
 8003000:	e7ef      	b.n	8002fe2 <_printf_i+0x14a>
 8003002:	4665      	mov	r5, ip
 8003004:	fbb3 f1f2 	udiv	r1, r3, r2
 8003008:	fb02 3311 	mls	r3, r2, r1, r3
 800300c:	5cc3      	ldrb	r3, [r0, r3]
 800300e:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8003012:	460b      	mov	r3, r1
 8003014:	2900      	cmp	r1, #0
 8003016:	d1f5      	bne.n	8003004 <_printf_i+0x16c>
 8003018:	e7b9      	b.n	8002f8e <_printf_i+0xf6>
 800301a:	6813      	ldr	r3, [r2, #0]
 800301c:	6825      	ldr	r5, [r4, #0]
 800301e:	1d18      	adds	r0, r3, #4
 8003020:	6961      	ldr	r1, [r4, #20]
 8003022:	6010      	str	r0, [r2, #0]
 8003024:	0628      	lsls	r0, r5, #24
 8003026:	681b      	ldr	r3, [r3, #0]
 8003028:	d501      	bpl.n	800302e <_printf_i+0x196>
 800302a:	6019      	str	r1, [r3, #0]
 800302c:	e002      	b.n	8003034 <_printf_i+0x19c>
 800302e:	066a      	lsls	r2, r5, #25
 8003030:	d5fb      	bpl.n	800302a <_printf_i+0x192>
 8003032:	8019      	strh	r1, [r3, #0]
 8003034:	2300      	movs	r3, #0
 8003036:	4665      	mov	r5, ip
 8003038:	6123      	str	r3, [r4, #16]
 800303a:	e7b9      	b.n	8002fb0 <_printf_i+0x118>
 800303c:	6813      	ldr	r3, [r2, #0]
 800303e:	1d19      	adds	r1, r3, #4
 8003040:	6011      	str	r1, [r2, #0]
 8003042:	681d      	ldr	r5, [r3, #0]
 8003044:	6862      	ldr	r2, [r4, #4]
 8003046:	2100      	movs	r1, #0
 8003048:	4628      	mov	r0, r5
 800304a:	f000 f837 	bl	80030bc <memchr>
 800304e:	b108      	cbz	r0, 8003054 <_printf_i+0x1bc>
 8003050:	1b40      	subs	r0, r0, r5
 8003052:	6060      	str	r0, [r4, #4]
 8003054:	6863      	ldr	r3, [r4, #4]
 8003056:	6123      	str	r3, [r4, #16]
 8003058:	2300      	movs	r3, #0
 800305a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800305e:	e7a7      	b.n	8002fb0 <_printf_i+0x118>
 8003060:	6923      	ldr	r3, [r4, #16]
 8003062:	462a      	mov	r2, r5
 8003064:	4639      	mov	r1, r7
 8003066:	4630      	mov	r0, r6
 8003068:	47c0      	blx	r8
 800306a:	3001      	adds	r0, #1
 800306c:	d0aa      	beq.n	8002fc4 <_printf_i+0x12c>
 800306e:	6823      	ldr	r3, [r4, #0]
 8003070:	079b      	lsls	r3, r3, #30
 8003072:	d413      	bmi.n	800309c <_printf_i+0x204>
 8003074:	68e0      	ldr	r0, [r4, #12]
 8003076:	9b03      	ldr	r3, [sp, #12]
 8003078:	4298      	cmp	r0, r3
 800307a:	bfb8      	it	lt
 800307c:	4618      	movlt	r0, r3
 800307e:	e7a3      	b.n	8002fc8 <_printf_i+0x130>
 8003080:	2301      	movs	r3, #1
 8003082:	464a      	mov	r2, r9
 8003084:	4639      	mov	r1, r7
 8003086:	4630      	mov	r0, r6
 8003088:	47c0      	blx	r8
 800308a:	3001      	adds	r0, #1
 800308c:	d09a      	beq.n	8002fc4 <_printf_i+0x12c>
 800308e:	3501      	adds	r5, #1
 8003090:	68e3      	ldr	r3, [r4, #12]
 8003092:	9a03      	ldr	r2, [sp, #12]
 8003094:	1a9b      	subs	r3, r3, r2
 8003096:	42ab      	cmp	r3, r5
 8003098:	dcf2      	bgt.n	8003080 <_printf_i+0x1e8>
 800309a:	e7eb      	b.n	8003074 <_printf_i+0x1dc>
 800309c:	2500      	movs	r5, #0
 800309e:	f104 0919 	add.w	r9, r4, #25
 80030a2:	e7f5      	b.n	8003090 <_printf_i+0x1f8>
 80030a4:	2b00      	cmp	r3, #0
 80030a6:	d1ac      	bne.n	8003002 <_printf_i+0x16a>
 80030a8:	7803      	ldrb	r3, [r0, #0]
 80030aa:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80030ae:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80030b2:	e76c      	b.n	8002f8e <_printf_i+0xf6>
 80030b4:	08005a89 	.word	0x08005a89
 80030b8:	08005a9a 	.word	0x08005a9a

080030bc <memchr>:
 80030bc:	b510      	push	{r4, lr}
 80030be:	b2c9      	uxtb	r1, r1
 80030c0:	4402      	add	r2, r0
 80030c2:	4290      	cmp	r0, r2
 80030c4:	4603      	mov	r3, r0
 80030c6:	d101      	bne.n	80030cc <memchr+0x10>
 80030c8:	2300      	movs	r3, #0
 80030ca:	e003      	b.n	80030d4 <memchr+0x18>
 80030cc:	781c      	ldrb	r4, [r3, #0]
 80030ce:	3001      	adds	r0, #1
 80030d0:	428c      	cmp	r4, r1
 80030d2:	d1f6      	bne.n	80030c2 <memchr+0x6>
 80030d4:	4618      	mov	r0, r3
 80030d6:	bd10      	pop	{r4, pc}

080030d8 <memcpy>:
 80030d8:	b510      	push	{r4, lr}
 80030da:	1e43      	subs	r3, r0, #1
 80030dc:	440a      	add	r2, r1
 80030de:	4291      	cmp	r1, r2
 80030e0:	d100      	bne.n	80030e4 <memcpy+0xc>
 80030e2:	bd10      	pop	{r4, pc}
 80030e4:	f811 4b01 	ldrb.w	r4, [r1], #1
 80030e8:	f803 4f01 	strb.w	r4, [r3, #1]!
 80030ec:	e7f7      	b.n	80030de <memcpy+0x6>

080030ee <memmove>:
 80030ee:	4288      	cmp	r0, r1
 80030f0:	b510      	push	{r4, lr}
 80030f2:	eb01 0302 	add.w	r3, r1, r2
 80030f6:	d807      	bhi.n	8003108 <memmove+0x1a>
 80030f8:	1e42      	subs	r2, r0, #1
 80030fa:	4299      	cmp	r1, r3
 80030fc:	d00a      	beq.n	8003114 <memmove+0x26>
 80030fe:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003102:	f802 4f01 	strb.w	r4, [r2, #1]!
 8003106:	e7f8      	b.n	80030fa <memmove+0xc>
 8003108:	4283      	cmp	r3, r0
 800310a:	d9f5      	bls.n	80030f8 <memmove+0xa>
 800310c:	1881      	adds	r1, r0, r2
 800310e:	1ad2      	subs	r2, r2, r3
 8003110:	42d3      	cmn	r3, r2
 8003112:	d100      	bne.n	8003116 <memmove+0x28>
 8003114:	bd10      	pop	{r4, pc}
 8003116:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800311a:	f801 4d01 	strb.w	r4, [r1, #-1]!
 800311e:	e7f7      	b.n	8003110 <memmove+0x22>

08003120 <_realloc_r>:
 8003120:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003122:	4607      	mov	r7, r0
 8003124:	4614      	mov	r4, r2
 8003126:	460e      	mov	r6, r1
 8003128:	b921      	cbnz	r1, 8003134 <_realloc_r+0x14>
 800312a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800312e:	4611      	mov	r1, r2
 8003130:	f7ff bc5e 	b.w	80029f0 <_malloc_r>
 8003134:	b922      	cbnz	r2, 8003140 <_realloc_r+0x20>
 8003136:	f7ff fc0f 	bl	8002958 <_free_r>
 800313a:	4625      	mov	r5, r4
 800313c:	4628      	mov	r0, r5
 800313e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003140:	f000 f814 	bl	800316c <_malloc_usable_size_r>
 8003144:	42a0      	cmp	r0, r4
 8003146:	d20f      	bcs.n	8003168 <_realloc_r+0x48>
 8003148:	4621      	mov	r1, r4
 800314a:	4638      	mov	r0, r7
 800314c:	f7ff fc50 	bl	80029f0 <_malloc_r>
 8003150:	4605      	mov	r5, r0
 8003152:	2800      	cmp	r0, #0
 8003154:	d0f2      	beq.n	800313c <_realloc_r+0x1c>
 8003156:	4631      	mov	r1, r6
 8003158:	4622      	mov	r2, r4
 800315a:	f7ff ffbd 	bl	80030d8 <memcpy>
 800315e:	4631      	mov	r1, r6
 8003160:	4638      	mov	r0, r7
 8003162:	f7ff fbf9 	bl	8002958 <_free_r>
 8003166:	e7e9      	b.n	800313c <_realloc_r+0x1c>
 8003168:	4635      	mov	r5, r6
 800316a:	e7e7      	b.n	800313c <_realloc_r+0x1c>

0800316c <_malloc_usable_size_r>:
 800316c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003170:	1f18      	subs	r0, r3, #4
 8003172:	2b00      	cmp	r3, #0
 8003174:	bfbc      	itt	lt
 8003176:	580b      	ldrlt	r3, [r1, r0]
 8003178:	18c0      	addlt	r0, r0, r3
 800317a:	4770      	bx	lr

0800317c <_init>:
 800317c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800317e:	bf00      	nop
 8003180:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003182:	bc08      	pop	{r3}
 8003184:	469e      	mov	lr, r3
 8003186:	4770      	bx	lr

08003188 <_fini>:
 8003188:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800318a:	bf00      	nop
 800318c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800318e:	bc08      	pop	{r3}
 8003190:	469e      	mov	lr, r3
 8003192:	4770      	bx	lr
